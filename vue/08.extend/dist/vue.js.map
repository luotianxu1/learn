{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/global-api/extend.js","../src/global-api/index.js","../src/compiler/generate.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observer/dep.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function'\n}\n\nexport function isObject(val) {\n    return typeof val == 'object' && val !== null\n}\n\n// 代理\nexport function proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        },\n    })\n}\n\nexport function defineProperty(target, key, value) {\n    Object.defineProperty(target, key, {\n        enumerable: false, // 不能被枚举\n        configurable: false,\n        value,\n    })\n}\n\nexport const lifeCycleHooks = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n]\n// 策略模式\nlet strats = {} // 存放各种策略\nstrats.components = function (parentVal, childVal) {\n    const res = Object.create(parentVal) //res.__protp__ = parentVal\n    if (childVal) {\n        for (let key in childVal) {\n            res[key] = childVal[key]\n        }\n    }\n    return res\n}\n\n// strats.data = function (parentVal, childVal) {\n//     // 这里应该有合并策略\n//     return childVal\n// }\n// strats.computed = function () {}\n// strats.watch = function () {}\n\n// 生命周期的合并\nfunction mergeHook(parentVal, childVal) {\n    if (childVal) {\n        if (parentVal) {\n            return parentVal.concat(childVal) // 后续\n        } else {\n            return [childVal] // 第一次\n        }\n    } else {\n        return parentVal\n    }\n}\nlifeCycleHooks.forEach((hook) => {\n    strats[hook] = mergeHook\n})\n\nexport function mergeOptions(parent, child) {\n    // 遍历父亲，可能是父亲有，儿子没有\n    const options = {}\n\n    for (let key in parent) {\n        // 父亲和儿子都有在这就处理了\n        mergeField(key)\n    }\n\n    // 儿子有父亲没有\n    for (let key in child) {\n        if (parent.hasOwnProperty(key)) {\n            continue\n        }\n        mergeField(key)\n    }\n\n    function mergeField(key) {\n        let parentVal = parent[key]\n        let childVal = child[key]\n        // 策略模式\n        if (strats[key]) {\n            // 如果有对应的策略就调用对应的策略即可\n            options[key] = strats[key](parentVal, childVal)\n        } else {\n            if (isObject(parentVal) && isObject(childVal)) {\n                options[key] = { ...parentVal, ...childVal }\n            } else {\n                // 父亲中有，儿子中没有\n                options[key] = child[key] || parent[key]\n            }\n        }\n    }\n\n    return options\n}\n\nlet callbacks = []\nlet pending = false\n\nfunction flushCallbacks() {\n    callbacks.forEach((cb) => cb()) // 让nextTick中传入的方法依次执行\n    pending = false // 标识已经执行完毕\n    callbacks = []\n}\n\nfunction timer(flushCallbacks) {\n    let timerFn = () => {}\n    if (Promise) {\n        timerFn = () => {\n            Promise.resolve().then(flushCallbacks)\n        }\n    } else if (MutationObserver) {\n        let textNode = document.createTextNode(1)\n        let observe = new MutationObserver(flushCallbacks)\n        observe.observe(textNode, {\n            characterData: true,\n        })\n        timerFn = () => {\n            textNode.textContent = 3\n        }\n        // 微任务\n    } else if (setImmediate) {\n        timerFn = () => {\n            setImmediate(flushCallbacks)\n        }\n    } else {\n        timerFn = () => {\n            setTimeout(flushCallbacks)\n        }\n    }\n    timerFn()\n}\n\nexport function nextTick(cb) {\n    // 因为内部会调用nextTick 用户也会调用，但是异步只需要一次\n    callbacks.push(cb)\n    if (!pending) {\n        timer(flushCallbacks) // 这个方法是异步方法 做了兼容处理\n        pending = true\n    }\n}\n\nfunction makeMap(str) {\n    const mapping = {}\n    const list = str.split(',')\n    for (let i = 0; i < list.length; i++) {\n        mapping[list[i]] = true\n    }\n    // 判断这个标签名是不是原声标签\n    return (key) => {\n        return mapping[key]\n    }\n}\n\nexport function isReservedTag(str) {\n    let reservedTag = 'a,div,span,p,img,button,ul,li'\n    // 源码根据 “，” 生成映射表 {a:true,div:true,p:true}\n    return reservedTag.includes(str)\n}\n","import { mergeOptions } from '../utils'\n\nexport default function initExtend(Vue) {\n    let cid = 0\n    // 核心就是创造一个子类继承我们的父类\n    Vue.extend = function (extendOptions) {\n        // 如果对象相同 应该复用构造函数\n        const Super = this\n        const Sub = function VueComponent(options) {\n            this._init(options)\n        }\n        Sub.cid = cid++\n        // 子类要继承父类原型上的方法,原型继承\n        Sub.prototype = Object.create(Super.prototype)\n        Sub.prototype.constructor = Sub\n\n        // 处理其他的属性 mixin component...\n        Sub.options = mergeOptions(Super.options, extendOptions)\n        Sub.components = Super.components\n        return Sub\n    }\n}\n\n// 组件的渲染流程\n// 1、调用Vue.component\n// 2、内部用的是Vue.extend 就是产生一个子类继承父类\n// 3、等会创建子类实例会调用父类的_init方法 再$mount即可\n// 4、组件的初始化就是new这个组件的构造函数并且调用$mount方法\n// 5、创建虚拟节点 根据标签晒出组件对应,生成组件的虚拟节点 conponentOption里面包含Ctor\n// 6、组件创建真实dom时，先渲染的是父组件，遇到是组件的虚拟节点时，去调用init方法，让组件初始化并挂载，组件的$mount午餐书会把渲染后的dom放到vm.$el上=》vnode.componentInstance中，这样渲染时就会获取这个对象的$el属性来渲染\n","import { mergeOptions } from '../utils'\nimport initExtend from './extend'\n\nexport function initGlobalApi(Vue) {\n    Vue.options = {} // 用来存放全局的配置 , 每个组件初始化的时候都会和options选项进行合并\n\n    // initMixin()\n    Vue.mixin = function (options) {\n        // 合并对象 先考虑生命周期，先不考虑其他的合并\n        this.options = mergeOptions(this.options, options)\n        return this\n    }\n\n    Vue.options._base = Vue // _base最终的Vue的构造函数保留在options对象中\n    Vue.options.components = {} //全局组件\n\n    initExtend(Vue)\n\n    Vue.component = function (id, definition) {\n        definition.name = definition.name || id // 默认会以name属性为准\n        // 根据当前组件对象 生成了一个子类的构造哦函数\n        // 用的时候得new definition().$mount()\n        definition = this.options._base.extend(definition) // 永远是父类\n        // Vue.components 注册组件 等价于Vue.options.components[id] = definition\n        Vue.options.components[id] = definition\n    }\n}\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{aaaaa}}\n\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            let obj = {}\n            attr.value.split(';').forEach((item) => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        // element = 1 text = 3\n        return generate(el) // 生成元素节点\n    } else {\n        let text = el.text\n        // 如果是普通文本 不带{{}}\n        if (!defaultTagRE.test(text)) {\n            return `_v('${text}')`\n        } else {\n            let tokens = [] // 存放每一段的代码\n            let lastIndex = (defaultTagRE.lastIndex = 0) // 如果正则是全局模式，则每次使用前置为0\n            let match // 每次匹配到的结果\n            while ((match = defaultTagRE.exec(text))) {\n                let index = match.index // 保存匹配到的索引\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children // 获取儿子\n    if (children) {\n        return children.map((c) => gen(c)).join(',')\n    }\n    return false\n}\n\nexport function generate(el) {\n    let children = genChildren(el)\n    let code = `_c('${el.tag}',${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n    }${children ? `,${children}` : ''})`\n    return code\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // 标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //  用来获取的标签名的 match后的索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配开始标签的\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配闭合标签的\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute =\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/ //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{aaaaa}}\n\nexport function parseHTML(html) {\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName, //标签名\n            type: 1, // 元素类型\n            children: [], // 孩子列表\n            attrs, // 属性集合\n            parent: null, // 父元素\n        }\n    }\n\n    let root\n    let currentParent\n    let stack = []\n\n    // 开始标签\n    function start(tagName, attrs) {\n        let element = createASTElement(tagName, attrs)\n        if (!root) {\n            root = element\n        }\n        currentParent = element // 当前解析的标签保存起来\n        stack.push(element)\n    }\n\n    // 在结尾标签处创建父子关系\n    function end(tagName) {\n        let last = stack.pop()\n        if (last.tag !== tagName) {\n            throw new Error('标签有误')\n        }\n        currentParent = stack[stack.length - 1]\n        if (currentParent) {\n            last.parent = currentParent\n            currentParent.children.push(last)\n        }\n    }\n\n    function charts(text) {\n        text = text.replace(/\\s/g, '')\n        if (text) {\n            currentParent.children.push({\n                type: 3,\n                text,\n            })\n        }\n    }\n\n    // 截取字符串\n    function advance(n) {\n        html = html.substring(n)\n    }\n    // 匹配开始\n    function parseStartTag() {\n        const start = html.match(startTagOpen)\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: [],\n            }\n            // 删除开始标签\n            advance(start[0].length)\n\n            // 不是结尾并且有属性\n            let end\n            let attr\n            while (\n                !(end = html.match(startTagClose)) &&\n                (attr = html.match(attribute))\n            ) {\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5],\n                })\n                advance(attr[0].length)\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match\n        }\n        return false // 不是开始标签\n    }\n    // 只要html不为空就一直解析\n    while (html) {\n        let textEnd = html.indexOf('<')\n        if (textEnd == 0) {\n            // 开始标签\n            const startTagMatch = parseStartTag()\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            // 结束标签\n            const endTagMatch = html.match(endTag)\n            if (endTagMatch) {\n                end(endTagMatch[1])\n                advance(endTagMatch[0].length)\n                continue\n            }\n        }\n        // 文本\n        let text\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            charts(text)\n            advance(text.length)\n        }\n    }\n\n    return root\n}\n","// html => render函数\n// ast语法树\nimport { generate } from './generate'\nimport { parseHTML } from './parse'\n\nexport function compileToFunctions(template) {\n    // 1、需要将html代码转化成ast语法树 可以用ast树来描述语言本身\n    let ast = parseHTML(template)\n    // 2、优化静态节点\n    // 3、通过这棵树 重新生成代码\n    let code = generate(ast)\n    // 4、将字符串变成函数 通过with来进行取值 稍后调用render函数就可以通过该变this 让这个函数内部取到结果\n    let render = new Function(`with(this){return ${code}}`)\n    return render\n}\n","let id = 0\nclass Dep {\n    constructor() {\n        this.subs = [] // 用来存放watcher的\n        this.id = id++\n    }\n    depend() {\n        Dep.target.addDep(this) // 实现双向记忆，让watcher记住dep的同时，让dep也记住wathcer\n    }\n    addSub(watcher) {\n        this.subs.push(watcher)\n    }\n    notify() {\n        this.subs.forEach((watcher) => watcher.update())\n    }\n}\n\nDep.target = null\nlet stack = []\nexport function pushTarget(watcher) {\n    Dep.target = watcher\n    stack.push(watcher)\n}\n\nexport function popTarget() {\n    Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep\n\n// 多对多的关系 一个属性有一个dep，dep是用来收集watcher的\n// dep可以存多个watcher\n// 1个watcher可以对应多个dep\n","import { nextTick } from '../utils'\n\nlet queue = [] // 将需要批量更新的watcher存到一个队列中，稍后让watcher执行\nlet has = {}\nlet pending = false\n\nfunction flushSchedulerQueue() {\n    queue.forEach((watcher) => {\n        watcher.run()\n        if (watcher.isWatcher) {\n            watcher.cb()\n        }\n    })\n    queue = [] // 清空watcher队列\n    has = {} // 清空标识id\n    pending = false\n}\n\nexport function queueWatcher(watcher) {\n    const id = watcher.id\n    if (has[id] == null) {\n        queue.push(watcher) // 将watcher存到队列中\n        has[id] = true\n\n        if (!pending) {\n            //如果还没清空队列，就不要再开定时器\n            // 等待所有同步代码执行完毕后再执行\n            nextTick(flushSchedulerQueue)\n            pending = true\n        }\n    }\n}\n","import { popTarget, pushTarget } from './dep'\nimport { queueWatcher } from './scheduler'\n\nlet id = 0\nclass Watcher {\n    // vm实例\n    // exprOrFn vm._update(vm._render())\n    constructor(vm, exprOrFn, cb, options) {\n        this.vm = vm\n        this.exprOrFn = exprOrFn\n        this.cb = cb\n        this.options = options\n        this.isWatcher = typeof options == 'boolean' // 是否为渲染watcher\n        this.user = !!options.user // 是否为用户watcher\n        this.lazy = !!options.lazy // 如果watcher上有lazy属性 说明是一个计算属性\n        this.dirty = options.lazy // dirty代表取值时是否执行用户提供的方法\n        this.id = id++ // watcher的唯一标识\n        this.deps = [] //记录有多少dep依赖它\n        this.depsId = new Set()\n\n        if (typeof exprOrFn == 'function') {\n            this.getter = exprOrFn\n        } else {\n            // exprOrFn可能传递过来的是一个字符串\n            this.getter = function () {\n                // 当去当前实例上取值时，才会出发依赖收集\n                // age.n  vm['age.n']  =》 vm['age']['n']\n                let path = exprOrFn.split('.') // [age,n]\n                let obj = vm\n                for (let i = 0; i < path.length; i++) {\n                    obj = obj[path[i]]\n                }\n                return obj\n            }\n        }\n        // 默认会先调用一次get方法，进行取值，将结果保留下来\n        this.value = this.lazy ? void 0 : this.get() // 默认会调用get方法\n    }\n    addDep(dep) {\n        let id = dep.id\n        if (!this.depsId.has(id)) {\n            this.deps.push(dep)\n            this.depsId.add(id)\n            dep.addSub(this)\n        }\n    }\n    get() {\n        pushTarget(this) // 当前watcher实例\n        let result = this.getter.call(this.vm) // 调用exporOrFn 渲染页面 取值（执行了get方法）\n        this.getter()\n        popTarget()\n        return result\n    }\n    run() {\n        let newValue = this.get()\n        let oldValue = this.value\n        this.value = newValue // 更新老值\n        if (this.user) {\n            this.cb.call(this.vm, newValue, oldValue)\n        }\n    }\n    update() {\n        if (this.lazy) {\n            // 是计算属性\n            this.dirty = true\n        } else {\n            // 这里不要每次都调用get方法 get方法会重新渲染页面\n            queueWatcher(this)\n        }\n    }\n    evaluate() {\n        this.dirty = false // 　取过一次值之后就表示已经取过值了\n        this.value = this.get()\n    }\n    depend() {\n        let i = this.deps.length\n        while (i--) {\n            this.deps[i].depend() // 让depend存储渲染watcher\n        }\n    }\n}\n\nexport default Watcher\n\n// 在数据劫持的时候给每个属性都增加了一个dep\n\n// 1.x先把这个渲染watcher放到Dep.taeget属性上\n// 2.开始渲染，取值会调用get方法，需要让这个属性的dep存储当前的watcher\n// 3.页面上所需要的属性都会将这个watcher存在自己的dep中\n// 4.属性更新就重新调用渲染逻辑，通知自己存储的watcher来更新\n","// 将虚拟节点转换成真实节点\n// oldVnode => id#app\n// vnode 我们根据模板生成的虚拟dom\nexport function patch(oldVnode, vnode) {\n    // 是组件 oldVnode是undefined\n    if (!oldVnode) {\n        return createElm(vnode) // vnode是组件中的内容\n    }\n    // 默认初始化时，是直接用虚拟节点穿件处真实节点 替换掉老节点\n    if (oldVnode.nodeType == 1) {\n        // 用vnode  来生成真实dom 替换原本的dom元素\n        const parentElm = oldVnode.parentNode // 找到他的父亲\n        let elm = createElm(vnode) //根据虚拟节点 创建元素\n        parentElm.insertBefore(elm, oldVnode.nextSibling)\n\n        parentElm.removeChild(oldVnode)\n\n        return elm\n    } else {\n        // 在更新的时候，拿老的虚拟节点和新的虚拟节点做对比，将不同的地方更新真实的dom\n        // 1、比较两个元素的标签，标签不一样直接替换掉即可\n        if (oldVnode.tag !== vnode.tag) {\n            return oldVnode.el.parentNode.replaceChild(\n                createElm(vnode),\n                oldVnode.el\n            )\n        }\n        // 标签一样直接复用即可\n        let el = (vnode.el = oldVnode.el) // 复用老节点\n\n        // 2、有可能是标签一样 <div>1</div> <div>2</div>\n        // 文本节点的虚拟节点tag都是undefined\n        // 文本的比对\n        if (vnode.tag == undefined) {\n            // 新老都是文本\n            if (oldVnode.text !== vnode.text) {\n                el.textContent = vnode.text\n            }\n            return\n        }\n\n        // 3、标签一样 并且需要开始比对标签属性和儿子\n        // 更新属性，用新的虚拟节点的属性和老的比较，去更新节点\n        updateProperties(vnode, oldVnode.data)\n\n        // 儿子比较氛围一下几种情况\n        let oldChildren = oldVnode.children || []\n        let newChildren = vnode.children || []\n        if (oldChildren.length > 0 && newChildren.length > 0) {\n            // 双方都有儿子\n            // vue用了双指针的方式 来比对\n            patchChildren(el, oldChildren, newChildren)\n        } else if (newChildren.length > 0) {\n            // 老的没儿子 但是新的有儿子\n            for (let i = 0; i < newChildren.length; i++) {\n                let child = createElm(newChildren[i])\n                el.appendChild(child) // 循环创建新节点\n            }\n        } else if (oldChildren.length > 0) {\n            // 老的有儿子 新的没有儿子\n            el.innerHTML = `` // 直接删除老节点\n        }\n        return el\n    }\n}\n\nfunction isSameVnode(oldVnode, newVnode) {\n    return oldVnode.tag == newVnode.tag && oldVnode.key == newVnode.key\n}\n\nfunction patchChildren(el, oldChildren, newChildren) {\n    // DOM中操作有很多常见的逻辑 把节点插入到当前儿子的头部、尾部、儿子倒叙正序\n\n    let oldStartIndex = 0 // 老的索引\n    let oldStartVnode = oldChildren[0] // 老的索引指向的节点\n    let oldEndIndex = oldChildren.length - 1\n    let oldEndVnode = oldChildren[oldEndIndex]\n    let newStartIndex = 0\n    let newStartVnode = newChildren[0]\n    let newEndIndex = newChildren.length - 1\n    let newEndVnode = newChildren[newEndIndex]\n\n    const makeIndexByKey = (children) => {\n        return children.reduce((memo, current, index) => {\n            if (current.key) {\n                memo[current.key] = index\n            }\n            return memo\n        }, {})\n    }\n    // 创建映射表\n    const keysMap = makeIndexByKey(oldChildren)\n\n    // 做一个循环同时循环老的和新的，哪个先结束 循环就停止，将多余的删除或者添加进去\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        // 头头比较 尾尾比较 头尾比较 尾头比较\n        // 优化了 向后添加， 向前添加，尾巴移动到头部，头部移动到尾部 ，反转\n        if (!oldStartVnode) {\n            // 已经被移动走了\n            oldStartVnode = oldChildren[++oldStartIndex]\n        } else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex]\n        }\n\n        // 同时循环新的节点和 老的节点，有一方循环完毕就结束了\n        if (isSameVnode(oldStartVnode, newStartVnode)) {\n            // 头头比较，发现标签一致，\n            patch(oldStartVnode, newStartVnode)\n            oldStartVnode = oldChildren[++oldStartIndex]\n            newStartVnode = newChildren[++newStartIndex]\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            // 从尾部开始比较\n            patch(oldEndVnode, newEndVnode)\n            oldEndVnode = oldChildren[--oldEndIndex]\n            newEndVnode = newChildren[--newEndIndex]\n        }\n\n        // 头尾比较  =》 reverse\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode)\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling) // 移动老的元素，老的元素就被移动走了，不用删除\n            oldStartVnode = oldChildren[++oldStartIndex]\n            newEndVnode = newChildren[--newEndIndex]\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // 尾头比较\n            patch(oldEndVnode, newStartVnode)\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el)\n            oldEndVnode = oldChildren[--oldEndIndex]\n            newStartVnode = newChildren[++newStartIndex]\n        } else {\n            // 乱序比对   核心diff\n            // 1.需要根据key和 对应的索引将老的内容生成程映射表\n            let moveIndex = keysMap[newStartVnode.key] // 用新的去老的中查找\n            // 不需要移动说明没有key复用的\n            if (moveIndex == undefined) {\n                // 如果不能复用直接创建新的插入到老的节点开头处\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n            } else {\n                let moveNode = oldChildren[moveIndex] // 老的虚拟节点\n                oldChildren[moveIndex] = null // 此节点已经被移动走了\n                el.insertBefore(moveNode.el, oldStartVnode.el)\n                patch(moveNode, newStartVnode) // 比较两个节点的属性\n            }\n            newStartVnode = newChildren[++newStartIndex]\n        }\n    }\n    //  如果老的多 将老节点删除 ， 但是可能里面有null 的情况\n    if (oldStartIndex <= oldEndIndex) {\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            if (oldChildren[i] !== null) el.removeChild(oldChildren[i].el)\n        }\n    }\n    // 如果用户追加了一个怎么办？\n\n    // 这里是没有比对完的\n    if (newStartIndex <= newEndIndex) {\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            // el.appendChild(createElm(newChildren[i]))\n            // insertBefore方法 他可以appendChild功能 insertBefore(节点,null)  dom api\n\n            //  看一下为指针的下一个元素是否存在\n            let anchor =\n                newChildren[newEndIndex + 1] == null\n                    ? null\n                    : newChildren[newEndIndex + 1].el\n            el.insertBefore(createElm(newChildren[i]), anchor)\n        }\n    }\n}\n\n// 创建真实节点的\nfunction createComponent(vnode) {\n    let i = vnode.data //  vnode.data.hook.init\n    if ((i = i.hook) && (i = i.init)) {\n        i(vnode) // 调用init方法\n    }\n    if (vnode.componentInstance) {\n        // 有属性说明子组件new完毕了，并且组件对应的真实DOM挂载到了componentInstance.$el\n        return true\n    }\n}\n\nexport function createElm(vnode) {\n    let { tag, data, children, text, vm } = vnode\n    if (typeof tag === 'string') {\n        if (createComponent(vnode)) {\n            // 返回组件对应的真实节点\n            return vnode.componentInstance.$el\n        }\n        // 元素\n        vnode.el = document.createElement(tag) // 虚拟节点会有一个el属性 对应真实节点\n        // 只有元素才有属性\n        updateProperties(vnode)\n\n        children.forEach((child) => {\n            vnode.el.appendChild(createElm(child))\n        })\n    } else {\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\nfunction updateProperties(vnode, oldProps = {}) {\n    let newProps = vnode.data || {} // 新的属性\n    let el = vnode.el\n\n    // 样式处理 老的style={color:red} 新的 style={background: red}\n    let newStyle = newProps.style || {}\n    let oldStyle = oldProps.style || {}\n    // 老的样式中有 新的没有 删除老的样式\n    for (let key in oldStyle) {\n        if (!newStyle[key]) {\n            // 新的里面不存在这个样式\n            el.style[key] = ''\n        }\n    }\n\n    // 老的有新的没有 需要删除属性\n    for (let key in oldProps) {\n        if (!newProps[key]) {\n            el.removeAttribute(key) // 移除真实dom的属性\n        }\n    }\n\n    // 新的有 那就直接用新的去做更新即可\n    for (let key in newProps) {\n        if (key == 'style') {\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName]\n            }\n        } else if (key == 'class') {\n            el.className = newProps.class\n        } else {\n            el.setAttribute(key, newProps[key])\n        }\n    }\n}\n","import Watcher from './observer/watcher'\nimport { patch } from './vdom/patch'\n\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        // 这里需要区分下到底是首次渲染还是更新\n        const prevVnode = vm._vnode\n        if (!prevVnode) {\n            // 用新的创建的元素，替换老的vm.$el\n            vm.$el = patch(vm.$el, vnode)\n        } else {\n            vm.$el = patch(prevVnode, vnode)\n        }\n        vm._vnode = vnode\n    }\n}\n\nexport function mountComponent(vm, el) {\n    vm.$el = el\n    // 调用render方法去渲染el属性\n    // 先调用render方法创建虚拟节点，再将虚拟节点渲染到页面上\n    callHook(vm, 'beforeMount')\n\n    let updateComponent = () => {\n        vm._update(vm._render())\n    }\n    // 这个watcher是用于渲染的，目前没有任何功能\n    let watcher = new Watcher(\n        vm,\n        updateComponent,\n        () => {\n            callHook(vm, 'updated')\n        },\n        true\n    )\n\n    callHook(vm, 'mounted')\n}\n\nexport function callHook(vm, hook) {\n    let handlers = vm.$options[hook]\n    if (handlers) {\n        for (let i = 0; i < handlers.length; i++) {\n            handlers[i].call(vm)\n        }\n    }\n}\n","// 拿到数组原型上的方法\nlet oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype)\n\nlet methods = ['push', 'shift', 'unshift', 'pop', 'reverse', 'sort', 'splice']\n\nmethods.forEach((method) => {\n    // 用户调用的如果是以上七个方法 会用我自己重写的，否则用原来的数组方法\n    arrayMethods[method] = function (...args) {\n        // 我们要知道数组对应哪个dep\n        //  args 是参数列表 arr.push(1,2,3)\n        oldArrayPrototype[method].call(this, ...args)\n        let inserted\n        let ob = this.__ob__ // 根据当前数组获取到observer实例\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args // 就是新增的内容\n                break\n            case 'splice':\n                inserted = args.slice(2)\n            default:\n                break\n        }\n        // 如果有新增的内容要进行继续劫持, 我需要观测的数组里的每一项，而不是数组\n        if (inserted) ob.observeArray(inserted)\n        ob.dep.notify()\n    }\n})\n","import { defineProperty, isObject } from '../utils'\nimport { arrayMethods } from './array'\nimport Dep from './dep'\n\nclass Observer {\n    constructor(data) {\n        this.dep = new Dep() // 数据可能是数组或者对象\n        // 判断一个对象是否被观测过，看他有没有__ob__这个属性\n        defineProperty(data, '__ob__', this)\n\n        // 使用defineProperty重新定义属性\n        if (Array.isArray(data)) {\n            // 函数劫持\n            data.__proto__ = arrayMethods\n            this.observeArray(data)\n        } else {\n            this.walk(data)\n        }\n    }\n    observeArray(data) {\n        // 对我们数组的数组 和 数组中的对象再次劫持 递归了 [{a:1},{b:2}]\n        data.forEach((item) => observe(item))\n    }\n    walk(data) {\n        Object.keys(data).forEach((key) => {\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n\nfunction defineReactive(data, key, value) {\n    let childDep = observe(value) // 获取到数组对应的dep\n\n    let dep = new Dep() // 每个属性都有一个dep\n\n    // 当页面取值时，说明这个值渲染了，将这个watcher和这个属性对应起来\n    Object.defineProperty(data, key, {\n        // 依赖收集\n        get() {\n            if (Dep.target) {\n                // 让属性记住这个watcher\n                dep.depend()\n                if (childDep) {\n                    // 默认给数组增加了一个dep属性，当对数组这个对象取值的时候\n                    childDep.dep.depend() // 数组存起来了这个渲染watcher\n                }\n            }\n            return value\n        },\n        // 依赖更新\n        set(newValue) {\n            if (newValue == value) return\n            observe(newValue) // 如果用户赋值一个新对象 ，需要将这个对象进行劫持\n            value = newValue\n            dep.notify() // 告诉当前的属性存放的watcher执行\n        },\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才观测\n    if (!isObject(data)) {\n        return\n    }\n    // 如果对象被观测过\n    if (data.__ob__) {\n        return\n    }\n    return new Observer(data)\n}\n","import { observe } from './observer/index'\nimport { isFunction, nextTick, proxy } from './utils'\nimport Watcher from './observer/watcher'\nimport Dep from './observer/dep'\n\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.methods) {\n        initMethods(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data\n    data = vm._data = isFunction(data) ? data.call(vm) : data\n\n    // 用户去vm.xxx => vm._data.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n\n    // 数据劫持\n    observe(vm._data)\n}\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initComputed(vm) {\n    let computed = vm.$options.computed\n    const watchers = (vm._computedWatchers = {}) // 稍后存放计算属性的\n    for (let key in computed) {\n        const userDef = computed[key] // 取出对应的值\n        // 获取get方法\n        const getter = typeof userDef == 'function' ? userDef : userDef.get // watcher使用\n\n        watchers[key] = new Watcher(vm, getter, () => {}, { lazy: true })\n        definecomputed(vm, key, userDef)\n    }\n}\nconst sharePropertyDefinition = {\n    enumerable: true,\n    configurable: true,\n    get: () => {},\n    set: () => {},\n}\nfunction definecomputed(target, key, userDef) {\n    if (typeof userDef == 'function') {\n        sharePropertyDefinition.get = createComputedGetter(key)\n    } else {\n        sharePropertyDefinition.get = createComputedGetter(key) // 需要加缓存\n        sharePropertyDefinition.set = userDef.set\n    }\n    Object.defineProperty(target, key, sharePropertyDefinition)\n}\n\nfunction createComputedGetter(key) {\n    // 此方法是我们包装的方法 每次取值会调用此方法\n    return function computedGetter() {\n        const watcher = this._computedWatchers[key] //拿到属性对应的watcher\n        if (watcher) {\n            // 判断到底要不要执行用户传递的方法\n            if (watcher.dirty) {\n                watcher.evaluate() // 对当前的watcher求值\n            }\n            if (Dep.target) {\n                watcher.depend()\n            }\n            return watcher.value // 默认返回watcher上\n        }\n    }\n}\n\nfunction initWatch(vm) {\n    let watch = vm.$options.watch\n    for (let key in watch) {\n        const handler = watch[key] //handler可能是数组、字符串、对象、函数\n        if (Array.isArray(handler)) {\n            //数组\n            handler.forEach((handler) => {\n                createWatcher(vm, key, handler)\n            })\n        } else {\n            createWatcher(vm, key, handler) //字符串、对象、函数\n        }\n    }\n}\n\n// options可以用来标识是用户watcher\nfunction createWatcher(vm, exprOrFn, handler, options) {\n    if (typeof handler == 'object') {\n        options = handler\n        handler = handler.handler // 是一个函数\n    }\n    if (typeof handler == 'string') {\n        handler = vm[handler] // 将实例的方法作为handler\n    }\n    return vm.$watch(exprOrFn, handler, options)\n}\n\nexport function stateMixin(Vue) {\n    Vue.prototype.$nextTick = function (cb) {\n        nextTick(cb)\n    }\n    Vue.prototype.$watch = function (exprOrFn, cb, options = {}) {\n        // 数据应该依赖这个watcher 数据变化后应该让watcher从新执行\n        // vm,name,用户回调，options.user\n        new Watcher(this, exprOrFn, cb, { ...options, user: true })\n        if (options.immediate) {\n            cb() // 如果是immediate应该立刻执行\n        }\n    }\n}\n","import { compileToFunctions } from './compiler/index'\nimport { callHook, mountComponent } from './lifecycle'\nimport { initState } from './state'\nimport { mergeOptions } from './utils'\n\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        const vm = this\n        vm.$options = mergeOptions(vm.constructor.options, options) // 需要将用户自定义的options和全局options合并\n\n        callHook(vm, 'beforeCreate')\n        // 对数据进行初始化\n        initState(vm)\n        callHook(vm, 'created')\n\n        // 如果当前有el属性说明要渲染模板\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    // 1、render 2、template 3、外部template\n    Vue.prototype.$mount = function (el) {\n        // 挂载操作\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        vm.$el = el\n\n        if (!options.render) {\n            //没有render 将template转换成render方法\n            let template = options.template\n            if (!template && el) {\n                template = el.outerHTML\n            }\n            // 编译原理 将模板编译成render函数\n            const render = compileToFunctions(template)\n            options.render = render\n        }\n        // console.log(options.render) // 渲染时用的都是这个render方法\n        // 有render方法\n\n        // 需要挂载这个组件\n        mountComponent(vm, el)\n    }\n}\n","import { isObject, isReservedTag } from '../utils'\n\nexport function renderMixin(Vue) {\n    // 创建元素\n    Vue.prototype._c = function () {\n        return createElement(this, ...arguments)\n    }\n    // 创建虚拟dom文本元素\n    Vue.prototype._v = function (text) {\n        return createTextElement(this, text)\n    }\n    // stringity\n    Vue.prototype._s = function (val) {\n        if (typeof val == 'object') return JSON.stringify(val)\n        return val\n    }\n    Vue.prototype._render = function () {\n        const vm = this\n        let render = vm.$options.render // 就是我们解析出来的render方法，同时也有可能是用户写的\n        let vnode = render.call(vm)\n        return vnode\n    }\n}\n\nexport function createElement(vm, tag, data = {}, ...children) {\n    // 如果是组件 产生虚拟节点时需要把组件的构造函数传入\n    // new Ctor().$mount()\n    // 根据tag名字 需要判断他是不是一个组件\n    if (isReservedTag(tag)) {\n        return vnode(vm, tag, data, data.key, children, undefined)\n    } else {\n        const Ctor = vm.$options.components[tag]\n        // 创建组件的虚拟节点 children就是组件的插槽了\n        return createComponent(vm, tag, data, data.key, children, Ctor)\n    }\n}\n\nfunction createComponent(vm, tag, data, key, children, Ctor) {\n    if (isObject(Ctor)) {\n        Ctor = vm.$options._base.extend(Ctor) // Vue.extend\n    }\n    // 给组件增加生命周期\n    data.hook = {\n        init(vnode) {\n            let child = (vnode.componentInstance = new Ctor({\n                _isComponent: true,\n            })) // new Sub 会用此选项和组件的配置进行合并\n            child.$mount() // 组件挂载完成后 会在 vnode.componentInstance.$el => <button>\n        },\n    }\n    let component = vnode(\n        vm,\n        `vue-component-${Ctor.cid}-${tag}`,\n        data,\n        key,\n        undefined,\n        undefined,\n        { Ctor, children }\n    )\n    return component\n}\n\nexport function createTextElement(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(vm, tag, data, key, children, text, componentOptions) {\n    return {\n        vm,\n        tag,\n        data,\n        key,\n        children,\n        text,\n        componentOptions, //组件的虚拟节点多了一个componentOptions属性 用来保存当前组件的构造函数，和它的插槽\n        // .....\n    }\n}\n","import { initGlobalApi } from './global-api/index'\nimport { initMixin } from './init'\nimport { lifecycleMixin } from './lifecycle'\nimport { stateMixin } from './state'\nimport { renderMixin } from './vdom/index'\n\nfunction Vue(options) {\n    this._init(options) // 入口方法，做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue)\n// 混合生命周期 组件挂载、组件更新\nlifecycleMixin(Vue)\n// _render\nrenderMixin(Vue)\nstateMixin(Vue)\n\ninitGlobalApi(Vue)\n\n// 为了看到diff的整个流程，创建两个虚拟节点来进行比对操作\nlet vm1 = new Vue({\n    data: {\n        name: 'zf',\n    },\n})\nimport { compileToFunctions } from './compiler/index'\nimport { createElm, patch } from './vdom/patch'\nlet render1 = compileToFunctions(\n    `<div>\n        <li style=\"background:red\">A</li>\n        <li style=\"background:yellow\">B</li>\n        <li style=\"background:pink\">C</li>\n        <li style=\"background:green\">D</li>\n    </div>`\n)\nlet vnode1 = render1.call(vm1) // render方法返回虚拟dom\ndocument.body.appendChild(createElm(vnode1))\n\nlet vm2 = new Vue({\n    data: {\n        name: 'jw',\n    },\n})\nlet render2 = compileToFunctions(\n    `<div>\n        <li style=\"background:red\">A</li>\n        <li style=\"background:yellow\">B</li>\n        <li style=\"background:pink\">C</li>\n        <li style=\"background:green\">D</li>\n        <li style=\"background:blue\">E</li>\n    </div>`\n)\nlet vnode2 = render2.call(vm2) // render方法返回虚拟dom\n\nsetTimeout(() => {\n    patch(vnode1, vnode2) // 传入新的虚拟节点和老的对比\n}, 3000)\n\nexport default Vue\n"],"names":["isFunction","val","isObject","_typeof","proxy","vm","source","key","Object","defineProperty","get","set","newValue","target","value","enumerable","configurable","lifeCycleHooks","strats","components","parentVal","childVal","res","create","mergeHook","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","_objectSpread","callbacks","pending","flushCallbacks","cb","timer","timerFn","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","nextTick","push","isReservedTag","str","reservedTag","includes","initExtend","Vue","cid","extend","extendOptions","Super","Sub","VueComponent","_init","prototype","constructor","initGlobalApi","mixin","_base","component","id","definition","name","defaultTagRE","genProps","attrs","_loop","attr","i","obj","split","item","_item$split","_item$split2","_slicedToArray","JSON","stringify","length","slice","gen","el","type","generate","text","test","tokens","lastIndex","match","exec","index","trim","join","genChildren","children","map","c","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","root","currentParent","stack","start","element","end","last","pop","Error","charts","replace","advance","n","substring","parseStartTag","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","template","ast","render","Function","Dep","_classCallCheck","subs","_createClass","depend","addDep","addSub","watcher","notify","update","pushTarget","popTarget","queue","has","flushSchedulerQueue","run","isWatcher","queueWatcher","Watcher","exprOrFn","user","lazy","dirty","deps","depsId","Set","getter","path","dep","add","result","call","oldValue","evaluate","patch","oldVnode","vnode","createElm","nodeType","parentElm","parentNode","elm","insertBefore","nextSibling","removeChild","replaceChild","undefined","updateProperties","data","oldChildren","newChildren","patchChildren","appendChild","innerHTML","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","reduce","memo","current","keysMap","moveIndex","moveNode","anchor","createComponent","init","componentInstance","$el","createElement","oldProps","arguments","newProps","newStyle","style","oldStyle","removeAttribute","styleName","className","setAttribute","lifecycleMixin","_update","prevVnode","_vnode","mountComponent","callHook","updateComponent","_render","handlers","$options","oldArrayPrototype","Array","arrayMethods","methods","method","_oldArrayPrototype$me","_len","args","_key","apply","inserted","ob","__ob__","observeArray","Observer","isArray","__proto__","walk","keys","defineReactive","childDep","initState","opts","props","initData","computed","initComputed","watch","initWatch","_data","watchers","_computedWatchers","userDef","definecomputed","sharePropertyDefinition","createComputedGetter","computedGetter","handler","createWatcher","$watch","stateMixin","$nextTick","immediate","initMixin","$mount","querySelector","outerHTML","renderMixin","_c","_v","createTextElement","_s","Ctor","_isComponent","componentOptions","vm1","render1","vnode1","body","vm2","render2","vnode2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,UAAUA,CAACC,GAAG,EAAE;IAC5B,OAAO,OAAOA,GAAG,KAAK,UAAU,CAAA;EACpC,CAAA;EAEO,SAASC,QAAQA,CAACD,GAAG,EAAE;IAC1B,OAAOE,OAAA,CAAOF,GAAG,CAAA,IAAI,QAAQ,IAAIA,GAAG,KAAK,IAAI,CAAA;EACjD,CAAA;;EAEA;EACO,SAASG,KAAKA,CAACC,EAAE,EAAEC,MAAM,EAAEC,GAAG,EAAE;EACnCC,EAAAA,MAAM,CAACC,cAAc,CAACJ,EAAE,EAAEE,GAAG,EAAE;MAC3BG,GAAG,EAAA,SAAAA,MAAG;EACF,MAAA,OAAOL,EAAE,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,CAAA;OACzB;MACDI,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACVP,MAAAA,EAAE,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,GAAGK,QAAQ,CAAA;EAC9B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEO,SAASH,cAAcA,CAACI,MAAM,EAAEN,GAAG,EAAEO,KAAK,EAAE;EAC/CN,EAAAA,MAAM,CAACC,cAAc,CAACI,MAAM,EAAEN,GAAG,EAAE;EAC/BQ,IAAAA,UAAU,EAAE,KAAK;EAAE;EACnBC,IAAAA,YAAY,EAAE,KAAK;EACnBF,IAAAA,KAAK,EAALA,KAAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEO,IAAMG,cAAc,GAAG,CAC1B,cAAc,EACd,SAAS,EACT,aAAa,EACb,SAAS,EACT,cAAc,EACd,SAAS,EACT,eAAe,EACf,WAAW,CACd,CAAA;EACD;EACA,IAAIC,MAAM,GAAG,EAAE,CAAC;EAChBA,MAAM,CAACC,UAAU,GAAG,UAAUC,SAAS,EAAEC,QAAQ,EAAE;IAC/C,IAAMC,GAAG,GAAGd,MAAM,CAACe,MAAM,CAACH,SAAS,CAAC,CAAC;EACrC,EAAA,IAAIC,QAAQ,EAAE;EACV,IAAA,KAAK,IAAId,GAAG,IAAIc,QAAQ,EAAE;EACtBC,MAAAA,GAAG,CAACf,GAAG,CAAC,GAAGc,QAAQ,CAACd,GAAG,CAAC,CAAA;EAC5B,KAAA;EACJ,GAAA;EACA,EAAA,OAAOe,GAAG,CAAA;EACd,CAAC,CAAA;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,SAASE,SAASA,CAACJ,SAAS,EAAEC,QAAQ,EAAE;EACpC,EAAA,IAAIA,QAAQ,EAAE;EACV,IAAA,IAAID,SAAS,EAAE;EACX,MAAA,OAAOA,SAAS,CAACK,MAAM,CAACJ,QAAQ,CAAC,CAAC;EACtC,KAAC,MAAM;QACH,OAAO,CAACA,QAAQ,CAAC,CAAC;EACtB,KAAA;EACJ,GAAC,MAAM;EACH,IAAA,OAAOD,SAAS,CAAA;EACpB,GAAA;EACJ,CAAA;EACAH,cAAc,CAACS,OAAO,CAAC,UAACC,IAAI,EAAK;EAC7BT,EAAAA,MAAM,CAACS,IAAI,CAAC,GAAGH,SAAS,CAAA;EAC5B,CAAC,CAAC,CAAA;EAEK,SAASI,YAAYA,CAACC,MAAM,EAAEC,KAAK,EAAE;EACxC;IACA,IAAMC,OAAO,GAAG,EAAE,CAAA;EAElB,EAAA,KAAK,IAAIxB,GAAG,IAAIsB,MAAM,EAAE;EACpB;MACAG,UAAU,CAACzB,GAAG,CAAC,CAAA;EACnB,GAAA;;EAEA;EACA,EAAA,KAAK,IAAIA,IAAG,IAAIuB,KAAK,EAAE;EACnB,IAAA,IAAID,MAAM,CAACI,cAAc,CAAC1B,IAAG,CAAC,EAAE;EAC5B,MAAA,SAAA;EACJ,KAAA;MACAyB,UAAU,CAACzB,IAAG,CAAC,CAAA;EACnB,GAAA;IAEA,SAASyB,UAAUA,CAACzB,GAAG,EAAE;EACrB,IAAA,IAAIa,SAAS,GAAGS,MAAM,CAACtB,GAAG,CAAC,CAAA;EAC3B,IAAA,IAAIc,QAAQ,GAAGS,KAAK,CAACvB,GAAG,CAAC,CAAA;EACzB;EACA,IAAA,IAAIW,MAAM,CAACX,GAAG,CAAC,EAAE;EACb;EACAwB,MAAAA,OAAO,CAACxB,GAAG,CAAC,GAAGW,MAAM,CAACX,GAAG,CAAC,CAACa,SAAS,EAAEC,QAAQ,CAAC,CAAA;EACnD,KAAC,MAAM;QACH,IAAInB,QAAQ,CAACkB,SAAS,CAAC,IAAIlB,QAAQ,CAACmB,QAAQ,CAAC,EAAE;UAC3CU,OAAO,CAACxB,GAAG,CAAC,GAAA2B,cAAA,CAAAA,cAAA,CAAQd,EAAAA,EAAAA,SAAS,CAAKC,EAAAA,QAAQ,CAAE,CAAA;EAChD,OAAC,MAAM;EACH;EACAU,QAAAA,OAAO,CAACxB,GAAG,CAAC,GAAGuB,KAAK,CAACvB,GAAG,CAAC,IAAIsB,MAAM,CAACtB,GAAG,CAAC,CAAA;EAC5C,OAAA;EACJ,KAAA;EACJ,GAAA;EAEA,EAAA,OAAOwB,OAAO,CAAA;EAClB,CAAA;EAEA,IAAII,SAAS,GAAG,EAAE,CAAA;EAClB,IAAIC,SAAO,GAAG,KAAK,CAAA;EAEnB,SAASC,cAAcA,GAAG;EACtBF,EAAAA,SAAS,CAACT,OAAO,CAAC,UAACY,EAAE,EAAA;MAAA,OAAKA,EAAE,EAAE,CAAA;EAAA,GAAA,CAAC,CAAC;IAChCF,SAAO,GAAG,KAAK,CAAC;EAChBD,EAAAA,SAAS,GAAG,EAAE,CAAA;EAClB,CAAA;EAEA,SAASI,KAAKA,CAACF,cAAc,EAAE;EAC3B,EAAA,IAAIG,OAAO,GAAG,SAAAA,OAAA,GAAM,EAAE,CAAA;EACtB,EAAA,IAAIC,OAAO,EAAE;MACTD,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACN,cAAc,CAAC,CAAA;OACzC,CAAA;KACJ,MAAM,IAAIO,gBAAgB,EAAE;EACzB,IAAA,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC,CAAA;EACzC,IAAA,IAAIC,OAAO,GAAG,IAAIJ,gBAAgB,CAACP,cAAc,CAAC,CAAA;EAClDW,IAAAA,OAAO,CAACA,OAAO,CAACH,QAAQ,EAAE;EACtBI,MAAAA,aAAa,EAAE,IAAA;EACnB,KAAC,CAAC,CAAA;MACFT,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZK,QAAQ,CAACK,WAAW,GAAG,CAAC,CAAA;OAC3B,CAAA;EACD;KACH,MAAM,IAAIC,YAAY,EAAE;MACrBX,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZW,YAAY,CAACd,cAAc,CAAC,CAAA;OAC/B,CAAA;EACL,GAAC,MAAM;MACHG,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZY,UAAU,CAACf,cAAc,CAAC,CAAA;OAC7B,CAAA;EACL,GAAA;EACAG,EAAAA,OAAO,EAAE,CAAA;EACb,CAAA;EAEO,SAASa,QAAQA,CAACf,EAAE,EAAE;EACzB;EACAH,EAAAA,SAAS,CAACmB,IAAI,CAAChB,EAAE,CAAC,CAAA;IAClB,IAAI,CAACF,SAAO,EAAE;MACVG,KAAK,CAACF,cAAc,CAAC,CAAC;EACtBD,IAAAA,SAAO,GAAG,IAAI,CAAA;EAClB,GAAA;EACJ,CAAA;EAcO,SAASmB,aAAaA,CAACC,GAAG,EAAE;IAC/B,IAAIC,WAAW,GAAG,+BAA+B,CAAA;EACjD;EACA,EAAA,OAAOA,WAAW,CAACC,QAAQ,CAACF,GAAG,CAAC,CAAA;EACpC;;EC1Ke,SAASG,UAAUA,CAACC,GAAG,EAAE;IACpC,IAAIC,GAAG,GAAG,CAAC,CAAA;EACX;EACAD,EAAAA,GAAG,CAACE,MAAM,GAAG,UAAUC,aAAa,EAAE;EAClC;MACA,IAAMC,KAAK,GAAG,IAAI,CAAA;EAClB,IAAA,IAAMC,GAAG,GAAG,SAASC,YAAYA,CAACnC,OAAO,EAAE;EACvC,MAAA,IAAI,CAACoC,KAAK,CAACpC,OAAO,CAAC,CAAA;OACtB,CAAA;EACDkC,IAAAA,GAAG,CAACJ,GAAG,GAAGA,GAAG,EAAE,CAAA;EACf;MACAI,GAAG,CAACG,SAAS,GAAG5D,MAAM,CAACe,MAAM,CAACyC,KAAK,CAACI,SAAS,CAAC,CAAA;EAC9CH,IAAAA,GAAG,CAACG,SAAS,CAACC,WAAW,GAAGJ,GAAG,CAAA;;EAE/B;MACAA,GAAG,CAAClC,OAAO,GAAGH,YAAY,CAACoC,KAAK,CAACjC,OAAO,EAAEgC,aAAa,CAAC,CAAA;EACxDE,IAAAA,GAAG,CAAC9C,UAAU,GAAG6C,KAAK,CAAC7C,UAAU,CAAA;EACjC,IAAA,OAAO8C,GAAG,CAAA;KACb,CAAA;EACL,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EC1BO,SAASK,aAAaA,CAACV,GAAG,EAAE;EAC/BA,EAAAA,GAAG,CAAC7B,OAAO,GAAG,EAAE,CAAC;;EAEjB;EACA6B,EAAAA,GAAG,CAACW,KAAK,GAAG,UAAUxC,OAAO,EAAE;EAC3B;MACA,IAAI,CAACA,OAAO,GAAGH,YAAY,CAAC,IAAI,CAACG,OAAO,EAAEA,OAAO,CAAC,CAAA;EAClD,IAAA,OAAO,IAAI,CAAA;KACd,CAAA;EAED6B,EAAAA,GAAG,CAAC7B,OAAO,CAACyC,KAAK,GAAGZ,GAAG,CAAC;EACxBA,EAAAA,GAAG,CAAC7B,OAAO,CAACZ,UAAU,GAAG,EAAE,CAAC;;IAE5BwC,UAAU,CAACC,GAAG,CAAC,CAAA;EAEfA,EAAAA,GAAG,CAACa,SAAS,GAAG,UAAUC,EAAE,EAAEC,UAAU,EAAE;MACtCA,UAAU,CAACC,IAAI,GAAGD,UAAU,CAACC,IAAI,IAAIF,EAAE,CAAC;EACxC;EACA;MACAC,UAAU,GAAG,IAAI,CAAC5C,OAAO,CAACyC,KAAK,CAACV,MAAM,CAACa,UAAU,CAAC,CAAC;EACnD;MACAf,GAAG,CAAC7B,OAAO,CAACZ,UAAU,CAACuD,EAAE,CAAC,GAAGC,UAAU,CAAA;KAC1C,CAAA;EACL;;EC1BA,IAAME,YAAY,GAAG,0BAA0B,CAAC;;EAEhD,SAASC,QAAQA,CAACC,KAAK,EAAE;IACrB,IAAIvB,GAAG,GAAG,EAAE,CAAA;IAAA,IAAAwB,KAAA,GAAAA,SAAAA,KAAAA,GAC2B;EACnC,IAAA,IAAIC,IAAI,GAAGF,KAAK,CAACG,CAAC,CAAC,CAAA;EACnB,IAAA,IAAID,IAAI,CAACL,IAAI,KAAK,OAAO,EAAE;QACvB,IAAIO,GAAG,GAAG,EAAE,CAAA;EACZF,MAAAA,IAAI,CAACnE,KAAK,CAACsE,KAAK,CAAC,GAAG,CAAC,CAAC1D,OAAO,CAAC,UAAC2D,IAAI,EAAK;EACpC,QAAA,IAAAC,WAAA,GAAmBD,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC;YAAAG,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7B/E,UAAAA,GAAG,GAAAgF,YAAA,CAAA,CAAA,CAAA;EAAEzE,UAAAA,KAAK,GAAAyE,YAAA,CAAA,CAAA,CAAA,CAAA;EACfJ,QAAAA,GAAG,CAAC5E,GAAG,CAAC,GAAGO,KAAK,CAAA;EACpB,OAAC,CAAC,CAAA;QACFmE,IAAI,CAACnE,KAAK,GAAGqE,GAAG,CAAA;EACpB,KAAA;EACA3B,IAAAA,GAAG,OAAA/B,MAAA,CAAOwD,IAAI,CAACL,IAAI,EAAAnD,GAAAA,CAAAA,CAAAA,MAAA,CAAIgE,IAAI,CAACC,SAAS,CAACT,IAAI,CAACnE,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;KACvD,CAAA;EAXD,EAAA,KAAK,IAAIoE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACY,MAAM,EAAET,CAAC,EAAE,EAAA;MAAAF,KAAA,EAAA,CAAA;EAAA,GAAA;IAYrC,OAAAvD,GAAAA,CAAAA,MAAA,CAAW+B,GAAG,CAACoC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,CAAA;EAEA,SAASC,GAAGA,CAACC,EAAE,EAAE;EACb,EAAA,IAAIA,EAAE,CAACC,IAAI,IAAI,CAAC,EAAE;EACd;EACA,IAAA,OAAOC,QAAQ,CAACF,EAAE,CAAC,CAAC;EACxB,GAAC,MAAM;EACH,IAAA,IAAIG,IAAI,GAAGH,EAAE,CAACG,IAAI,CAAA;EAClB;EACA,IAAA,IAAI,CAACpB,YAAY,CAACqB,IAAI,CAACD,IAAI,CAAC,EAAE;QAC1B,OAAAxE,MAAAA,CAAAA,MAAA,CAAcwE,IAAI,EAAA,IAAA,CAAA,CAAA;EACtB,KAAC,MAAM;QACH,IAAIE,MAAM,GAAG,EAAE,CAAC;EAChB,MAAA,IAAIC,SAAS,GAAIvB,YAAY,CAACuB,SAAS,GAAG,CAAE,CAAC;EAC7C,MAAA,IAAIC,KAAK,CAAC;QACV,OAAQA,KAAK,GAAGxB,YAAY,CAACyB,IAAI,CAACL,IAAI,CAAC,EAAG;EACtC,QAAA,IAAIM,KAAK,GAAGF,KAAK,CAACE,KAAK,CAAC;UACxB,IAAIA,KAAK,GAAGH,SAAS,EAAE;EACnBD,UAAAA,MAAM,CAAC7C,IAAI,CAACmC,IAAI,CAACC,SAAS,CAACO,IAAI,CAACL,KAAK,CAACQ,SAAS,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAA;EAC7D,SAAA;EACAJ,QAAAA,MAAM,CAAC7C,IAAI,CAAA7B,KAAAA,CAAAA,MAAA,CAAO4E,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE,MAAG,CAAC,CAAA;UACrCJ,SAAS,GAAGG,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACV,MAAM,CAAA;EACvC,OAAA;EACA,MAAA,IAAIS,SAAS,GAAGH,IAAI,CAACN,MAAM,EAAE;EACzBQ,QAAAA,MAAM,CAAC7C,IAAI,CAACmC,IAAI,CAACC,SAAS,CAACO,IAAI,CAACL,KAAK,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,OAAA;EACA,MAAA,OAAA,KAAA,CAAA3E,MAAA,CAAa0E,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EACjC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,SAASC,WAAWA,CAACZ,EAAE,EAAE;EACrB,EAAA,IAAIa,QAAQ,GAAGb,EAAE,CAACa,QAAQ,CAAC;EAC3B,EAAA,IAAIA,QAAQ,EAAE;EACV,IAAA,OAAOA,QAAQ,CAACC,GAAG,CAAC,UAACC,CAAC,EAAA;QAAA,OAAKhB,GAAG,CAACgB,CAAC,CAAC,CAAA;EAAA,KAAA,CAAC,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAA;EAChD,GAAA;EACA,EAAA,OAAO,KAAK,CAAA;EAChB,CAAA;EAEO,SAAST,QAAQA,CAACF,EAAE,EAAE;EACzB,EAAA,IAAIa,QAAQ,GAAGD,WAAW,CAACZ,EAAE,CAAC,CAAA;EAC9B,EAAA,IAAIgB,IAAI,GAAA,MAAA,CAAArF,MAAA,CAAUqE,EAAE,CAACiB,GAAG,EAAAtF,IAAAA,CAAAA,CAAAA,MAAA,CACpBqE,EAAE,CAACf,KAAK,CAACY,MAAM,GAAGb,QAAQ,CAACgB,EAAE,CAACf,KAAK,CAAC,GAAG,WAAW,CAAAtD,CAAAA,MAAA,CACnDkF,QAAQ,OAAAlF,MAAA,CAAOkF,QAAQ,CAAA,GAAK,EAAE,EAAG,GAAA,CAAA,CAAA;EACpC,EAAA,OAAOG,IAAI,CAAA;EACf;;EC9DA,IAAME,MAAM,iCAAiC,CAAC;EAC9C,IAAMC,YAAY,GAAAxF,MAAAA,CAAAA,MAAA,CAAUuF,MAAM,WAAAvF,MAAA,CAAQuF,MAAM,EAAA,GAAA,CAAG,CAAC;EACpD,IAAME,YAAY,GAAG,IAAIC,MAAM,CAAA,IAAA,CAAA1F,MAAA,CAAMwF,YAAY,CAAE,CAAC,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAID,MAAM,CAAA,OAAA,CAAA1F,MAAA,CAASwF,YAAY,EAAQ,QAAA,CAAA,CAAC,CAAC;EACxD;EACA,IAAMI,SAAS,GACX,2EAA2E,CAAC;EAChF,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAG5B,SAASC,SAASA,CAACC,IAAI,EAAE;EAC5B,EAAA,SAASC,gBAAgBA,CAACC,OAAO,EAAE3C,KAAK,EAAE;MACtC,OAAO;EACHgC,MAAAA,GAAG,EAAEW,OAAO;EAAE;EACd3B,MAAAA,IAAI,EAAE,CAAC;EAAE;EACTY,MAAAA,QAAQ,EAAE,EAAE;EAAE;EACd5B,MAAAA,KAAK,EAALA,KAAK;EAAE;QACPlD,MAAM,EAAE,IAAI;OACf,CAAA;EACL,GAAA;;EAEA,EAAA,IAAI8F,IAAI,CAAA;EACR,EAAA,IAAIC,aAAa,CAAA;IACjB,IAAIC,KAAK,GAAG,EAAE,CAAA;;EAEd;EACA,EAAA,SAASC,KAAKA,CAACJ,OAAO,EAAE3C,KAAK,EAAE;EAC3B,IAAA,IAAIgD,OAAO,GAAGN,gBAAgB,CAACC,OAAO,EAAE3C,KAAK,CAAC,CAAA;MAC9C,IAAI,CAAC4C,IAAI,EAAE;EACPA,MAAAA,IAAI,GAAGI,OAAO,CAAA;EAClB,KAAA;MACAH,aAAa,GAAGG,OAAO,CAAC;EACxBF,IAAAA,KAAK,CAACvE,IAAI,CAACyE,OAAO,CAAC,CAAA;EACvB,GAAA;;EAEA;IACA,SAASC,GAAGA,CAACN,OAAO,EAAE;EAClB,IAAA,IAAIO,IAAI,GAAGJ,KAAK,CAACK,GAAG,EAAE,CAAA;EACtB,IAAA,IAAID,IAAI,CAAClB,GAAG,KAAKW,OAAO,EAAE;EACtB,MAAA,MAAM,IAAIS,KAAK,CAAC,MAAM,CAAC,CAAA;EAC3B,KAAA;MACAP,aAAa,GAAGC,KAAK,CAACA,KAAK,CAAClC,MAAM,GAAG,CAAC,CAAC,CAAA;EACvC,IAAA,IAAIiC,aAAa,EAAE;QACfK,IAAI,CAACpG,MAAM,GAAG+F,aAAa,CAAA;EAC3BA,MAAAA,aAAa,CAACjB,QAAQ,CAACrD,IAAI,CAAC2E,IAAI,CAAC,CAAA;EACrC,KAAA;EACJ,GAAA;IAEA,SAASG,MAAMA,CAACnC,IAAI,EAAE;MAClBA,IAAI,GAAGA,IAAI,CAACoC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;EAC9B,IAAA,IAAIpC,IAAI,EAAE;EACN2B,MAAAA,aAAa,CAACjB,QAAQ,CAACrD,IAAI,CAAC;EACxByC,QAAAA,IAAI,EAAE,CAAC;EACPE,QAAAA,IAAI,EAAJA,IAAAA;EACJ,OAAC,CAAC,CAAA;EACN,KAAA;EACJ,GAAA;;EAEA;IACA,SAASqC,OAAOA,CAACC,CAAC,EAAE;EAChBf,IAAAA,IAAI,GAAGA,IAAI,CAACgB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC5B,GAAA;EACA;IACA,SAASE,aAAaA,GAAG;EACrB,IAAA,IAAMX,KAAK,GAAGN,IAAI,CAACnB,KAAK,CAACa,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIY,KAAK,EAAE;EACP,MAAA,IAAMzB,KAAK,GAAG;EACVqB,QAAAA,OAAO,EAAEI,KAAK,CAAC,CAAC,CAAC;EACjB/C,QAAAA,KAAK,EAAE,EAAA;SACV,CAAA;EACD;EACAuD,MAAAA,OAAO,CAACR,KAAK,CAAC,CAAC,CAAC,CAACnC,MAAM,CAAC,CAAA;;EAExB;EACA,MAAA,IAAIqC,IAAG,CAAA;EACP,MAAA,IAAI/C,IAAI,CAAA;QACR,OACI,EAAE+C,IAAG,GAAGR,IAAI,CAACnB,KAAK,CAACiB,aAAa,CAAC,CAAC,KACjCrC,IAAI,GAAGuC,IAAI,CAACnB,KAAK,CAACgB,SAAS,CAAC,CAAC,EAChC;EACEhB,QAAAA,KAAK,CAACtB,KAAK,CAACzB,IAAI,CAAC;EACbsB,UAAAA,IAAI,EAAEK,IAAI,CAAC,CAAC,CAAC;EACbnE,UAAAA,KAAK,EAAEmE,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EACvC,SAAC,CAAC,CAAA;EACFqD,QAAAA,OAAO,CAACrD,IAAI,CAAC,CAAC,CAAC,CAACU,MAAM,CAAC,CAAA;EAC3B,OAAA;EACA,MAAA,IAAIqC,IAAG,EAAE;EACLM,QAAAA,OAAO,CAACN,IAAG,CAAC,CAAC,CAAC,CAACrC,MAAM,CAAC,CAAA;EAC1B,OAAA;EACA,MAAA,OAAOU,KAAK,CAAA;EAChB,KAAA;EACA,IAAA,OAAO,KAAK,CAAC;EACjB,GAAA;EACA;EACA,EAAA,OAAOmB,IAAI,EAAE;EACT,IAAA,IAAIkB,OAAO,GAAGlB,IAAI,CAACmB,OAAO,CAAC,GAAG,CAAC,CAAA;MAC/B,IAAID,OAAO,IAAI,CAAC,EAAE;EACd;EACA,MAAA,IAAME,aAAa,GAAGH,aAAa,EAAE,CAAA;EACrC,MAAA,IAAIG,aAAa,EAAE;UACfd,KAAK,CAACc,aAAa,CAAClB,OAAO,EAAEkB,aAAa,CAAC7D,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAM8D,WAAW,GAAGrB,IAAI,CAACnB,KAAK,CAACe,MAAM,CAAC,CAAA;EACtC,MAAA,IAAIyB,WAAW,EAAE;EACbb,QAAAA,GAAG,CAACa,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnBP,QAAAA,OAAO,CAACO,WAAW,CAAC,CAAC,CAAC,CAAClD,MAAM,CAAC,CAAA;EAC9B,QAAA,SAAA;EACJ,OAAA;EACJ,KAAA;EACA;EACA,IAAA,IAAIM,IAAI,GAAA,KAAA,CAAA,CAAA;MACR,IAAIyC,OAAO,GAAG,CAAC,EAAE;QACbzC,IAAI,GAAGuB,IAAI,CAACgB,SAAS,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAA;EACrC,KAAA;EACA,IAAA,IAAIzC,IAAI,EAAE;QACNmC,MAAM,CAACnC,IAAI,CAAC,CAAA;EACZqC,MAAAA,OAAO,CAACrC,IAAI,CAACN,MAAM,CAAC,CAAA;EACxB,KAAA;EACJ,GAAA;EAEA,EAAA,OAAOgC,IAAI,CAAA;EACf;;EC3HA;EAKO,SAASmB,kBAAkBA,CAACC,QAAQ,EAAE;EACzC;EACA,EAAA,IAAIC,GAAG,GAAGzB,SAAS,CAACwB,QAAQ,CAAC,CAAA;EAC7B;EACA;EACA,EAAA,IAAIjC,IAAI,GAAGd,QAAQ,CAACgD,GAAG,CAAC,CAAA;EACxB;IACA,IAAIC,MAAM,GAAG,IAAIC,QAAQ,sBAAAzH,MAAA,CAAsBqF,IAAI,EAAA,GAAA,CAAG,CAAC,CAAA;EACvD,EAAA,OAAOmC,MAAM,CAAA;EACjB;;ECdA,IAAIvE,IAAE,GAAG,CAAC,CAAA;EAAA,IACJyE,GAAG,gBAAA,YAAA;EACL,EAAA,SAAAA,MAAc;EAAAC,IAAAA,eAAA,OAAAD,GAAA,CAAA,CAAA;EACV,IAAA,IAAI,CAACE,IAAI,GAAG,EAAE,CAAC;EACf,IAAA,IAAI,CAAC3E,EAAE,GAAGA,IAAE,EAAE,CAAA;EAClB,GAAA;EAAC4E,EAAAA,YAAA,CAAAH,GAAA,EAAA,CAAA;MAAA5I,GAAA,EAAA,QAAA;MAAAO,KAAA,EACD,SAAAyI,MAAAA,GAAS;EACLJ,MAAAA,GAAG,CAACtI,MAAM,CAAC2I,MAAM,CAAC,IAAI,CAAC,CAAC;EAC5B,KAAA;EAAC,GAAA,EAAA;MAAAjJ,GAAA,EAAA,QAAA;EAAAO,IAAAA,KAAA,EACD,SAAA2I,MAAOC,CAAAA,OAAO,EAAE;EACZ,MAAA,IAAI,CAACL,IAAI,CAAC/F,IAAI,CAACoG,OAAO,CAAC,CAAA;EAC3B,KAAA;EAAC,GAAA,EAAA;MAAAnJ,GAAA,EAAA,QAAA;MAAAO,KAAA,EACD,SAAA6I,MAAAA,GAAS;EACL,MAAA,IAAI,CAACN,IAAI,CAAC3H,OAAO,CAAC,UAACgI,OAAO,EAAA;EAAA,QAAA,OAAKA,OAAO,CAACE,MAAM,EAAE,CAAA;SAAC,CAAA,CAAA;EACpD,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAT,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGLA,GAAG,CAACtI,MAAM,GAAG,IAAI,CAAA;EACjB,IAAIgH,KAAK,GAAG,EAAE,CAAA;EACP,SAASgC,UAAUA,CAACH,OAAO,EAAE;IAChCP,GAAG,CAACtI,MAAM,GAAG6I,OAAO,CAAA;EACpB7B,EAAAA,KAAK,CAACvE,IAAI,CAACoG,OAAO,CAAC,CAAA;EACvB,CAAA;EAEO,SAASI,SAASA,GAAG;IACxBX,GAAG,CAACtI,MAAM,GAAGgH,KAAK,CAACA,KAAK,CAAClC,MAAM,GAAG,CAAC,CAAC,CAAA;EACxC,CAAA;;EAIA;EACA;EACA;;EC9BA,IAAIoE,KAAK,GAAG,EAAE,CAAC;EACf,IAAIC,GAAG,GAAG,EAAE,CAAA;EACZ,IAAI5H,OAAO,GAAG,KAAK,CAAA;EAEnB,SAAS6H,mBAAmBA,GAAG;EAC3BF,EAAAA,KAAK,CAACrI,OAAO,CAAC,UAACgI,OAAO,EAAK;MACvBA,OAAO,CAACQ,GAAG,EAAE,CAAA;MACb,IAAIR,OAAO,CAACS,SAAS,EAAE;QACnBT,OAAO,CAACpH,EAAE,EAAE,CAAA;EAChB,KAAA;EACJ,GAAC,CAAC,CAAA;IACFyH,KAAK,GAAG,EAAE,CAAC;IACXC,GAAG,GAAG,EAAE,CAAC;EACT5H,EAAAA,OAAO,GAAG,KAAK,CAAA;EACnB,CAAA;EAEO,SAASgI,YAAYA,CAACV,OAAO,EAAE;EAClC,EAAA,IAAMhF,EAAE,GAAGgF,OAAO,CAAChF,EAAE,CAAA;EACrB,EAAA,IAAIsF,GAAG,CAACtF,EAAE,CAAC,IAAI,IAAI,EAAE;EACjBqF,IAAAA,KAAK,CAACzG,IAAI,CAACoG,OAAO,CAAC,CAAC;EACpBM,IAAAA,GAAG,CAACtF,EAAE,CAAC,GAAG,IAAI,CAAA;MAEd,IAAI,CAACtC,OAAO,EAAE;EACV;EACA;QACAiB,QAAQ,CAAC4G,mBAAmB,CAAC,CAAA;EAC7B7H,MAAAA,OAAO,GAAG,IAAI,CAAA;EAClB,KAAA;EACJ,GAAA;EACJ;;EC5BA,IAAIsC,EAAE,GAAG,CAAC,CAAA;EAAA,IACJ2F,OAAO,gBAAA,YAAA;EACT;EACA;IACA,SAAAA,OAAAA,CAAYhK,EAAE,EAAEiK,QAAQ,EAAEhI,EAAE,EAAEP,OAAO,EAAE;EAAAqH,IAAAA,eAAA,OAAAiB,OAAA,CAAA,CAAA;MACnC,IAAI,CAAChK,EAAE,GAAGA,EAAE,CAAA;MACZ,IAAI,CAACiK,QAAQ,GAAGA,QAAQ,CAAA;MACxB,IAAI,CAAChI,EAAE,GAAGA,EAAE,CAAA;MACZ,IAAI,CAACP,OAAO,GAAGA,OAAO,CAAA;EACtB,IAAA,IAAI,CAACoI,SAAS,GAAG,OAAOpI,OAAO,IAAI,SAAS,CAAC;MAC7C,IAAI,CAACwI,IAAI,GAAG,CAAC,CAACxI,OAAO,CAACwI,IAAI,CAAC;MAC3B,IAAI,CAACC,IAAI,GAAG,CAAC,CAACzI,OAAO,CAACyI,IAAI,CAAC;EAC3B,IAAA,IAAI,CAACC,KAAK,GAAG1I,OAAO,CAACyI,IAAI,CAAC;EAC1B,IAAA,IAAI,CAAC9F,EAAE,GAAGA,EAAE,EAAE,CAAC;EACf,IAAA,IAAI,CAACgG,IAAI,GAAG,EAAE,CAAC;EACf,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAA;EAEvB,IAAA,IAAI,OAAON,QAAQ,IAAI,UAAU,EAAE;QAC/B,IAAI,CAACO,MAAM,GAAGP,QAAQ,CAAA;EAC1B,KAAC,MAAM;EACH;QACA,IAAI,CAACO,MAAM,GAAG,YAAY;EACtB;EACA;UACA,IAAIC,IAAI,GAAGR,QAAQ,CAAClF,KAAK,CAAC,GAAG,CAAC,CAAC;UAC/B,IAAID,GAAG,GAAG9E,EAAE,CAAA;EACZ,QAAA,KAAK,IAAI6E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4F,IAAI,CAACnF,MAAM,EAAET,CAAC,EAAE,EAAE;EAClCC,UAAAA,GAAG,GAAGA,GAAG,CAAC2F,IAAI,CAAC5F,CAAC,CAAC,CAAC,CAAA;EACtB,SAAA;EACA,QAAA,OAAOC,GAAG,CAAA;SACb,CAAA;EACL,KAAA;EACA;EACA,IAAA,IAAI,CAACrE,KAAK,GAAG,IAAI,CAAC0J,IAAI,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC9J,GAAG,EAAE,CAAC;EACjD,GAAA;EAAC4I,EAAAA,YAAA,CAAAe,OAAA,EAAA,CAAA;MAAA9J,GAAA,EAAA,QAAA;EAAAO,IAAAA,KAAA,EACD,SAAA0I,MAAOuB,CAAAA,GAAG,EAAE;EACR,MAAA,IAAIrG,EAAE,GAAGqG,GAAG,CAACrG,EAAE,CAAA;QACf,IAAI,CAAC,IAAI,CAACiG,MAAM,CAACX,GAAG,CAACtF,EAAE,CAAC,EAAE;EACtB,QAAA,IAAI,CAACgG,IAAI,CAACpH,IAAI,CAACyH,GAAG,CAAC,CAAA;EACnB,QAAA,IAAI,CAACJ,MAAM,CAACK,GAAG,CAACtG,EAAE,CAAC,CAAA;EACnBqG,QAAAA,GAAG,CAACtB,MAAM,CAAC,IAAI,CAAC,CAAA;EACpB,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAAlJ,GAAA,EAAA,KAAA;MAAAO,KAAA,EACD,SAAAJ,GAAAA,GAAM;QACFmJ,UAAU,CAAC,IAAI,CAAC,CAAC;EACjB,MAAA,IAAIoB,MAAM,GAAG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC,IAAI,CAAC7K,EAAE,CAAC,CAAC;QACvC,IAAI,CAACwK,MAAM,EAAE,CAAA;EACbf,MAAAA,SAAS,EAAE,CAAA;EACX,MAAA,OAAOmB,MAAM,CAAA;EACjB,KAAA;EAAC,GAAA,EAAA;MAAA1K,GAAA,EAAA,KAAA;MAAAO,KAAA,EACD,SAAAoJ,GAAAA,GAAM;EACF,MAAA,IAAItJ,QAAQ,GAAG,IAAI,CAACF,GAAG,EAAE,CAAA;EACzB,MAAA,IAAIyK,QAAQ,GAAG,IAAI,CAACrK,KAAK,CAAA;EACzB,MAAA,IAAI,CAACA,KAAK,GAAGF,QAAQ,CAAC;QACtB,IAAI,IAAI,CAAC2J,IAAI,EAAE;EACX,QAAA,IAAI,CAACjI,EAAE,CAAC4I,IAAI,CAAC,IAAI,CAAC7K,EAAE,EAAEO,QAAQ,EAAEuK,QAAQ,CAAC,CAAA;EAC7C,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAA5K,GAAA,EAAA,QAAA;MAAAO,KAAA,EACD,SAAA8I,MAAAA,GAAS;QACL,IAAI,IAAI,CAACY,IAAI,EAAE;EACX;UACA,IAAI,CAACC,KAAK,GAAG,IAAI,CAAA;EACrB,OAAC,MAAM;EACH;UACAL,YAAY,CAAC,IAAI,CAAC,CAAA;EACtB,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAA7J,GAAA,EAAA,UAAA;MAAAO,KAAA,EACD,SAAAsK,QAAAA,GAAW;EACP,MAAA,IAAI,CAACX,KAAK,GAAG,KAAK,CAAC;EACnB,MAAA,IAAI,CAAC3J,KAAK,GAAG,IAAI,CAACJ,GAAG,EAAE,CAAA;EAC3B,KAAA;EAAC,GAAA,EAAA;MAAAH,GAAA,EAAA,QAAA;MAAAO,KAAA,EACD,SAAAyI,MAAAA,GAAS;EACL,MAAA,IAAIrE,CAAC,GAAG,IAAI,CAACwF,IAAI,CAAC/E,MAAM,CAAA;QACxB,OAAOT,CAAC,EAAE,EAAE;UACR,IAAI,CAACwF,IAAI,CAACxF,CAAC,CAAC,CAACqE,MAAM,EAAE,CAAC;EAC1B,OAAA;EACJ,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAc,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;;EAKL;;EAEA;EACA;EACA;EACA;;ECzFA;EACA;EACA;EACO,SAASgB,KAAKA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC;IACA,IAAI,CAACD,QAAQ,EAAE;EACX,IAAA,OAAOE,SAAS,CAACD,KAAK,CAAC,CAAC;EAC5B,GAAA;EACA;EACA,EAAA,IAAID,QAAQ,CAACG,QAAQ,IAAI,CAAC,EAAE;EACxB;EACA,IAAA,IAAMC,SAAS,GAAGJ,QAAQ,CAACK,UAAU,CAAC;EACtC,IAAA,IAAIC,GAAG,GAAGJ,SAAS,CAACD,KAAK,CAAC,CAAC;MAC3BG,SAAS,CAACG,YAAY,CAACD,GAAG,EAAEN,QAAQ,CAACQ,WAAW,CAAC,CAAA;EAEjDJ,IAAAA,SAAS,CAACK,WAAW,CAACT,QAAQ,CAAC,CAAA;EAE/B,IAAA,OAAOM,GAAG,CAAA;EACd,GAAC,MAAM;EACH;EACA;EACA,IAAA,IAAIN,QAAQ,CAACvE,GAAG,KAAKwE,KAAK,CAACxE,GAAG,EAAE;EAC5B,MAAA,OAAOuE,QAAQ,CAACxF,EAAE,CAAC6F,UAAU,CAACK,YAAY,CACtCR,SAAS,CAACD,KAAK,CAAC,EAChBD,QAAQ,CAACxF,EACb,CAAC,CAAA;EACL,KAAA;EACA;MACA,IAAIA,EAAE,GAAIyF,KAAK,CAACzF,EAAE,GAAGwF,QAAQ,CAACxF,EAAG,CAAC;;EAElC;EACA;EACA;EACA,IAAA,IAAIyF,KAAK,CAACxE,GAAG,IAAIkF,SAAS,EAAE;EACxB;EACA,MAAA,IAAIX,QAAQ,CAACrF,IAAI,KAAKsF,KAAK,CAACtF,IAAI,EAAE;EAC9BH,QAAAA,EAAE,CAAC5C,WAAW,GAAGqI,KAAK,CAACtF,IAAI,CAAA;EAC/B,OAAA;EACA,MAAA,OAAA;EACJ,KAAA;;EAEA;EACA;EACAiG,IAAAA,gBAAgB,CAACX,KAAK,EAAED,QAAQ,CAACa,IAAI,CAAC,CAAA;;EAEtC;EACA,IAAA,IAAIC,WAAW,GAAGd,QAAQ,CAAC3E,QAAQ,IAAI,EAAE,CAAA;EACzC,IAAA,IAAI0F,WAAW,GAAGd,KAAK,CAAC5E,QAAQ,IAAI,EAAE,CAAA;MACtC,IAAIyF,WAAW,CAACzG,MAAM,GAAG,CAAC,IAAI0G,WAAW,CAAC1G,MAAM,GAAG,CAAC,EAAE;EAClD;EACA;EACA2G,MAAAA,aAAa,CAACxG,EAAE,EAAEsG,WAAW,EAAEC,WAAW,CAAC,CAAA;EAC/C,KAAC,MAAM,IAAIA,WAAW,CAAC1G,MAAM,GAAG,CAAC,EAAE;EAC/B;EACA,MAAA,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmH,WAAW,CAAC1G,MAAM,EAAET,CAAC,EAAE,EAAE;UACzC,IAAIpD,KAAK,GAAG0J,SAAS,CAACa,WAAW,CAACnH,CAAC,CAAC,CAAC,CAAA;EACrCY,QAAAA,EAAE,CAACyG,WAAW,CAACzK,KAAK,CAAC,CAAC;EAC1B,OAAA;EACJ,KAAC,MAAM,IAAIsK,WAAW,CAACzG,MAAM,GAAG,CAAC,EAAE;EAC/B;QACAG,EAAE,CAAC0G,SAAS,GAAA,EAAK,CAAC;EACtB,KAAA;;EACA,IAAA,OAAO1G,EAAE,CAAA;EACb,GAAA;EACJ,CAAA;EAEA,SAAS2G,WAAWA,CAACnB,QAAQ,EAAEoB,QAAQ,EAAE;EACrC,EAAA,OAAOpB,QAAQ,CAACvE,GAAG,IAAI2F,QAAQ,CAAC3F,GAAG,IAAIuE,QAAQ,CAAC/K,GAAG,IAAImM,QAAQ,CAACnM,GAAG,CAAA;EACvE,CAAA;EAEA,SAAS+L,aAAaA,CAACxG,EAAE,EAAEsG,WAAW,EAAEC,WAAW,EAAE;EACjD;;IAEA,IAAIM,aAAa,GAAG,CAAC,CAAC;EACtB,EAAA,IAAIC,aAAa,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;EACnC,EAAA,IAAIS,WAAW,GAAGT,WAAW,CAACzG,MAAM,GAAG,CAAC,CAAA;EACxC,EAAA,IAAImH,WAAW,GAAGV,WAAW,CAACS,WAAW,CAAC,CAAA;IAC1C,IAAIE,aAAa,GAAG,CAAC,CAAA;EACrB,EAAA,IAAIC,aAAa,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAA;EAClC,EAAA,IAAIY,WAAW,GAAGZ,WAAW,CAAC1G,MAAM,GAAG,CAAC,CAAA;EACxC,EAAA,IAAIuH,WAAW,GAAGb,WAAW,CAACY,WAAW,CAAC,CAAA;EAE1C,EAAA,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIxG,QAAQ,EAAK;MACjC,OAAOA,QAAQ,CAACyG,MAAM,CAAC,UAACC,IAAI,EAAEC,OAAO,EAAE/G,KAAK,EAAK;QAC7C,IAAI+G,OAAO,CAAC/M,GAAG,EAAE;EACb8M,QAAAA,IAAI,CAACC,OAAO,CAAC/M,GAAG,CAAC,GAAGgG,KAAK,CAAA;EAC7B,OAAA;EACA,MAAA,OAAO8G,IAAI,CAAA;OACd,EAAE,EAAE,CAAC,CAAA;KACT,CAAA;EACD;EACA,EAAA,IAAME,OAAO,GAAGJ,cAAc,CAACf,WAAW,CAAC,CAAA;;EAE3C;EACA,EAAA,OAAOO,aAAa,IAAIE,WAAW,IAAIE,aAAa,IAAIE,WAAW,EAAE;EACjE;EACA;MACA,IAAI,CAACL,aAAa,EAAE;EAChB;EACAA,MAAAA,aAAa,GAAGR,WAAW,CAAC,EAAEO,aAAa,CAAC,CAAA;EAChD,KAAC,MAAM,IAAI,CAACG,WAAW,EAAE;EACrBA,MAAAA,WAAW,GAAGV,WAAW,CAAC,EAAES,WAAW,CAAC,CAAA;EAC5C,KAAA;;EAEA;EACA,IAAA,IAAIJ,WAAW,CAACG,aAAa,EAAEI,aAAa,CAAC,EAAE;EAC3C;EACA3B,MAAAA,KAAK,CAACuB,aAAa,EAAEI,aAAa,CAAC,CAAA;EACnCJ,MAAAA,aAAa,GAAGR,WAAW,CAAC,EAAEO,aAAa,CAAC,CAAA;EAC5CK,MAAAA,aAAa,GAAGX,WAAW,CAAC,EAAEU,aAAa,CAAC,CAAA;OAC/C,MAAM,IAAIN,WAAW,CAACK,WAAW,EAAEI,WAAW,CAAC,EAAE;EAC9C;EACA7B,MAAAA,KAAK,CAACyB,WAAW,EAAEI,WAAW,CAAC,CAAA;EAC/BJ,MAAAA,WAAW,GAAGV,WAAW,CAAC,EAAES,WAAW,CAAC,CAAA;EACxCK,MAAAA,WAAW,GAAGb,WAAW,CAAC,EAAEY,WAAW,CAAC,CAAA;EAC5C,KAAA;;EAEA;EAAA,SACK,IAAIR,WAAW,CAACG,aAAa,EAAEM,WAAW,CAAC,EAAE;EAC9C7B,MAAAA,KAAK,CAACuB,aAAa,EAAEM,WAAW,CAAC,CAAA;EACjCpH,MAAAA,EAAE,CAAC+F,YAAY,CAACe,aAAa,CAAC9G,EAAE,EAAEgH,WAAW,CAAChH,EAAE,CAACgG,WAAW,CAAC,CAAC;EAC9Dc,MAAAA,aAAa,GAAGR,WAAW,CAAC,EAAEO,aAAa,CAAC,CAAA;EAC5CO,MAAAA,WAAW,GAAGb,WAAW,CAAC,EAAEY,WAAW,CAAC,CAAA;OAC3C,MAAM,IAAIR,WAAW,CAACK,WAAW,EAAEE,aAAa,CAAC,EAAE;EAChD;EACA3B,MAAAA,KAAK,CAACyB,WAAW,EAAEE,aAAa,CAAC,CAAA;QACjClH,EAAE,CAAC+F,YAAY,CAACiB,WAAW,CAAChH,EAAE,EAAE8G,aAAa,CAAC9G,EAAE,CAAC,CAAA;EACjDgH,MAAAA,WAAW,GAAGV,WAAW,CAAC,EAAES,WAAW,CAAC,CAAA;EACxCG,MAAAA,aAAa,GAAGX,WAAW,CAAC,EAAEU,aAAa,CAAC,CAAA;EAChD,KAAC,MAAM;EACH;EACA;QACA,IAAIS,SAAS,GAAGD,OAAO,CAACP,aAAa,CAACzM,GAAG,CAAC,CAAC;EAC3C;QACA,IAAIiN,SAAS,IAAIvB,SAAS,EAAE;EACxB;UACAnG,EAAE,CAAC+F,YAAY,CAACL,SAAS,CAACwB,aAAa,CAAC,EAAEJ,aAAa,CAAC9G,EAAE,CAAC,CAAA;EAC/D,OAAC,MAAM;EACH,QAAA,IAAI2H,QAAQ,GAAGrB,WAAW,CAACoB,SAAS,CAAC,CAAC;EACtCpB,QAAAA,WAAW,CAACoB,SAAS,CAAC,GAAG,IAAI,CAAC;UAC9B1H,EAAE,CAAC+F,YAAY,CAAC4B,QAAQ,CAAC3H,EAAE,EAAE8G,aAAa,CAAC9G,EAAE,CAAC,CAAA;EAC9CuF,QAAAA,KAAK,CAACoC,QAAQ,EAAET,aAAa,CAAC,CAAC;EACnC,OAAA;;EACAA,MAAAA,aAAa,GAAGX,WAAW,CAAC,EAAEU,aAAa,CAAC,CAAA;EAChD,KAAA;EACJ,GAAA;EACA;IACA,IAAIJ,aAAa,IAAIE,WAAW,EAAE;MAC9B,KAAK,IAAI3H,CAAC,GAAGyH,aAAa,EAAEzH,CAAC,IAAI2H,WAAW,EAAE3H,CAAC,EAAE,EAAE;EAC/C,MAAA,IAAIkH,WAAW,CAAClH,CAAC,CAAC,KAAK,IAAI,EAAEY,EAAE,CAACiG,WAAW,CAACK,WAAW,CAAClH,CAAC,CAAC,CAACY,EAAE,CAAC,CAAA;EAClE,KAAA;EACJ,GAAA;EACA;;EAEA;IACA,IAAIiH,aAAa,IAAIE,WAAW,EAAE;MAC9B,KAAK,IAAI/H,EAAC,GAAG6H,aAAa,EAAE7H,EAAC,IAAI+H,WAAW,EAAE/H,EAAC,EAAE,EAAE;EAC/C;EACA;;EAEA;QACA,IAAIwI,MAAM,GACNrB,WAAW,CAACY,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,GAC9B,IAAI,GACJZ,WAAW,CAACY,WAAW,GAAG,CAAC,CAAC,CAACnH,EAAE,CAAA;EACzCA,MAAAA,EAAE,CAAC+F,YAAY,CAACL,SAAS,CAACa,WAAW,CAACnH,EAAC,CAAC,CAAC,EAAEwI,MAAM,CAAC,CAAA;EACtD,KAAA;EACJ,GAAA;EACJ,CAAA;;EAEA;EACA,SAASC,iBAAeA,CAACpC,KAAK,EAAE;EAC5B,EAAA,IAAIrG,CAAC,GAAGqG,KAAK,CAACY,IAAI,CAAC;EACnB,EAAA,IAAI,CAACjH,CAAC,GAAGA,CAAC,CAACvD,IAAI,MAAMuD,CAAC,GAAGA,CAAC,CAAC0I,IAAI,CAAC,EAAE;MAC9B1I,CAAC,CAACqG,KAAK,CAAC,CAAC;EACb,GAAA;;IACA,IAAIA,KAAK,CAACsC,iBAAiB,EAAE;EACzB;EACA,IAAA,OAAO,IAAI,CAAA;EACf,GAAA;EACJ,CAAA;EAEO,SAASrC,SAASA,CAACD,KAAK,EAAE;EAC7B,EAAA,IAAMxE,GAAG,GAA+BwE,KAAK,CAAvCxE,GAAG,CAAA;MAA+BwE,KAAK,CAAlCY,IAAI,CAAA;UAAExF,QAAQ,GAAe4E,KAAK,CAA5B5E,QAAQ,CAAA;MAAEV,IAAI,GAASsF,KAAK,CAAlBtF,IAAI,CAAA;MAASsF,KAAK,CAAZlL,GAAE;EACnC,EAAA,IAAI,OAAO0G,GAAG,KAAK,QAAQ,EAAE;EACzB,IAAA,IAAI4G,iBAAe,CAACpC,KAAK,CAAC,EAAE;EACxB;EACA,MAAA,OAAOA,KAAK,CAACsC,iBAAiB,CAACC,GAAG,CAAA;EACtC,KAAA;EACA;MACAvC,KAAK,CAACzF,EAAE,GAAGhD,QAAQ,CAACiL,aAAa,CAAChH,GAAG,CAAC,CAAC;EACvC;MACAmF,gBAAgB,CAACX,KAAK,CAAC,CAAA;EAEvB5E,IAAAA,QAAQ,CAACjF,OAAO,CAAC,UAACI,KAAK,EAAK;QACxByJ,KAAK,CAACzF,EAAE,CAACyG,WAAW,CAACf,SAAS,CAAC1J,KAAK,CAAC,CAAC,CAAA;EAC1C,KAAC,CAAC,CAAA;EACN,GAAC,MAAM;MACHyJ,KAAK,CAACzF,EAAE,GAAGhD,QAAQ,CAACC,cAAc,CAACkD,IAAI,CAAC,CAAA;EAC5C,GAAA;IACA,OAAOsF,KAAK,CAACzF,EAAE,CAAA;EACnB,CAAA;EAEA,SAASoG,gBAAgBA,CAACX,KAAK,EAAiB;EAAA,EAAA,IAAfyC,QAAQ,GAAAC,SAAA,CAAAtI,MAAA,GAAA,CAAA,IAAAsI,SAAA,CAAA,CAAA,CAAA,KAAAhC,SAAA,GAAAgC,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAC1C,IAAIC,QAAQ,GAAG3C,KAAK,CAACY,IAAI,IAAI,EAAE,CAAC;EAChC,EAAA,IAAIrG,EAAE,GAAGyF,KAAK,CAACzF,EAAE,CAAA;;EAEjB;EACA,EAAA,IAAIqI,QAAQ,GAAGD,QAAQ,CAACE,KAAK,IAAI,EAAE,CAAA;EACnC,EAAA,IAAIC,QAAQ,GAAGL,QAAQ,CAACI,KAAK,IAAI,EAAE,CAAA;EACnC;EACA,EAAA,KAAK,IAAI7N,GAAG,IAAI8N,QAAQ,EAAE;EACtB,IAAA,IAAI,CAACF,QAAQ,CAAC5N,GAAG,CAAC,EAAE;EAChB;EACAuF,MAAAA,EAAE,CAACsI,KAAK,CAAC7N,GAAG,CAAC,GAAG,EAAE,CAAA;EACtB,KAAA;EACJ,GAAA;;EAEA;EACA,EAAA,KAAK,IAAIA,IAAG,IAAIyN,QAAQ,EAAE;EACtB,IAAA,IAAI,CAACE,QAAQ,CAAC3N,IAAG,CAAC,EAAE;EAChBuF,MAAAA,EAAE,CAACwI,eAAe,CAAC/N,IAAG,CAAC,CAAC;EAC5B,KAAA;EACJ,GAAA;;EAEA;EACA,EAAA,KAAK,IAAIA,KAAG,IAAI2N,QAAQ,EAAE;MACtB,IAAI3N,KAAG,IAAI,OAAO,EAAE;EAChB,MAAA,KAAK,IAAIgO,SAAS,IAAIL,QAAQ,CAACE,KAAK,EAAE;UAClCtI,EAAE,CAACsI,KAAK,CAACG,SAAS,CAAC,GAAGL,QAAQ,CAACE,KAAK,CAACG,SAAS,CAAC,CAAA;EACnD,OAAA;EACJ,KAAC,MAAM,IAAIhO,KAAG,IAAI,OAAO,EAAE;EACvBuF,MAAAA,EAAE,CAAC0I,SAAS,GAAGN,QAAQ,CAAM,OAAA,CAAA,CAAA;EACjC,KAAC,MAAM;QACHpI,EAAE,CAAC2I,YAAY,CAAClO,KAAG,EAAE2N,QAAQ,CAAC3N,KAAG,CAAC,CAAC,CAAA;EACvC,KAAA;EACJ,GAAA;EACJ;;EC1OO,SAASmO,cAAcA,CAAC9K,GAAG,EAAE;EAChCA,EAAAA,GAAG,CAACQ,SAAS,CAACuK,OAAO,GAAG,UAAUpD,KAAK,EAAE;MACrC,IAAMlL,EAAE,GAAG,IAAI,CAAA;EACf;EACA,IAAA,IAAMuO,SAAS,GAAGvO,EAAE,CAACwO,MAAM,CAAA;MAC3B,IAAI,CAACD,SAAS,EAAE;EACZ;QACAvO,EAAE,CAACyN,GAAG,GAAGzC,KAAK,CAAChL,EAAE,CAACyN,GAAG,EAAEvC,KAAK,CAAC,CAAA;EACjC,KAAC,MAAM;QACHlL,EAAE,CAACyN,GAAG,GAAGzC,KAAK,CAACuD,SAAS,EAAErD,KAAK,CAAC,CAAA;EACpC,KAAA;MACAlL,EAAE,CAACwO,MAAM,GAAGtD,KAAK,CAAA;KACpB,CAAA;EACL,CAAA;EAEO,SAASuD,cAAcA,CAACzO,EAAE,EAAEyF,EAAE,EAAE;IACnCzF,EAAE,CAACyN,GAAG,GAAGhI,EAAE,CAAA;EACX;EACA;EACAiJ,EAAAA,QAAQ,CAAC1O,EAAE,EAAE,aAAa,CAAC,CAAA;EAE3B,EAAA,IAAI2O,eAAe,GAAG,SAAlBA,eAAeA,GAAS;MACxB3O,EAAE,CAACsO,OAAO,CAACtO,EAAE,CAAC4O,OAAO,EAAE,CAAC,CAAA;KAC3B,CAAA;EACD;IACc,IAAI5E,OAAO,CACrBhK,EAAE,EACF2O,eAAe,EACf,YAAM;EACFD,IAAAA,QAAQ,CAAC1O,EAAE,EAAE,SAAS,CAAC,CAAA;KAC1B,EACD,IACJ,EAAC;EAED0O,EAAAA,QAAQ,CAAC1O,EAAE,EAAE,SAAS,CAAC,CAAA;EAC3B,CAAA;EAEO,SAAS0O,QAAQA,CAAC1O,EAAE,EAAEsB,IAAI,EAAE;EAC/B,EAAA,IAAIuN,QAAQ,GAAG7O,EAAE,CAAC8O,QAAQ,CAACxN,IAAI,CAAC,CAAA;EAChC,EAAA,IAAIuN,QAAQ,EAAE;EACV,IAAA,KAAK,IAAIhK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgK,QAAQ,CAACvJ,MAAM,EAAET,CAAC,EAAE,EAAE;EACtCgK,MAAAA,QAAQ,CAAChK,CAAC,CAAC,CAACgG,IAAI,CAAC7K,EAAE,CAAC,CAAA;EACxB,KAAA;EACJ,GAAA;EACJ;;EC/CA;EACA,IAAI+O,iBAAiB,GAAGC,KAAK,CAACjL,SAAS,CAAA;EAChC,IAAIkL,YAAY,GAAG9O,MAAM,CAACe,MAAM,CAAC6N,iBAAiB,CAAC,CAAA;EAE1D,IAAIG,OAAO,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;EAE9EA,OAAO,CAAC7N,OAAO,CAAC,UAAC8N,MAAM,EAAK;EACxB;EACAF,EAAAA,YAAY,CAACE,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAzB,SAAA,CAAAtI,MAAA,EAANgK,IAAI,GAAAN,IAAAA,KAAA,CAAAK,IAAA,GAAAE,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAA3B,GAAAA,SAAA,CAAA2B,IAAA,CAAA,CAAA;EAAA,KAAA;EACpC;EACA;EACA,IAAA,CAAAH,qBAAA,GAAAL,iBAAiB,CAACI,MAAM,CAAC,EAACtE,IAAI,CAAA2E,KAAA,CAAAJ,qBAAA,EAAC,CAAA,IAAI,EAAAhO,MAAA,CAAKkO,IAAI,CAAC,CAAA,CAAA;EAC7C,IAAA,IAAIG,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAC;EACrB,IAAA,QAAQR,MAAM;EACV,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;UACVM,QAAQ,GAAGH,IAAI,CAAC;EAChB,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EACTG,QAAAA,QAAQ,GAAGH,IAAI,CAAC/J,KAAK,CAAC,CAAC,CAAC,CAAA;EAGhC,KAAA;EACA;EACA,IAAA,IAAIkK,QAAQ,EAAEC,EAAE,CAACE,YAAY,CAACH,QAAQ,CAAC,CAAA;EACvCC,IAAAA,EAAE,CAAChF,GAAG,CAACpB,MAAM,EAAE,CAAA;KAClB,CAAA;EACL,CAAC,CAAC;;EC1BqB,IAEjBuG,QAAQ,gBAAA,YAAA;IACV,SAAAA,QAAAA,CAAY/D,IAAI,EAAE;EAAA/C,IAAAA,eAAA,OAAA8G,QAAA,CAAA,CAAA;EACd,IAAA,IAAI,CAACnF,GAAG,GAAG,IAAI5B,GAAG,EAAE,CAAC;EACrB;EACA1I,IAAAA,cAAc,CAAC0L,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;;EAEpC;EACA,IAAA,IAAIkD,KAAK,CAACc,OAAO,CAAChE,IAAI,CAAC,EAAE;EACrB;QACAA,IAAI,CAACiE,SAAS,GAAGd,YAAY,CAAA;EAC7B,MAAA,IAAI,CAACW,YAAY,CAAC9D,IAAI,CAAC,CAAA;EAC3B,KAAC,MAAM;EACH,MAAA,IAAI,CAACkE,IAAI,CAAClE,IAAI,CAAC,CAAA;EACnB,KAAA;EACJ,GAAA;EAAC7C,EAAAA,YAAA,CAAA4G,QAAA,EAAA,CAAA;MAAA3P,GAAA,EAAA,cAAA;EAAAO,IAAAA,KAAA,EACD,SAAAmP,YAAa9D,CAAAA,IAAI,EAAE;EACf;EACAA,MAAAA,IAAI,CAACzK,OAAO,CAAC,UAAC2D,IAAI,EAAA;UAAA,OAAKrC,OAAO,CAACqC,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACzC,KAAA;EAAC,GAAA,EAAA;MAAA9E,GAAA,EAAA,MAAA;EAAAO,IAAAA,KAAA,EACD,SAAAuP,IAAKlE,CAAAA,IAAI,EAAE;QACP3L,MAAM,CAAC8P,IAAI,CAACnE,IAAI,CAAC,CAACzK,OAAO,CAAC,UAACnB,GAAG,EAAK;UAC/BgQ,cAAc,CAACpE,IAAI,EAAE5L,GAAG,EAAE4L,IAAI,CAAC5L,GAAG,CAAC,CAAC,CAAA;EACxC,OAAC,CAAC,CAAA;EACN,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA2P,QAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGL,SAASK,cAAcA,CAACpE,IAAI,EAAE5L,GAAG,EAAEO,KAAK,EAAE;EACtC,EAAA,IAAI0P,QAAQ,GAAGxN,OAAO,CAAClC,KAAK,CAAC,CAAC;;EAE9B,EAAA,IAAIiK,GAAG,GAAG,IAAI5B,GAAG,EAAE,CAAC;;EAEpB;EACA3I,EAAAA,MAAM,CAACC,cAAc,CAAC0L,IAAI,EAAE5L,GAAG,EAAE;EAC7B;MACAG,GAAG,EAAA,SAAAA,MAAG;QACF,IAAIyI,GAAG,CAACtI,MAAM,EAAE;EACZ;UACAkK,GAAG,CAACxB,MAAM,EAAE,CAAA;EACZ,QAAA,IAAIiH,QAAQ,EAAE;EACV;EACAA,UAAAA,QAAQ,CAACzF,GAAG,CAACxB,MAAM,EAAE,CAAC;EAC1B,SAAA;EACJ,OAAA;;EACA,MAAA,OAAOzI,KAAK,CAAA;OACf;EACD;MACAH,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;QACV,IAAIA,QAAQ,IAAIE,KAAK,EAAE,OAAA;QACvBkC,OAAO,CAACpC,QAAQ,CAAC,CAAC;EAClBE,MAAAA,KAAK,GAAGF,QAAQ,CAAA;EAChBmK,MAAAA,GAAG,CAACpB,MAAM,EAAE,CAAC;EACjB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;;EAEO,SAAS3G,OAAOA,CAACmJ,IAAI,EAAE;EAC1B;EACA,EAAA,IAAI,CAACjM,QAAQ,CAACiM,IAAI,CAAC,EAAE;EACjB,IAAA,OAAA;EACJ,GAAA;EACA;IACA,IAAIA,IAAI,CAAC6D,MAAM,EAAE;EACb,IAAA,OAAA;EACJ,GAAA;EACA,EAAA,OAAO,IAAIE,QAAQ,CAAC/D,IAAI,CAAC,CAAA;EAC7B;;EChEO,SAASsE,SAASA,CAACpQ,EAAE,EAAE;EAC1B,EAAA,IAAMqQ,IAAI,GAAGrQ,EAAE,CAAC8O,QAAQ,CAAA;IACxB,IAAIuB,IAAI,CAACC,KAAK,EAAE,CAEhB;IACA,IAAID,IAAI,CAACnB,OAAO,EAAE,CAElB;IACA,IAAImB,IAAI,CAACvE,IAAI,EAAE;MACXyE,QAAQ,CAACvQ,EAAE,CAAC,CAAA;EAChB,GAAA;IACA,IAAIqQ,IAAI,CAACG,QAAQ,EAAE;MACfC,YAAY,CAACzQ,EAAE,CAAC,CAAA;EACpB,GAAA;IACA,IAAIqQ,IAAI,CAACK,KAAK,EAAE;MACZC,SAAS,CAAC3Q,EAAE,CAAC,CAAA;EACjB,GAAA;EACJ,CAAA;EAEA,SAASuQ,QAAQA,CAACvQ,EAAE,EAAE;EAClB,EAAA,IAAI8L,IAAI,GAAG9L,EAAE,CAAC8O,QAAQ,CAAChD,IAAI,CAAA;EAC3BA,EAAAA,IAAI,GAAG9L,EAAE,CAAC4Q,KAAK,GAAGjR,UAAU,CAACmM,IAAI,CAAC,GAAGA,IAAI,CAACjB,IAAI,CAAC7K,EAAE,CAAC,GAAG8L,IAAI,CAAA;;EAEzD;EACA,EAAA,KAAK,IAAI5L,GAAG,IAAI4L,IAAI,EAAE;EAClB/L,IAAAA,KAAK,CAACC,EAAE,EAAE,OAAO,EAAEE,GAAG,CAAC,CAAA;EAC3B,GAAA;;EAEA;EACAyC,EAAAA,OAAO,CAAC3C,EAAE,CAAC4Q,KAAK,CAAC,CAAA;EACrB,CAAA;EAGA,SAASH,YAAYA,CAACzQ,EAAE,EAAE;EACtB,EAAA,IAAIwQ,QAAQ,GAAGxQ,EAAE,CAAC8O,QAAQ,CAAC0B,QAAQ,CAAA;IACnC,IAAMK,QAAQ,GAAI7Q,EAAE,CAAC8Q,iBAAiB,GAAG,EAAG,CAAC;EAC7C,EAAA,KAAK,IAAI5Q,GAAG,IAAIsQ,QAAQ,EAAE;EACtB,IAAA,IAAMO,OAAO,GAAGP,QAAQ,CAACtQ,GAAG,CAAC,CAAC;EAC9B;EACA,IAAA,IAAMsK,MAAM,GAAG,OAAOuG,OAAO,IAAI,UAAU,GAAGA,OAAO,GAAGA,OAAO,CAAC1Q,GAAG,CAAC;;EAEpEwQ,IAAAA,QAAQ,CAAC3Q,GAAG,CAAC,GAAG,IAAI8J,OAAO,CAAChK,EAAE,EAAEwK,MAAM,EAAE,YAAM,EAAE,EAAE;EAAEL,MAAAA,IAAI,EAAE,IAAA;EAAK,KAAC,CAAC,CAAA;EACjE6G,IAAAA,cAAc,CAAChR,EAAE,EAAEE,GAAG,EAAE6Q,OAAO,CAAC,CAAA;EACpC,GAAA;EACJ,CAAA;EACA,IAAME,uBAAuB,GAAG;EAC5BvQ,EAAAA,UAAU,EAAE,IAAI;EAChBC,EAAAA,YAAY,EAAE,IAAI;EAClBN,EAAAA,GAAG,EAAE,SAAAA,GAAA,GAAM,EAAE;EACbC,EAAAA,GAAG,EAAE,SAAAA,GAAA,GAAM,EAAC;EAChB,CAAC,CAAA;EACD,SAAS0Q,cAAcA,CAACxQ,MAAM,EAAEN,GAAG,EAAE6Q,OAAO,EAAE;EAC1C,EAAA,IAAI,OAAOA,OAAO,IAAI,UAAU,EAAE;EAC9BE,IAAAA,uBAAuB,CAAC5Q,GAAG,GAAG6Q,oBAAoB,CAAChR,GAAG,CAAC,CAAA;EAC3D,GAAC,MAAM;EACH+Q,IAAAA,uBAAuB,CAAC5Q,GAAG,GAAG6Q,oBAAoB,CAAChR,GAAG,CAAC,CAAC;EACxD+Q,IAAAA,uBAAuB,CAAC3Q,GAAG,GAAGyQ,OAAO,CAACzQ,GAAG,CAAA;EAC7C,GAAA;IACAH,MAAM,CAACC,cAAc,CAACI,MAAM,EAAEN,GAAG,EAAE+Q,uBAAuB,CAAC,CAAA;EAC/D,CAAA;EAEA,SAASC,oBAAoBA,CAAChR,GAAG,EAAE;EAC/B;IACA,OAAO,SAASiR,cAAcA,GAAG;MAC7B,IAAM9H,OAAO,GAAG,IAAI,CAACyH,iBAAiB,CAAC5Q,GAAG,CAAC,CAAC;EAC5C,IAAA,IAAImJ,OAAO,EAAE;EACT;QACA,IAAIA,OAAO,CAACe,KAAK,EAAE;EACff,QAAAA,OAAO,CAAC0B,QAAQ,EAAE,CAAC;EACvB,OAAA;;QACA,IAAIjC,GAAG,CAACtI,MAAM,EAAE;UACZ6I,OAAO,CAACH,MAAM,EAAE,CAAA;EACpB,OAAA;QACA,OAAOG,OAAO,CAAC5I,KAAK,CAAC;EACzB,KAAA;KACH,CAAA;EACL,CAAA;;EAEA,SAASkQ,SAASA,CAAC3Q,EAAE,EAAE;EACnB,EAAA,IAAI0Q,KAAK,GAAG1Q,EAAE,CAAC8O,QAAQ,CAAC4B,KAAK,CAAA;EAAA,EAAA,IAAA/L,KAAA,GAAA,SAAAA,KAAAzE,CAAAA,GAAA,EACN;EACnB,IAAA,IAAMkR,OAAO,GAAGV,KAAK,CAACxQ,GAAG,CAAC,CAAC;EAC3B,IAAA,IAAI8O,KAAK,CAACc,OAAO,CAACsB,OAAO,CAAC,EAAE;EACxB;EACAA,MAAAA,OAAO,CAAC/P,OAAO,CAAC,UAAC+P,OAAO,EAAK;EACzBC,QAAAA,aAAa,CAACrR,EAAE,EAAEE,GAAG,EAAEkR,OAAO,CAAC,CAAA;EACnC,OAAC,CAAC,CAAA;EACN,KAAC,MAAM;EACHC,MAAAA,aAAa,CAACrR,EAAE,EAAEE,GAAG,EAAEkR,OAAO,CAAC,CAAC;EACpC,KAAA;KACH,CAAA;IAVD,KAAK,IAAIlR,GAAG,IAAIwQ,KAAK,EAAA;EAAA/L,IAAAA,KAAA,CAAAzE,GAAA,CAAA,CAAA;EAAA,GAAA;EAWzB,CAAA;;EAEA;EACA,SAASmR,aAAaA,CAACrR,EAAE,EAAEiK,QAAQ,EAAEmH,OAAO,EAAE1P,OAAO,EAAE;EACnD,EAAA,IAAI5B,OAAA,CAAOsR,OAAO,CAAA,IAAI,QAAQ,EAAE;EAC5B1P,IAAAA,OAAO,GAAG0P,OAAO,CAAA;EACjBA,IAAAA,OAAO,GAAGA,OAAO,CAACA,OAAO,CAAC;EAC9B,GAAA;;EACA,EAAA,IAAI,OAAOA,OAAO,IAAI,QAAQ,EAAE;EAC5BA,IAAAA,OAAO,GAAGpR,EAAE,CAACoR,OAAO,CAAC,CAAC;EAC1B,GAAA;;IACA,OAAOpR,EAAE,CAACsR,MAAM,CAACrH,QAAQ,EAAEmH,OAAO,EAAE1P,OAAO,CAAC,CAAA;EAChD,CAAA;EAEO,SAAS6P,UAAUA,CAAChO,GAAG,EAAE;EAC5BA,EAAAA,GAAG,CAACQ,SAAS,CAACyN,SAAS,GAAG,UAAUvP,EAAE,EAAE;MACpCe,QAAQ,CAACf,EAAE,CAAC,CAAA;KACf,CAAA;IACDsB,GAAG,CAACQ,SAAS,CAACuN,MAAM,GAAG,UAAUrH,QAAQ,EAAEhI,EAAE,EAAgB;EAAA,IAAA,IAAdP,OAAO,GAAAkM,SAAA,CAAAtI,MAAA,GAAA,CAAA,IAAAsI,SAAA,CAAA,CAAA,CAAA,KAAAhC,SAAA,GAAAgC,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EACvD;EACA;EACA,IAAA,IAAI5D,OAAO,CAAC,IAAI,EAAEC,QAAQ,EAAEhI,EAAE,EAAAJ,cAAA,CAAAA,cAAA,CAAA,EAAA,EAAOH,OAAO,CAAA,EAAA,EAAA,EAAA;EAAEwI,MAAAA,IAAI,EAAE,IAAA;EAAI,KAAA,CAAE,CAAC,CAAA;MAC3D,IAAIxI,OAAO,CAAC+P,SAAS,EAAE;QACnBxP,EAAE,EAAE,CAAC;EACT,KAAA;KACH,CAAA;EACL;;ECrHO,SAASyP,SAASA,CAACnO,GAAG,EAAE;EAC3BA,EAAAA,GAAG,CAACQ,SAAS,CAACD,KAAK,GAAG,UAAUpC,OAAO,EAAE;MACrC,IAAM1B,EAAE,GAAG,IAAI,CAAA;EACfA,IAAAA,EAAE,CAAC8O,QAAQ,GAAGvN,YAAY,CAACvB,EAAE,CAACgE,WAAW,CAACtC,OAAO,EAAEA,OAAO,CAAC,CAAC;;EAE5DgN,IAAAA,QAAQ,CAAC1O,EAAE,EAAE,cAAc,CAAC,CAAA;EAC5B;MACAoQ,SAAS,CAACpQ,EAAE,CAAC,CAAA;EACb0O,IAAAA,QAAQ,CAAC1O,EAAE,EAAE,SAAS,CAAC,CAAA;;EAEvB;EACA,IAAA,IAAIA,EAAE,CAAC8O,QAAQ,CAACrJ,EAAE,EAAE;QAChBzF,EAAE,CAAC2R,MAAM,CAAC3R,EAAE,CAAC8O,QAAQ,CAACrJ,EAAE,CAAC,CAAA;EAC7B,KAAA;KACH,CAAA;;EAED;EACAlC,EAAAA,GAAG,CAACQ,SAAS,CAAC4N,MAAM,GAAG,UAAUlM,EAAE,EAAE;EACjC;MACA,IAAMzF,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAM0B,OAAO,GAAG1B,EAAE,CAAC8O,QAAQ,CAAA;EAC3BrJ,IAAAA,EAAE,GAAGhD,QAAQ,CAACmP,aAAa,CAACnM,EAAE,CAAC,CAAA;MAC/BzF,EAAE,CAACyN,GAAG,GAAGhI,EAAE,CAAA;EAEX,IAAA,IAAI,CAAC/D,OAAO,CAACkH,MAAM,EAAE;EACjB;EACA,MAAA,IAAIF,QAAQ,GAAGhH,OAAO,CAACgH,QAAQ,CAAA;EAC/B,MAAA,IAAI,CAACA,QAAQ,IAAIjD,EAAE,EAAE;UACjBiD,QAAQ,GAAGjD,EAAE,CAACoM,SAAS,CAAA;EAC3B,OAAA;EACA;EACA,MAAA,IAAMjJ,MAAM,GAAGH,kBAAkB,CAACC,QAAQ,CAAC,CAAA;QAC3ChH,OAAO,CAACkH,MAAM,GAAGA,MAAM,CAAA;EAC3B,KAAA;EACA;EACA;;EAEA;EACA6F,IAAAA,cAAc,CAACzO,EAAE,EAAEyF,EAAE,CAAC,CAAA;KACzB,CAAA;EACL;;EC3CO,SAASqM,WAAWA,CAACvO,GAAG,EAAE;EAC7B;EACAA,EAAAA,GAAG,CAACQ,SAAS,CAACgO,EAAE,GAAG,YAAY;EAC3B,IAAA,OAAOrE,aAAa,CAAA8B,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAApO,MAAA,CAAA4N,KAAA,CAAAjL,SAAA,CAAAwB,KAAA,CAAAsF,IAAA,CAAK+C,SAAS,CAAC,CAAA,CAAA,CAAA;KAC3C,CAAA;EACD;EACArK,EAAAA,GAAG,CAACQ,SAAS,CAACiO,EAAE,GAAG,UAAUpM,IAAI,EAAE;EAC/B,IAAA,OAAOqM,iBAAiB,CAAC,IAAI,EAAErM,IAAI,CAAC,CAAA;KACvC,CAAA;EACD;EACArC,EAAAA,GAAG,CAACQ,SAAS,CAACmO,EAAE,GAAG,UAAUtS,GAAG,EAAE;EAC9B,IAAA,IAAIE,OAAA,CAAOF,GAAG,CAAA,IAAI,QAAQ,EAAE,OAAOwF,IAAI,CAACC,SAAS,CAACzF,GAAG,CAAC,CAAA;EACtD,IAAA,OAAOA,GAAG,CAAA;KACb,CAAA;EACD2D,EAAAA,GAAG,CAACQ,SAAS,CAAC6K,OAAO,GAAG,YAAY;MAChC,IAAM5O,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAI4I,MAAM,GAAG5I,EAAE,CAAC8O,QAAQ,CAAClG,MAAM,CAAC;EAChC,IAAA,IAAIsC,KAAK,GAAGtC,MAAM,CAACiC,IAAI,CAAC7K,EAAE,CAAC,CAAA;EAC3B,IAAA,OAAOkL,KAAK,CAAA;KACf,CAAA;EACL,CAAA;EAEO,SAASwC,aAAaA,CAAC1N,EAAE,EAAE0G,GAAG,EAA0B;EAAA,EAAA,IAAxBoF,IAAI,GAAA8B,SAAA,CAAAtI,MAAA,GAAA,CAAA,IAAAsI,SAAA,CAAA,CAAA,CAAA,KAAAhC,SAAA,GAAAgC,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,KAAAyB,IAAAA,IAAA,GAAAzB,SAAA,CAAAtI,MAAA,EAAKgB,QAAQ,OAAA0I,KAAA,CAAAK,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAE,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA,EAAA,EAAA;EAARjJ,IAAAA,QAAQ,CAAAiJ,IAAA,GAAA3B,CAAAA,CAAAA,GAAAA,SAAA,CAAA2B,IAAA,CAAA,CAAA;EAAA,GAAA;EACzD;EACA;EACA;EACA,EAAA,IAAIrM,aAAa,CAACwD,GAAG,CAAC,EAAE;EACpB,IAAA,OAAOwE,KAAK,CAAClL,EAAE,EAAE0G,GAAG,EAAEoF,IAAI,EAAEA,IAAI,CAAC5L,GAAG,EAAEoG,QAAQ,EAAEsF,SAAS,CAAC,CAAA;EAC9D,GAAC,MAAM;MACH,IAAMuG,IAAI,GAAGnS,EAAE,CAAC8O,QAAQ,CAAChO,UAAU,CAAC4F,GAAG,CAAC,CAAA;EACxC;EACA,IAAA,OAAO4G,eAAe,CAACtN,EAAE,EAAE0G,GAAG,EAAEoF,IAAI,EAAEA,IAAI,CAAC5L,GAAG,EAAEoG,QAAQ,EAAE6L,IAAI,CAAC,CAAA;EACnE,GAAA;EACJ,CAAA;EAEA,SAAS7E,eAAeA,CAACtN,EAAE,EAAE0G,GAAG,EAAEoF,IAAI,EAAE5L,GAAG,EAAEoG,QAAQ,EAAE6L,IAAI,EAAE;EACzD,EAAA,IAAItS,QAAQ,CAACsS,IAAI,CAAC,EAAE;MAChBA,IAAI,GAAGnS,EAAE,CAAC8O,QAAQ,CAAC3K,KAAK,CAACV,MAAM,CAAC0O,IAAI,CAAC,CAAC;EAC1C,GAAA;EACA;IACArG,IAAI,CAACxK,IAAI,GAAG;MACRiM,IAAI,EAAA,SAAAA,IAACrC,CAAAA,KAAK,EAAE;QACR,IAAIzJ,KAAK,GAAIyJ,KAAK,CAACsC,iBAAiB,GAAG,IAAI2E,IAAI,CAAC;EAC5CC,QAAAA,YAAY,EAAE,IAAA;EAClB,OAAC,CAAE,CAAC;EACJ3Q,MAAAA,KAAK,CAACkQ,MAAM,EAAE,CAAC;EACnB,KAAA;KACH,CAAA;;IACD,IAAIvN,SAAS,GAAG8G,KAAK,CACjBlL,EAAE,EAAAoB,gBAAAA,CAAAA,MAAA,CACe+Q,IAAI,CAAC3O,GAAG,OAAApC,MAAA,CAAIsF,GAAG,CAAA,EAChCoF,IAAI,EACJ5L,GAAG,EACH0L,SAAS,EACTA,SAAS,EACT;EAAEuG,IAAAA,IAAI,EAAJA,IAAI;EAAE7L,IAAAA,QAAQ,EAARA,QAAAA;EAAS,GACrB,CAAC,CAAA;EACD,EAAA,OAAOlC,SAAS,CAAA;EACpB,CAAA;EAEO,SAAS6N,iBAAiBA,CAACjS,EAAE,EAAE4F,IAAI,EAAE;EACxC,EAAA,OAAOsF,KAAK,CAAClL,EAAE,EAAE4L,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEhG,IAAI,CAAC,CAAA;EACtE,CAAA;EAEA,SAASsF,KAAKA,CAAClL,EAAE,EAAE0G,GAAG,EAAEoF,IAAI,EAAE5L,GAAG,EAAEoG,QAAQ,EAAEV,IAAI,EAAEyM,gBAAgB,EAAE;IACjE,OAAO;EACHrS,IAAAA,EAAE,EAAFA,EAAE;EACF0G,IAAAA,GAAG,EAAHA,GAAG;EACHoF,IAAAA,IAAI,EAAJA,IAAI;EACJ5L,IAAAA,GAAG,EAAHA,GAAG;EACHoG,IAAAA,QAAQ,EAARA,QAAQ;EACRV,IAAAA,IAAI,EAAJA,IAAI;MACJyM,gBAAgB,EAAhBA,gBAAgB;EAChB;KACH,CAAA;EACL;;ECvEA,SAAS9O,GAAGA,CAAC7B,OAAO,EAAE;EAClB,EAAA,IAAI,CAACoC,KAAK,CAACpC,OAAO,CAAC,CAAC;EACxB,CAAA;;EAEA;EACAgQ,SAAS,CAACnO,GAAG,CAAC,CAAA;EACd;EACA8K,cAAc,CAAC9K,GAAG,CAAC,CAAA;EACnB;EACAuO,WAAW,CAACvO,GAAG,CAAC,CAAA;EAChBgO,UAAU,CAAChO,GAAG,CAAC,CAAA;EAEfU,aAAa,CAACV,GAAG,CAAC,CAAA;;EAElB;EACA,IAAI+O,GAAG,GAAG,IAAI/O,GAAG,CAAC;EACduI,EAAAA,IAAI,EAAE;EACFvH,IAAAA,IAAI,EAAE,IAAA;EACV,GAAA;EACJ,CAAC,CAAC,CAAA;EAGF,IAAIgO,OAAO,GAAG9J,kBAAkB,CAAA,6MAOhC,CAAC,CAAA;EACD,IAAI+J,MAAM,GAAGD,OAAO,CAAC1H,IAAI,CAACyH,GAAG,CAAC,CAAC;EAC/B7P,QAAQ,CAACgQ,IAAI,CAACvG,WAAW,CAACf,SAAS,CAACqH,MAAM,CAAC,CAAC,CAAA;EAE5C,IAAIE,GAAG,GAAG,IAAInP,GAAG,CAAC;EACduI,EAAAA,IAAI,EAAE;EACFvH,IAAAA,IAAI,EAAE,IAAA;EACV,GAAA;EACJ,CAAC,CAAC,CAAA;EACF,IAAIoO,OAAO,GAAGlK,kBAAkB,CAAA,2PAQhC,CAAC,CAAA;EACD,IAAImK,MAAM,GAAGD,OAAO,CAAC9H,IAAI,CAAC6H,GAAG,CAAC,CAAC;;EAE/B3P,UAAU,CAAC,YAAM;EACbiI,EAAAA,KAAK,CAACwH,MAAM,EAAEI,MAAM,CAAC,CAAC;EAC1B,CAAC,EAAE,IAAI,CAAC;;;;;;;;"}