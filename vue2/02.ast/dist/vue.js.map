{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{aaaaa}}\n\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            let obj = {}\n            attr.value.split(';').forEach((item) => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        // element = 1 text = 3\n        return generate(el) // 生成元素节点\n    } else {\n        let text = el.text\n        // 如果是普通文本 不带{{}}\n        if (!defaultTagRE.test(text)) {\n            return `_v('${text}')`\n        } else {\n            let tokens = [] // 存放每一段的代码\n            let lastIndex = (defaultTagRE.lastIndex = 0) // 如果正则是全局模式，则每次使用前置为0\n            let match, index // 每次匹配到的结果\n            while ((match = defaultTagRE.exec(text))) {\n                index = match.index // 保存匹配到的索引\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children // 获取儿子\n    if (children) {\n        return children.map((c) => gen(c)).join(',')\n    }\n    return false\n}\n\nexport function generate(el) {\n    let children = genChildren(el)\n    let code = `_c('${el.tag}',${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n    }${children ? `,${children}` : ''})`\n    return code\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // 标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //  用来获取的标签名的 match后的索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配开始标签的\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配闭合标签的\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute =\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/ //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{aaaaa}}\n\nexport function parseHTML(html) {\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName, //标签名\n            type: 1, // 元素类型\n            children: [], // 孩子列表\n            attrs, // 属性集合\n            parent: null, // 父元素\n        }\n    }\n\n    let root\n    let currentParent\n    let stack = []\n\n    // 开始标签\n    function start(tagName, attrs) {\n        let element = createASTElement(tagName, attrs)\n        if (!root) {\n            root = element\n        }\n        currentParent = element // 当前解析的标签保存起来\n        stack.push(element)\n    }\n\n    // 在结尾标签处创建父子关系\n    function end(tagName) {\n        let last = stack.pop()\n        if (last.tag !== tagName) {\n            throw new Error('标签有误')\n        }\n        currentParent = stack[stack.length - 1]\n        if (currentParent) {\n            last.parent = currentParent\n            currentParent.children.push(last)\n        }\n    }\n\n    function charts(text) {\n        text = text.replace(/\\s/g, '')\n        if (text) {\n            currentParent.children.push({\n                type: 3,\n                text,\n            })\n        }\n    }\n\n    // 截取字符串\n    function advance(n) {\n        html = html.substring(n)\n    }\n    // 匹配开始\n    function parseStartTag() {\n        const start = html.match(startTagOpen)\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: [],\n            }\n            // 删除开始标签\n            advance(start[0].length)\n\n            // 不是结尾并且有属性\n            let end\n            let attr\n            while (\n                !(end = html.match(startTagClose)) &&\n                (attr = html.match(attribute))\n            ) {\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5],\n                })\n                advance(attr[0].length)\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match\n        }\n        return false // 不是开始标签\n    }\n    // 只要html不为空就一直解析\n    while (html) {\n        let textEnd = html.indexOf('<')\n        if (textEnd == 0) {\n            // 开始标签\n            const startTagMatch = parseStartTag()\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            // 结束标签\n            const endTagMatch = html.match(endTag)\n            if (endTagMatch) {\n                end(endTagMatch[1])\n                advance(endTagMatch[0].length)\n                continue\n            }\n        }\n        // 文本\n        let text\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            charts(text)\n            advance(text.length)\n        }\n    }\n\n    return root\n}\n","// html => render函数\n// ast语法树\nimport { generate } from './generate'\nimport { parseHTML } from './parse'\n\nexport function compileToFunctions(template) {\n    // 1、需要将html代码转化成ast语法树 可以用ast树来描述语言本身\n    let ast = parseHTML(template)\n    // 2、优化静态节点\n    // 3、通过这棵树 重新生成代码\n    let code = generate(ast)\n    // 4、将字符串变成函数 通过with来进行取值 稍后调用render函数就可以通过该变this 让这个函数内部取到结果\n    let render = new Function(`with(this){return ${code}}`)\n    return render\n}\n","// 将虚拟节点转换成真实节点\n// oldVnode => id#app\n// vnode 我们根据模板生成的虚拟dom\nexport function patch(oldVnode, vnode) {\n    if (oldVnode.nodeType == 1) {\n        // 用vnode  来生成真实dom 替换原本的dom元素\n        const parentElm = oldVnode.parentNode // 找到他的父亲\n        let elm = createElm(vnode) //根据虚拟节点 创建元素\n        parentElm.insertBefore(elm, oldVnode.nextSibling)\n\n        parentElm.removeChild(oldVnode)\n    }\n}\n\nfunction createElm(vnode) {\n    let { tag, data, children, text, vm } = vnode\n    if (typeof tag === 'string') {\n        // 元素\n        vnode.el = document.createElement(tag) // 虚拟节点会有一个el属性 对应真实节点\n\n        // 只有元素才有属性\n        updateProperties(vnode)\n\n        children.forEach((child) => {\n            vnode.el.appendChild(createElm(child))\n        })\n    } else {\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\nfunction updateProperties(vnode) {\n    let el = vnode.el\n    let newProps = vnode.data || {}\n    for (let key in newProps) {\n        if (key == 'style') {\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName]\n            }\n        } else if (key == 'class') {\n            el.className = el.class\n        } else {\n            el.setAttribute(key, newProps[key])\n        }\n    }\n}\n","import { patch } from './vdom/patch'\n\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        patch(vm.$el, vnode)\n    }\n}\n\nexport function mountComponent(vm, el) {\n    // 调用render方法去渲染el属性\n    // 先调用render方法创建虚拟节点，再将虚拟节点渲染到页面上\n    vm._update(vm._render())\n}\n","export function isFunction(val) {\n    return typeof val === 'function'\n}\n\nexport function isObject(val) {\n    return typeof val == 'object' && val !== null\n}\n\n// 代理\nexport function proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        },\n    })\n}\n\nexport function defineProperty(target, key, value) {\n    Object.defineProperty(target, key, {\n        enumerable: false, // 不能被枚举\n        configurable: false,\n        value,\n    })\n}\n","// 拿到数组原型上的方法\nlet oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype)\n\nlet methods = ['push', 'shift', 'unshift', 'pop', 'reverse', 'sort', 'splice']\n\nmethods.forEach((method) => {\n    // 用户调用的如果是以上七个方法 会用我自己重写的，否则用原来的数组方法\n    arrayMethods[method] = function (...args) {\n        //  args 是参数列表 arr.push(1,2,3)\n        oldArrayPrototype[method].call(this, ...args)\n        let inserted\n        let ob = this.__ob__ // 根据当前数组获取到observer实例\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args // 就是新增的内容\n                break\n            case 'splice':\n                inserted = args.slice(2)\n            default:\n                break\n        }\n        // 如果有新增的内容要进行继续劫持, 我需要观测的数组里的每一项，而不是数组\n        if (inserted) ob.observeArray(inserted)\n    }\n})\n","import { defineProperty, isObject } from '../utils'\nimport { arrayMethods } from './array'\n\nclass Observer {\n    constructor(data) {\n        // 判断一个对象是否被观测过，看他有没有__ob__这个属性\n        defineProperty(data, '__ob__', this)\n\n        // 使用defineProperty重新定义属性\n        if (Array.isArray(data)) {\n            // 函数劫持\n            data.__proto__ = arrayMethods\n            this.observeArray(data)\n        } else {\n            this.walk(data)\n        }\n    }\n    observeArray(data) {\n        // 对我们数组的数组 和 数组中的对象再次劫持 递归了 [{a:1},{b:2}]\n        data.forEach((item) => observe(item))\n    }\n    walk(data) {\n        Object.keys(data).forEach((key) => {\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n\nfunction defineReactive(data, key, value) {\n    observe(value) // 本身用户默认值是对象套对象 需要递归处理\n    Object.defineProperty(data, key, {\n        get() {\n            console.log('用户获取值了')\n            return value\n        },\n        set(newValue) {\n            console.log('用户设置值了')\n            if (newValue == value) return\n            observe(newValue) // 如果用户赋值一个新对象 ，需要将这个对象进行劫持\n            value = newValue\n        },\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才观测\n    if (!isObject(data)) {\n        return\n    }\n    // 如果对象被观测过\n    if (data.__ob__) {\n        return\n    }\n    return new Observer(data)\n}\n","import { observe } from './observer/index'\nimport { isFunction, proxy } from './utils'\n\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.methods) {\n        initMethods(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data\n    data = vm._data = isFunction(data) ? data.call(vm) : data\n\n    // 用户去vm.xxx => vm._data.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n\n    // 数据劫持\n    observe(vm._data)\n}\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n","import { compileToFunctions } from './compiler/index'\nimport { mountComponent } from './lifecycle'\nimport { initState } from './state'\n\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        const vm = this\n        vm.$options = options\n\n        // 对数据进行初始化\n        initState(vm)\n\n        // 如果当前有el属性说明要渲染模板\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    // 1、render 2、template 3、外部template\n    Vue.prototype.$mount = function (el) {\n        // 挂载操作\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        vm.$el = el\n\n        if (!options.render) {\n            //没有render 将template转换成render方法\n            let template = options.template\n            if (!template && el) {\n                template = el.outerHTML\n            }\n            // 编译原理 将模板编译成render函数\n            const render = compileToFunctions(template)\n            options.render = render\n        }\n        // console.log(options.render) // 渲染时用的都是这个render方法\n        // 有render方法\n\n        // 需要挂载这个组件\n        mountComponent(vm, el)\n    }\n}\n","export function renderMixin(Vue) {\n    // 创建元素\n    Vue.prototype._c = function () {\n        return createElement(this, ...arguments)\n    }\n    // 创建虚拟dom文本元素\n    Vue.prototype._v = function (text) {\n        return createTextElement(this, text)\n    }\n    // stringity\n    Vue.prototype._s = function (val) {\n        if (typeof val == 'object') return JSON.stringify(val)\n        return val\n    }\n    Vue.prototype._render = function () {\n        const vm = this\n        let render = vm.$options.render // 就是我们解析出来的render方法，同时也有可能是用户写的\n        let vnode = render.call(vm)\n        console.log(vnode)\n        return vnode\n    }\n}\n\nexport function createElement(vm, tag, data = {}, ...children) {\n    return vnode(vm, tag, data, data.key, children, undefined)\n}\n\nexport function createTextElement(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(vm, tag, data, key, children, text) {\n    return {\n        vm,\n        tag,\n        data,\n        key,\n        children,\n        text,\n        // .....\n    }\n}\n","import { initMixin } from './init'\nimport { lifecycleMixin } from './lifecycle'\nimport { renderMixin } from './vdom/index'\n\nfunction Vue(options) {\n    this._init(options) // 入口方法，做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue)\n// 混合生命周期 组件挂载、组件更新\nlifecycleMixin(Vue)\n// _render\nrenderMixin(Vue)\n\nexport default Vue\n"],"names":["defaultTagRE","genProps","attrs","str","_loop","attr","i","name","obj","value","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","concat","JSON","stringify","length","slice","gen","el","type","generate","text","test","tokens","lastIndex","match","index","exec","push","trim","join","genChildren","children","map","c","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","parent","root","currentParent","stack","start","element","end","last","pop","Error","charts","replace","advance","n","substring","parseStartTag","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","nodeType","parentElm","parentNode","elm","createElm","insertBefore","nextSibling","removeChild","data","vm","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","prototype","_update","$el","mountComponent","_render","isFunction","val","isObject","_typeof","proxy","source","Object","defineProperty","get","set","newValue","target","enumerable","configurable","oldArrayPrototype","Array","arrayMethods","create","methods","method","_oldArrayPrototype$me","_len","arguments","args","_key","call","apply","inserted","ob","__ob__","observeArray","Observer","_classCallCheck","isArray","__proto__","walk","_createClass","observe","keys","defineReactive","console","log","initState","opts","$options","props","initData","computed","watch","_data","initMixin","_init","options","$mount","querySelector","outerHTML","renderMixin","_c","_v","createTextElement","_s","undefined"],"mappings":"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"}