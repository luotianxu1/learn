{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/global-api/index.js","../src/compiler/generate.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observer/dep.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function'\n}\n\nexport function isObject(val) {\n    return typeof val == 'object' && val !== null\n}\n\n// 代理\nexport function proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        },\n    })\n}\n\nexport function defineProperty(target, key, value) {\n    Object.defineProperty(target, key, {\n        enumerable: false, // 不能被枚举\n        configurable: false,\n        value,\n    })\n}\n\nexport const lifeCycleHooks = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n]\n// 策略模式\nlet strats = {} // 存放各种策略\nstrats.data = function (parentVal, childVal) {\n    // 这里应该有合并策略\n    return childVal\n}\n// strats.computed = function () {}\n// strats.watch = function () {}\n\n// 生命周期的合并\nfunction mergeHook(parentVal, childVal) {\n    if (childVal) {\n        if (parentVal) {\n            return parentVal.concat(childVal) // 后续\n        } else {\n            return [childVal] // 第一次\n        }\n    } else {\n        return parentVal\n    }\n}\nlifeCycleHooks.forEach((hook) => {\n    strats[hook] = mergeHook\n})\n\nexport function mergeOptions(parent, child) {\n    // 遍历父亲，可能是父亲有，儿子没有\n    const options = {}\n\n    for (let key in parent) {\n        // 父亲和儿子都有在这就处理了\n        mergeField(key)\n    }\n\n    // 儿子有父亲没有\n    for (let key in child) {\n        if (parent.hasOwnProperty(key)) {\n            continue\n        }\n        mergeField(key)\n    }\n\n    function mergeField(key) {\n        let parentVal = parent[key]\n        let childVal = child[key]\n        // 策略模式\n        if (strats[key]) {\n            // 如果有对应的策略就调用对应的策略即可\n            options[key] = strats[key](parentVal, childVal)\n        } else {\n            if (isObject(parentVal) && isObject(childVal)) {\n                options[key] = { ...parentVal, ...childVal }\n            } else {\n                // 父亲中有，儿子中没有\n                options[key] = child[key] || parent[key]\n            }\n        }\n    }\n\n    return options\n}\n\nlet callbacks = []\nlet pending = false\n\nfunction flushCallbacks() {\n    callbacks.forEach((cb) => cb()) // 让nextTick中传入的方法依次执行\n    pending = false // 标识已经执行完毕\n    callbacks = []\n}\n\nfunction timer(flushCallbacks) {\n    let timerFn = () => {}\n    if (Promise) {\n        timerFn = () => {\n            Promise.resolve().then(flushCallbacks)\n        }\n    } else if (MutationObserver) {\n        let textNode = document.createTextNode(1)\n        let observe = new MutationObserver(flushCallbacks)\n        observe.observe(textNode, {\n            characterData: true,\n        })\n        timerFn = () => {\n            textNode.textContent = 3\n        }\n        // 微任务\n    } else if (setImmediate) {\n        timerFn = () => {\n            setImmediate(flushCallbacks)\n        }\n    } else {\n        timerFn = () => {\n            setTimeout(flushCallbacks)\n        }\n    }\n    timerFn()\n}\n\nexport function nextTick(cb) {\n    // 因为内部会调用nextTick 用户也会调用，但是异步只需要一次\n    callbacks.push(cb)\n    if (!pending) {\n        timer(flushCallbacks) // 这个方法是异步方法 做了兼容处理\n        pending = true\n    }\n}\n","import { mergeOptions } from '../utils'\n\nexport function initGlobalApi(Vue) {\n    Vue.options = {} // 用来存放全局的配置 , 每个组件初始化的时候都会和options选项进行合并\n    Vue.mixin = function (options) {\n        // 合并对象 先考虑生命周期，先不考虑其他的合并\n        this.options = mergeOptions(this.options, options)\n        return this\n    }\n}\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{aaaaa}}\n\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            let obj = {}\n            attr.value.split(';').forEach((item) => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        // element = 1 text = 3\n        return generate(el) // 生成元素节点\n    } else {\n        let text = el.text\n        // 如果是普通文本 不带{{}}\n        if (!defaultTagRE.test(text)) {\n            return `_v('${text}')`\n        } else {\n            let tokens = [] // 存放每一段的代码\n            let lastIndex = (defaultTagRE.lastIndex = 0) // 如果正则是全局模式，则每次使用前置为0\n            let match, index // 每次匹配到的结果\n            while ((match = defaultTagRE.exec(text))) {\n                index = match.index // 保存匹配到的索引\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children // 获取儿子\n    if (children) {\n        return children.map((c) => gen(c)).join(',')\n    }\n    return false\n}\n\nexport function generate(el) {\n    let children = genChildren(el)\n    let code = `_c('${el.tag}',${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n    }${children ? `,${children}` : ''})`\n    return code\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // 标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //  用来获取的标签名的 match后的索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配开始标签的\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配闭合标签的\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute =\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/ //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{aaaaa}}\n\nexport function parseHTML(html) {\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName, //标签名\n            type: 1, // 元素类型\n            children: [], // 孩子列表\n            attrs, // 属性集合\n            parent: null, // 父元素\n        }\n    }\n\n    let root\n    let currentParent\n    let stack = []\n\n    // 开始标签\n    function start(tagName, attrs) {\n        let element = createASTElement(tagName, attrs)\n        if (!root) {\n            root = element\n        }\n        currentParent = element // 当前解析的标签保存起来\n        stack.push(element)\n    }\n\n    // 在结尾标签处创建父子关系\n    function end(tagName) {\n        let last = stack.pop()\n        if (last.tag !== tagName) {\n            throw new Error('标签有误')\n        }\n        currentParent = stack[stack.length - 1]\n        if (currentParent) {\n            last.parent = currentParent\n            currentParent.children.push(last)\n        }\n    }\n\n    function charts(text) {\n        text = text.replace(/\\s/g, '')\n        if (text) {\n            currentParent.children.push({\n                type: 3,\n                text,\n            })\n        }\n    }\n\n    // 截取字符串\n    function advance(n) {\n        html = html.substring(n)\n    }\n    // 匹配开始\n    function parseStartTag() {\n        const start = html.match(startTagOpen)\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: [],\n            }\n            // 删除开始标签\n            advance(start[0].length)\n\n            // 不是结尾并且有属性\n            let end\n            let attr\n            while (\n                !(end = html.match(startTagClose)) &&\n                (attr = html.match(attribute))\n            ) {\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5],\n                })\n                advance(attr[0].length)\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match\n        }\n        return false // 不是开始标签\n    }\n    // 只要html不为空就一直解析\n    while (html) {\n        let textEnd = html.indexOf('<')\n        if (textEnd == 0) {\n            // 开始标签\n            const startTagMatch = parseStartTag()\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            // 结束标签\n            const endTagMatch = html.match(endTag)\n            if (endTagMatch) {\n                end(endTagMatch[1])\n                advance(endTagMatch[0].length)\n                continue\n            }\n        }\n        // 文本\n        let text\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            charts(text)\n            advance(text.length)\n        }\n    }\n\n    return root\n}\n","// html => render函数\n// ast语法树\nimport { generate } from './generate'\nimport { parseHTML } from './parse'\n\nexport function compileToFunctions(template) {\n    // 1、需要将html代码转化成ast语法树 可以用ast树来描述语言本身\n    let ast = parseHTML(template)\n    // 2、优化静态节点\n    // 3、通过这棵树 重新生成代码\n    let code = generate(ast)\n    // 4、将字符串变成函数 通过with来进行取值 稍后调用render函数就可以通过该变this 让这个函数内部取到结果\n    let render = new Function(`with(this){return ${code}}`)\n    return render\n}\n","let id = 0\nclass Dep {\n    constructor() {\n        this.subs = [] // 用来存放watcher的\n        this.id = id++\n    }\n    depend() {\n        Dep.target.addDep(this) // 实现双向记忆，让watcher记住dep的同时，让dep也记住wathcer\n    }\n    addSub(watcher) {\n        this.subs.push(watcher)\n    }\n    notify() {\n        this.subs.forEach((watcher) => watcher.update())\n    }\n}\n\nDep.target = null\nexport function pushTarget(watcher) {\n    Dep.target = watcher\n}\n\nexport function popTarget() {\n    Dep.target = null\n}\n\nexport default Dep\n\n// 多对多的关系 一个属性有一个dep，dep是用来收集watcher的\n// dep可以存多个watcher\n// 1个watcher可以对应多个dep\n","import { nextTick } from '../utils'\n\nlet queue = [] // 将需要批量更新的watcher存到一个队列中，稍后让watcher执行\nlet has = {}\nlet pending = false\n\nfunction flushSchedulerQueue() {\n    queue.forEach((watcher) => {\n        watcher.run()\n        if (watcher.isWatcher) {\n            watcher.cb()\n        }\n    })\n    queue = [] // 清空watcher队列\n    has = {} // 清空标识id\n    pending = false\n}\n\nexport function queueWatcher(watcher) {\n    const id = watcher.id\n    if (has[id] == null) {\n        queue.push(watcher) // 将watcher存到队列中\n        has[id] = true\n\n        if (!pending) {\n            //如果还没清空队列，就不要再开定时器\n            // 等待所有同步代码执行完毕后再执行\n            nextTick(flushSchedulerQueue)\n            pending = true\n        }\n    }\n}\n","import { popTarget, pushTarget } from './dep'\nimport { queueWatcher } from './scheduler'\n\nlet id = 0\nclass Watcher {\n    // vm实例\n    // exprOrFn vm._update(vm._render())\n    constructor(vm, exprOrFn, cb, options) {\n        this.vm = vm\n        this.exprOrFn = exprOrFn\n        this.cb = cb\n        this.options = options\n        this.isWatcher = typeof options == 'boolean' // 是否为渲染watcher\n        this.user = options.user // 是否为用户watcher\n        this.id = id++ // watcher的唯一标识\n        this.deps = [] //记录有多少dep依赖它\n        this.depsId = new Set()\n\n        if (typeof exprOrFn == 'function') {\n            this.getter = exprOrFn\n        } else {\n            // exprOrFn可能传递过来的是一个字符串\n            this.getter = function () {\n                // 当去当前实例上取值时，才会出发依赖收集\n                // age.n  vm['age.n']  =》 vm['age']['n']\n                let path = exprOrFn.split('.') // [age,n]\n                let obj = vm\n                for (let i = 0; i < path.length; i++) {\n                    obj = obj[path[i]]\n                }\n                return obj\n            }\n        }\n        // 默认会先调用一次get方法，进行取值，将结果保留下来\n        this.value = this.get() // 默认会调用get方法\n    }\n    addDep(dep) {\n        let id = dep.id\n        if (!this.depsId.has(id)) {\n            this.deps.push(dep)\n            this.depsId.add(id)\n            dep.addSub(this)\n        }\n    }\n    get() {\n        pushTarget(this) // 当前watcher实例\n        let result = this.getter() // 调用exporOrFn 渲染页面 取值（执行了get方法）\n        this.getter()\n        popTarget()\n        return result\n    }\n    run() {\n        let newValue = this.get()\n        let oldValue = this.value\n        this.value = newValue // 更新老值\n        if (this.user) {\n            this.cb.call(this.vm, newValue, oldValue)\n        }\n    }\n    update() {\n        // 这里不要每次都调用get方法 get方法会重新渲染页面\n        queueWatcher(this)\n    }\n}\n\nexport default Watcher\n\n// 在数据劫持的时候给每个属性都增加了一个dep\n\n// 1.x先把这个渲染watcher放到Dep.taeget属性上\n// 2.开始渲染，取值会调用get方法，需要让这个属性的dep存储当前的watcher\n// 3.页面上所需要的属性都会将这个watcher存在自己的dep中\n// 4.属性更新就重新调用渲染逻辑，通知自己存储的watcher来更新\n","// 将虚拟节点转换成真实节点\n// oldVnode => id#app\n// vnode 我们根据模板生成的虚拟dom\nexport function patch(oldVnode, vnode) {\n    if (oldVnode.nodeType == 1) {\n        // 用vnode  来生成真实dom 替换原本的dom元素\n        const parentElm = oldVnode.parentNode // 找到他的父亲\n        let elm = createElm(vnode) //根据虚拟节点 创建元素\n        parentElm.insertBefore(elm, oldVnode.nextSibling)\n\n        parentElm.removeChild(oldVnode)\n\n        return elm\n    }\n}\n\nfunction createElm(vnode) {\n    let { tag, data, children, text, vm } = vnode\n    if (typeof tag === 'string') {\n        // 元素\n        vnode.el = document.createElement(tag) // 虚拟节点会有一个el属性 对应真实节点\n\n        // 只有元素才有属性\n        updateProperties(vnode)\n\n        children.forEach((child) => {\n            vnode.el.appendChild(createElm(child))\n        })\n    } else {\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\nfunction updateProperties(vnode) {\n    let el = vnode.el\n    let newProps = vnode.data || {}\n    for (let key in newProps) {\n        if (key == 'style') {\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName]\n            }\n        } else if (key == 'class') {\n            el.className = el.class\n        } else {\n            el.setAttribute(key, newProps[key])\n        }\n    }\n}\n","import Watcher from './observer/watcher'\nimport { patch } from './vdom/patch'\n\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        // 用新的创建的元素，替换老的vm.$el\n        vm.$el = patch(vm.$el, vnode)\n    }\n}\n\nexport function mountComponent(vm, el) {\n    // 调用render方法去渲染el属性\n    // 先调用render方法创建虚拟节点，再将虚拟节点渲染到页面上\n    callHook(vm, 'beforeMount')\n\n    let updateComponent = () => {\n        vm._update(vm._render())\n    }\n    // 这个watcher是用于渲染的，目前没有任何功能\n    new Watcher(\n        vm,\n        updateComponent,\n        () => {\n            callHook(vm, 'updated')\n        },\n        true\n    )\n\n    callHook(vm, 'mounted')\n}\n\nexport function callHook(vm, hook) {\n    let handlers = vm.$options[hook]\n    if (handlers) {\n        for (let i = 0; i < handlers.length; i++) {\n            handlers[i].call(vm)\n        }\n    }\n}\n","// 拿到数组原型上的方法\nlet oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype)\n\nlet methods = ['push', 'shift', 'unshift', 'pop', 'reverse', 'sort', 'splice']\n\nmethods.forEach((method) => {\n    // 用户调用的如果是以上七个方法 会用我自己重写的，否则用原来的数组方法\n    arrayMethods[method] = function (...args) {\n        // 我们要知道数组对应哪个dep\n        //  args 是参数列表 arr.push(1,2,3)\n        oldArrayPrototype[method].call(this, ...args)\n        let inserted\n        let ob = this.__ob__ // 根据当前数组获取到observer实例\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args // 就是新增的内容\n                break\n            case 'splice':\n                inserted = args.slice(2)\n            default:\n                break\n        }\n        // 如果有新增的内容要进行继续劫持, 我需要观测的数组里的每一项，而不是数组\n        if (inserted) ob.observeArray(inserted)\n        ob.dep.notify()\n    }\n})\n","import { defineProperty, isObject } from '../utils'\nimport { arrayMethods } from './array'\nimport Dep from './dep'\n\nclass Observer {\n    constructor(data) {\n        this.dep = new Dep() // 数据可能是数组或者对象\n        // 判断一个对象是否被观测过，看他有没有__ob__这个属性\n        defineProperty(data, '__ob__', this)\n\n        // 使用defineProperty重新定义属性\n        if (Array.isArray(data)) {\n            // 函数劫持\n            data.__proto__ = arrayMethods\n            this.observeArray(data)\n        } else {\n            this.walk(data)\n        }\n    }\n    observeArray(data) {\n        // 对我们数组的数组 和 数组中的对象再次劫持 递归了 [{a:1},{b:2}]\n        data.forEach((item) => observe(item))\n    }\n    walk(data) {\n        Object.keys(data).forEach((key) => {\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n\nfunction defineReactive(data, key, value) {\n    let childDep = observe(value) // 获取到数组对应的dep\n\n    let dep = new Dep() // 每个属性都有一个dep\n\n    // 当页面取值时，说明这个值渲染了，将这个watcher和这个属性对应起来\n    Object.defineProperty(data, key, {\n        // 依赖收集\n        get() {\n            if (Dep.target) {\n                // 让属性记住这个watcher\n                dep.depend()\n                if (childDep) {\n                    // 默认给数组增加了一个dep属性，当对数组这个对象取值的时候\n                    childDep.dep.depend() // 数组存起来了这个渲染watcher\n                }\n            }\n            return value\n        },\n        // 依赖更新\n        set(newValue) {\n            if (newValue == value) return\n            observe(newValue) // 如果用户赋值一个新对象 ，需要将这个对象进行劫持\n            value = newValue\n            dep.notify() // 告诉当前的属性存放的watcher执行\n        },\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才观测\n    if (!isObject(data)) {\n        return\n    }\n    // 如果对象被观测过\n    if (data.__ob__) {\n        return\n    }\n    return new Observer(data)\n}\n","import { observe } from './observer/index'\nimport { isFunction, nextTick, proxy } from './utils'\nimport Watcher from './observer/watcher'\n\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.methods) {\n        initMethods(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data\n    data = vm._data = isFunction(data) ? data.call(vm) : data\n\n    // 用户去vm.xxx => vm._data.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n\n    // 数据劫持\n    observe(vm._data)\n}\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {\n    let watch = vm.$options.watch\n    for (let key in watch) {\n        const handler = watch[key] //handler可能是数组、字符串、对象、函数\n        if (Array.isArray(handler)) {\n            //数组\n            handler.forEach((handler) => {\n                createWatcher(vm, key, handler)\n            })\n        } else {\n            createWatcher(vm, key, handler) //字符串、对象、函数\n        }\n    }\n}\n\n// options可以用来标识是用户watcher\nfunction createWatcher(vm, exprOrFn, handler, options) {\n    if (typeof handler == 'object') {\n        options = handler\n        handler = handler.handler // 是一个函数\n    }\n    if (typeof handler == 'string') {\n        handler = vm[handler] // 将实例的方法作为handler\n    }\n    return vm.$watch(exprOrFn, handler, options)\n}\n\nexport function stateMixin(Vue) {\n    Vue.prototype.$nextTick = function (cb) {\n        nextTick(cb)\n    }\n    Vue.prototype.$watch = function (exprOrFn, cb, options = {}) {\n        // 数据应该依赖这个watcher 数据变化后应该让watcher从新执行\n        // vm,name,用户回调，options.user\n        new Watcher(this, exprOrFn, cb, { ...options, user: true })\n        if (options.immediate) {\n            cb() // 如果是immediate应该立刻执行\n        }\n    }\n}\n","import { compileToFunctions } from './compiler/index'\nimport { callHook, mountComponent } from './lifecycle'\nimport { initState } from './state'\nimport { mergeOptions } from './utils'\n\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        const vm = this\n        vm.$options = mergeOptions(vm.constructor.options, options) // 需要将用户自定义的options和全局options合并\n\n        callHook(vm, 'beforeCreate')\n        // 对数据进行初始化\n        initState(vm)\n        callHook(vm, 'created')\n\n        // 如果当前有el属性说明要渲染模板\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    // 1、render 2、template 3、外部template\n    Vue.prototype.$mount = function (el) {\n        // 挂载操作\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        vm.$el = el\n\n        if (!options.render) {\n            //没有render 将template转换成render方法\n            let template = options.template\n            if (!template && el) {\n                template = el.outerHTML\n            }\n            // 编译原理 将模板编译成render函数\n            const render = compileToFunctions(template)\n            options.render = render\n        }\n        // console.log(options.render) // 渲染时用的都是这个render方法\n        // 有render方法\n\n        // 需要挂载这个组件\n        mountComponent(vm, el)\n    }\n}\n","export function renderMixin(Vue) {\n    // 创建元素\n    Vue.prototype._c = function () {\n        return createElement(this, ...arguments)\n    }\n    // 创建虚拟dom文本元素\n    Vue.prototype._v = function (text) {\n        return createTextElement(this, text)\n    }\n    // stringity\n    Vue.prototype._s = function (val) {\n        if (typeof val == 'object') return JSON.stringify(val)\n        return val\n    }\n    Vue.prototype._render = function () {\n        const vm = this\n        let render = vm.$options.render // 就是我们解析出来的render方法，同时也有可能是用户写的\n        let vnode = render.call(vm)\n        return vnode\n    }\n}\n\nexport function createElement(vm, tag, data = {}, ...children) {\n    return vnode(vm, tag, data, data.key, children, undefined)\n}\n\nexport function createTextElement(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(vm, tag, data, key, children, text) {\n    return {\n        vm,\n        tag,\n        data,\n        key,\n        children,\n        text,\n        // .....\n    }\n}\n","import { initGlobalApi } from './global-api/index'\nimport { initMixin } from './init'\nimport { lifecycleMixin } from './lifecycle'\nimport { stateMixin } from './state'\nimport { renderMixin } from './vdom/index'\n\nfunction Vue(options) {\n    this._init(options) // 入口方法，做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue)\n// 混合生命周期 组件挂载、组件更新\nlifecycleMixin(Vue)\n// _render\nrenderMixin(Vue)\nstateMixin(Vue)\n\ninitGlobalApi(Vue)\n\nexport default Vue\n"],"names":["isFunction","val","isObject","_typeof","proxy","vm","source","key","Object","defineProperty","get","set","newValue","target","value","enumerable","configurable","lifeCycleHooks","strats","data","parentVal","childVal","mergeHook","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","_objectSpread","callbacks","pending","flushCallbacks","cb","timer","timerFn","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","nextTick","push","initGlobalApi","Vue","mixin","defaultTagRE","genProps","attrs","str","_loop","attr","i","name","obj","split","item","_item$split","_item$split2","_slicedToArray","JSON","stringify","length","slice","gen","el","type","generate","text","test","tokens","lastIndex","match","index","exec","trim","join","genChildren","children","map","c","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","root","currentParent","stack","start","element","end","last","pop","Error","charts","replace","advance","n","substring","parseStartTag","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","template","ast","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","addDep","addSub","watcher","notify","update","pushTarget","popTarget","queue","has","flushSchedulerQueue","run","isWatcher","queueWatcher","Watcher","exprOrFn","user","deps","depsId","Set","getter","path","dep","add","result","oldValue","call","patch","oldVnode","vnode","nodeType","parentElm","parentNode","elm","createElm","insertBefore","nextSibling","removeChild","createElement","updateProperties","appendChild","newProps","styleName","style","className","setAttribute","lifecycleMixin","prototype","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","$options","oldArrayPrototype","Array","arrayMethods","create","methods","method","_oldArrayPrototype$me","_len","arguments","args","_key","apply","inserted","ob","__ob__","observeArray","Observer","isArray","__proto__","walk","keys","defineReactive","childDep","initState","opts","props","initData","computed","watch","initWatch","_data","handler","createWatcher","$watch","stateMixin","$nextTick","undefined","immediate","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","_v","createTextElement","_s"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,UAAUA,CAACC,GAAG,EAAE;IAC5B,OAAO,OAAOA,GAAG,KAAK,UAAU,CAAA;EACpC,CAAA;EAEO,SAASC,QAAQA,CAACD,GAAG,EAAE;IAC1B,OAAOE,OAAA,CAAOF,GAAG,CAAA,IAAI,QAAQ,IAAIA,GAAG,KAAK,IAAI,CAAA;EACjD,CAAA;;EAEA;EACO,SAASG,KAAKA,CAACC,EAAE,EAAEC,MAAM,EAAEC,GAAG,EAAE;EACnCC,EAAAA,MAAM,CAACC,cAAc,CAACJ,EAAE,EAAEE,GAAG,EAAE;MAC3BG,GAAG,EAAA,SAAAA,MAAG;EACF,MAAA,OAAOL,EAAE,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,CAAA;OACzB;MACDI,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACVP,MAAAA,EAAE,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,GAAGK,QAAQ,CAAA;EAC9B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEO,SAASH,cAAcA,CAACI,MAAM,EAAEN,GAAG,EAAEO,KAAK,EAAE;EAC/CN,EAAAA,MAAM,CAACC,cAAc,CAACI,MAAM,EAAEN,GAAG,EAAE;EAC/BQ,IAAAA,UAAU,EAAE,KAAK;EAAE;EACnBC,IAAAA,YAAY,EAAE,KAAK;EACnBF,IAAAA,KAAK,EAALA,KAAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEO,IAAMG,cAAc,GAAG,CAC1B,cAAc,EACd,SAAS,EACT,aAAa,EACb,SAAS,EACT,cAAc,EACd,SAAS,EACT,eAAe,EACf,WAAW,CACd,CAAA;EACD;EACA,IAAIC,MAAM,GAAG,EAAE,CAAC;EAChBA,MAAM,CAACC,IAAI,GAAG,UAAUC,SAAS,EAAEC,QAAQ,EAAE;EACzC;EACA,EAAA,OAAOA,QAAQ,CAAA;EACnB,CAAC,CAAA;EACD;EACA;;EAEA;EACA,SAASC,SAASA,CAACF,SAAS,EAAEC,QAAQ,EAAE;EACpC,EAAA,IAAIA,QAAQ,EAAE;EACV,IAAA,IAAID,SAAS,EAAE;EACX,MAAA,OAAOA,SAAS,CAACG,MAAM,CAACF,QAAQ,CAAC,CAAC;EACtC,KAAC,MAAM;QACH,OAAO,CAACA,QAAQ,CAAC,CAAC;EACtB,KAAA;EACJ,GAAC,MAAM;EACH,IAAA,OAAOD,SAAS,CAAA;EACpB,GAAA;EACJ,CAAA;EACAH,cAAc,CAACO,OAAO,CAAC,UAACC,IAAI,EAAK;EAC7BP,EAAAA,MAAM,CAACO,IAAI,CAAC,GAAGH,SAAS,CAAA;EAC5B,CAAC,CAAC,CAAA;EAEK,SAASI,YAAYA,CAACC,MAAM,EAAEC,KAAK,EAAE;EACxC;IACA,IAAMC,OAAO,GAAG,EAAE,CAAA;EAElB,EAAA,KAAK,IAAItB,GAAG,IAAIoB,MAAM,EAAE;EACpB;MACAG,UAAU,CAACvB,GAAG,CAAC,CAAA;EACnB,GAAA;;EAEA;EACA,EAAA,KAAK,IAAIA,IAAG,IAAIqB,KAAK,EAAE;EACnB,IAAA,IAAID,MAAM,CAACI,cAAc,CAACxB,IAAG,CAAC,EAAE;EAC5B,MAAA,SAAA;EACJ,KAAA;MACAuB,UAAU,CAACvB,IAAG,CAAC,CAAA;EACnB,GAAA;IAEA,SAASuB,UAAUA,CAACvB,GAAG,EAAE;EACrB,IAAA,IAAIa,SAAS,GAAGO,MAAM,CAACpB,GAAG,CAAC,CAAA;EAC3B,IAAA,IAAIc,QAAQ,GAAGO,KAAK,CAACrB,GAAG,CAAC,CAAA;EACzB;EACA,IAAA,IAAIW,MAAM,CAACX,GAAG,CAAC,EAAE;EACb;EACAsB,MAAAA,OAAO,CAACtB,GAAG,CAAC,GAAGW,MAAM,CAACX,GAAG,CAAC,CAACa,SAAS,EAAEC,QAAQ,CAAC,CAAA;EACnD,KAAC,MAAM;QACH,IAAInB,QAAQ,CAACkB,SAAS,CAAC,IAAIlB,QAAQ,CAACmB,QAAQ,CAAC,EAAE;UAC3CQ,OAAO,CAACtB,GAAG,CAAC,GAAAyB,cAAA,CAAAA,cAAA,CAAQZ,EAAAA,EAAAA,SAAS,CAAKC,EAAAA,QAAQ,CAAE,CAAA;EAChD,OAAC,MAAM;EACH;EACAQ,QAAAA,OAAO,CAACtB,GAAG,CAAC,GAAGqB,KAAK,CAACrB,GAAG,CAAC,IAAIoB,MAAM,CAACpB,GAAG,CAAC,CAAA;EAC5C,OAAA;EACJ,KAAA;EACJ,GAAA;EAEA,EAAA,OAAOsB,OAAO,CAAA;EAClB,CAAA;EAEA,IAAII,SAAS,GAAG,EAAE,CAAA;EAClB,IAAIC,SAAO,GAAG,KAAK,CAAA;EAEnB,SAASC,cAAcA,GAAG;EACtBF,EAAAA,SAAS,CAACT,OAAO,CAAC,UAACY,EAAE,EAAA;MAAA,OAAKA,EAAE,EAAE,CAAA;EAAA,GAAA,CAAC,CAAC;IAChCF,SAAO,GAAG,KAAK,CAAC;EAChBD,EAAAA,SAAS,GAAG,EAAE,CAAA;EAClB,CAAA;EAEA,SAASI,KAAKA,CAACF,cAAc,EAAE;EAC3B,EAAA,IAAIG,OAAO,GAAG,SAAAA,OAAA,GAAM,EAAE,CAAA;EACtB,EAAA,IAAIC,OAAO,EAAE;MACTD,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACN,cAAc,CAAC,CAAA;OACzC,CAAA;KACJ,MAAM,IAAIO,gBAAgB,EAAE;EACzB,IAAA,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC,CAAA;EACzC,IAAA,IAAIC,OAAO,GAAG,IAAIJ,gBAAgB,CAACP,cAAc,CAAC,CAAA;EAClDW,IAAAA,OAAO,CAACA,OAAO,CAACH,QAAQ,EAAE;EACtBI,MAAAA,aAAa,EAAE,IAAA;EACnB,KAAC,CAAC,CAAA;MACFT,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZK,QAAQ,CAACK,WAAW,GAAG,CAAC,CAAA;OAC3B,CAAA;EACD;KACH,MAAM,IAAIC,YAAY,EAAE;MACrBX,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZW,YAAY,CAACd,cAAc,CAAC,CAAA;OAC/B,CAAA;EACL,GAAC,MAAM;MACHG,OAAO,GAAG,SAAAA,OAAAA,GAAM;QACZY,UAAU,CAACf,cAAc,CAAC,CAAA;OAC7B,CAAA;EACL,GAAA;EACAG,EAAAA,OAAO,EAAE,CAAA;EACb,CAAA;EAEO,SAASa,QAAQA,CAACf,EAAE,EAAE;EACzB;EACAH,EAAAA,SAAS,CAACmB,IAAI,CAAChB,EAAE,CAAC,CAAA;IAClB,IAAI,CAACF,SAAO,EAAE;MACVG,KAAK,CAACF,cAAc,CAAC,CAAC;EACtBD,IAAAA,SAAO,GAAG,IAAI,CAAA;EAClB,GAAA;EACJ;;EC9IO,SAASmB,aAAaA,CAACC,GAAG,EAAE;EAC/BA,EAAAA,GAAG,CAACzB,OAAO,GAAG,EAAE,CAAC;EACjByB,EAAAA,GAAG,CAACC,KAAK,GAAG,UAAU1B,OAAO,EAAE;EAC3B;MACA,IAAI,CAACA,OAAO,GAAGH,YAAY,CAAC,IAAI,CAACG,OAAO,EAAEA,OAAO,CAAC,CAAA;EAClD,IAAA,OAAO,IAAI,CAAA;KACd,CAAA;EACL;;ECTA,IAAM2B,YAAY,GAAG,0BAA0B,CAAC;;EAEhD,SAASC,QAAQA,CAACC,KAAK,EAAE;IACrB,IAAIC,GAAG,GAAG,EAAE,CAAA;IAAA,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GAC2B;EACnC,IAAA,IAAIC,IAAI,GAAGH,KAAK,CAACI,CAAC,CAAC,CAAA;EACnB,IAAA,IAAID,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;QACvB,IAAIC,GAAG,GAAG,EAAE,CAAA;EACZH,MAAAA,IAAI,CAAC/C,KAAK,CAACmD,KAAK,CAAC,GAAG,CAAC,CAACzC,OAAO,CAAC,UAAC0C,IAAI,EAAK;EACpC,QAAA,IAAAC,WAAA,GAAmBD,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC;YAAAG,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7B5D,UAAAA,GAAG,GAAA6D,YAAA,CAAA,CAAA,CAAA;EAAEtD,UAAAA,KAAK,GAAAsD,YAAA,CAAA,CAAA,CAAA,CAAA;EACfJ,QAAAA,GAAG,CAACzD,GAAG,CAAC,GAAGO,KAAK,CAAA;EACpB,OAAC,CAAC,CAAA;QACF+C,IAAI,CAAC/C,KAAK,GAAGkD,GAAG,CAAA;EACpB,KAAA;EACAL,IAAAA,GAAG,OAAApC,MAAA,CAAOsC,IAAI,CAACE,IAAI,EAAAxC,GAAAA,CAAAA,CAAAA,MAAA,CAAI+C,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC/C,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;KACvD,CAAA;EAXD,EAAA,KAAK,IAAIgD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACc,MAAM,EAAEV,CAAC,EAAE,EAAA;MAAAF,KAAA,EAAA,CAAA;EAAA,GAAA;IAYrC,OAAArC,GAAAA,CAAAA,MAAA,CAAWoC,GAAG,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,CAAA;EAEA,SAASC,GAAGA,CAACC,EAAE,EAAE;EACb,EAAA,IAAIA,EAAE,CAACC,IAAI,IAAI,CAAC,EAAE;EACd;EACA,IAAA,OAAOC,QAAQ,CAACF,EAAE,CAAC,CAAC;EACxB,GAAC,MAAM;EACH,IAAA,IAAIG,IAAI,GAAGH,EAAE,CAACG,IAAI,CAAA;EAClB;EACA,IAAA,IAAI,CAACtB,YAAY,CAACuB,IAAI,CAACD,IAAI,CAAC,EAAE;QAC1B,OAAAvD,MAAAA,CAAAA,MAAA,CAAcuD,IAAI,EAAA,IAAA,CAAA,CAAA;EACtB,KAAC,MAAM;QACH,IAAIE,MAAM,GAAG,EAAE,CAAC;EAChB,MAAA,IAAIC,SAAS,GAAIzB,YAAY,CAACyB,SAAS,GAAG,CAAE,CAAC;QAC7C,IAAIC,KAAK,EAAEC,KAAK,CAAC;QACjB,OAAQD,KAAK,GAAG1B,YAAY,CAAC4B,IAAI,CAACN,IAAI,CAAC,EAAG;EACtCK,QAAAA,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC;UACpB,IAAIA,KAAK,GAAGF,SAAS,EAAE;EACnBD,UAAAA,MAAM,CAAC5B,IAAI,CAACkB,IAAI,CAACC,SAAS,CAACO,IAAI,CAACL,KAAK,CAACQ,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC7D,SAAA;EACAH,QAAAA,MAAM,CAAC5B,IAAI,CAAA7B,KAAAA,CAAAA,MAAA,CAAO2D,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE,MAAG,CAAC,CAAA;UACrCJ,SAAS,GAAGE,KAAK,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACV,MAAM,CAAA;EACvC,OAAA;EACA,MAAA,IAAIS,SAAS,GAAGH,IAAI,CAACN,MAAM,EAAE;EACzBQ,QAAAA,MAAM,CAAC5B,IAAI,CAACkB,IAAI,CAACC,SAAS,CAACO,IAAI,CAACL,KAAK,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,OAAA;EACA,MAAA,OAAA,KAAA,CAAA1D,MAAA,CAAayD,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EACjC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,SAASC,WAAWA,CAACZ,EAAE,EAAE;EACrB,EAAA,IAAIa,QAAQ,GAAGb,EAAE,CAACa,QAAQ,CAAC;EAC3B,EAAA,IAAIA,QAAQ,EAAE;EACV,IAAA,OAAOA,QAAQ,CAACC,GAAG,CAAC,UAACC,CAAC,EAAA;QAAA,OAAKhB,GAAG,CAACgB,CAAC,CAAC,CAAA;EAAA,KAAA,CAAC,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAA;EAChD,GAAA;EACA,EAAA,OAAO,KAAK,CAAA;EAChB,CAAA;EAEO,SAAST,QAAQA,CAACF,EAAE,EAAE;EACzB,EAAA,IAAIa,QAAQ,GAAGD,WAAW,CAACZ,EAAE,CAAC,CAAA;EAC9B,EAAA,IAAIgB,IAAI,GAAA,MAAA,CAAApE,MAAA,CAAUoD,EAAE,CAACiB,GAAG,EAAArE,IAAAA,CAAAA,CAAAA,MAAA,CACpBoD,EAAE,CAACjB,KAAK,CAACc,MAAM,GAAGf,QAAQ,CAACkB,EAAE,CAACjB,KAAK,CAAC,GAAG,WAAW,CAAAnC,CAAAA,MAAA,CACnDiE,QAAQ,OAAAjE,MAAA,CAAOiE,QAAQ,CAAA,GAAK,EAAE,EAAG,GAAA,CAAA,CAAA;EACpC,EAAA,OAAOG,IAAI,CAAA;EACf;;EC9DA,IAAME,MAAM,iCAAiC,CAAC;EAC9C,IAAMC,YAAY,GAAAvE,MAAAA,CAAAA,MAAA,CAAUsE,MAAM,WAAAtE,MAAA,CAAQsE,MAAM,EAAA,GAAA,CAAG,CAAC;EACpD,IAAME,YAAY,GAAG,IAAIC,MAAM,CAAA,IAAA,CAAAzE,MAAA,CAAMuE,YAAY,CAAE,CAAC,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAID,MAAM,CAAA,OAAA,CAAAzE,MAAA,CAASuE,YAAY,EAAQ,QAAA,CAAA,CAAC,CAAC;EACxD;EACA,IAAMI,SAAS,GACX,2EAA2E,CAAC;EAChF,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAG5B,SAASC,SAASA,CAACC,IAAI,EAAE;EAC5B,EAAA,SAASC,gBAAgBA,CAACC,OAAO,EAAE7C,KAAK,EAAE;MACtC,OAAO;EACHkC,MAAAA,GAAG,EAAEW,OAAO;EAAE;EACd3B,MAAAA,IAAI,EAAE,CAAC;EAAE;EACTY,MAAAA,QAAQ,EAAE,EAAE;EAAE;EACd9B,MAAAA,KAAK,EAALA,KAAK;EAAE;QACP/B,MAAM,EAAE,IAAI;OACf,CAAA;EACL,GAAA;;EAEA,EAAA,IAAI6E,IAAI,CAAA;EACR,EAAA,IAAIC,aAAa,CAAA;IACjB,IAAIC,KAAK,GAAG,EAAE,CAAA;;EAEd;EACA,EAAA,SAASC,KAAKA,CAACJ,OAAO,EAAE7C,KAAK,EAAE;EAC3B,IAAA,IAAIkD,OAAO,GAAGN,gBAAgB,CAACC,OAAO,EAAE7C,KAAK,CAAC,CAAA;MAC9C,IAAI,CAAC8C,IAAI,EAAE;EACPA,MAAAA,IAAI,GAAGI,OAAO,CAAA;EAClB,KAAA;MACAH,aAAa,GAAGG,OAAO,CAAC;EACxBF,IAAAA,KAAK,CAACtD,IAAI,CAACwD,OAAO,CAAC,CAAA;EACvB,GAAA;;EAEA;IACA,SAASC,GAAGA,CAACN,OAAO,EAAE;EAClB,IAAA,IAAIO,IAAI,GAAGJ,KAAK,CAACK,GAAG,EAAE,CAAA;EACtB,IAAA,IAAID,IAAI,CAAClB,GAAG,KAAKW,OAAO,EAAE;EACtB,MAAA,MAAM,IAAIS,KAAK,CAAC,MAAM,CAAC,CAAA;EAC3B,KAAA;MACAP,aAAa,GAAGC,KAAK,CAACA,KAAK,CAAClC,MAAM,GAAG,CAAC,CAAC,CAAA;EACvC,IAAA,IAAIiC,aAAa,EAAE;QACfK,IAAI,CAACnF,MAAM,GAAG8E,aAAa,CAAA;EAC3BA,MAAAA,aAAa,CAACjB,QAAQ,CAACpC,IAAI,CAAC0D,IAAI,CAAC,CAAA;EACrC,KAAA;EACJ,GAAA;IAEA,SAASG,MAAMA,CAACnC,IAAI,EAAE;MAClBA,IAAI,GAAGA,IAAI,CAACoC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;EAC9B,IAAA,IAAIpC,IAAI,EAAE;EACN2B,MAAAA,aAAa,CAACjB,QAAQ,CAACpC,IAAI,CAAC;EACxBwB,QAAAA,IAAI,EAAE,CAAC;EACPE,QAAAA,IAAI,EAAJA,IAAAA;EACJ,OAAC,CAAC,CAAA;EACN,KAAA;EACJ,GAAA;;EAEA;IACA,SAASqC,OAAOA,CAACC,CAAC,EAAE;EAChBf,IAAAA,IAAI,GAAGA,IAAI,CAACgB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC5B,GAAA;EACA;IACA,SAASE,aAAaA,GAAG;EACrB,IAAA,IAAMX,KAAK,GAAGN,IAAI,CAACnB,KAAK,CAACa,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIY,KAAK,EAAE;EACP,MAAA,IAAMzB,KAAK,GAAG;EACVqB,QAAAA,OAAO,EAAEI,KAAK,CAAC,CAAC,CAAC;EACjBjD,QAAAA,KAAK,EAAE,EAAA;SACV,CAAA;EACD;EACAyD,MAAAA,OAAO,CAACR,KAAK,CAAC,CAAC,CAAC,CAACnC,MAAM,CAAC,CAAA;;EAExB;EACA,MAAA,IAAIqC,IAAG,CAAA;EACP,MAAA,IAAIhD,IAAI,CAAA;QACR,OACI,EAAEgD,IAAG,GAAGR,IAAI,CAACnB,KAAK,CAACiB,aAAa,CAAC,CAAC,KACjCtC,IAAI,GAAGwC,IAAI,CAACnB,KAAK,CAACgB,SAAS,CAAC,CAAC,EAChC;EACEhB,QAAAA,KAAK,CAACxB,KAAK,CAACN,IAAI,CAAC;EACbW,UAAAA,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC;EACb/C,UAAAA,KAAK,EAAE+C,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EACvC,SAAC,CAAC,CAAA;EACFsD,QAAAA,OAAO,CAACtD,IAAI,CAAC,CAAC,CAAC,CAACW,MAAM,CAAC,CAAA;EAC3B,OAAA;EACA,MAAA,IAAIqC,IAAG,EAAE;EACLM,QAAAA,OAAO,CAACN,IAAG,CAAC,CAAC,CAAC,CAACrC,MAAM,CAAC,CAAA;EAC1B,OAAA;EACA,MAAA,OAAOU,KAAK,CAAA;EAChB,KAAA;EACA,IAAA,OAAO,KAAK,CAAC;EACjB,GAAA;EACA;EACA,EAAA,OAAOmB,IAAI,EAAE;EACT,IAAA,IAAIkB,OAAO,GAAGlB,IAAI,CAACmB,OAAO,CAAC,GAAG,CAAC,CAAA;MAC/B,IAAID,OAAO,IAAI,CAAC,EAAE;EACd;EACA,MAAA,IAAME,aAAa,GAAGH,aAAa,EAAE,CAAA;EACrC,MAAA,IAAIG,aAAa,EAAE;UACfd,KAAK,CAACc,aAAa,CAAClB,OAAO,EAAEkB,aAAa,CAAC/D,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAMgE,WAAW,GAAGrB,IAAI,CAACnB,KAAK,CAACe,MAAM,CAAC,CAAA;EACtC,MAAA,IAAIyB,WAAW,EAAE;EACbb,QAAAA,GAAG,CAACa,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnBP,QAAAA,OAAO,CAACO,WAAW,CAAC,CAAC,CAAC,CAAClD,MAAM,CAAC,CAAA;EAC9B,QAAA,SAAA;EACJ,OAAA;EACJ,KAAA;EACA;EACA,IAAA,IAAIM,IAAI,GAAA,KAAA,CAAA,CAAA;MACR,IAAIyC,OAAO,GAAG,CAAC,EAAE;QACbzC,IAAI,GAAGuB,IAAI,CAACgB,SAAS,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAA;EACrC,KAAA;EACA,IAAA,IAAIzC,IAAI,EAAE;QACNmC,MAAM,CAACnC,IAAI,CAAC,CAAA;EACZqC,MAAAA,OAAO,CAACrC,IAAI,CAACN,MAAM,CAAC,CAAA;EACxB,KAAA;EACJ,GAAA;EAEA,EAAA,OAAOgC,IAAI,CAAA;EACf;;EC3HA;EAKO,SAASmB,kBAAkBA,CAACC,QAAQ,EAAE;EACzC;EACA,EAAA,IAAIC,GAAG,GAAGzB,SAAS,CAACwB,QAAQ,CAAC,CAAA;EAC7B;EACA;EACA,EAAA,IAAIjC,IAAI,GAAGd,QAAQ,CAACgD,GAAG,CAAC,CAAA;EACxB;IACA,IAAIC,MAAM,GAAG,IAAIC,QAAQ,sBAAAxG,MAAA,CAAsBoE,IAAI,EAAA,GAAA,CAAG,CAAC,CAAA;EACvD,EAAA,OAAOmC,MAAM,CAAA;EACjB;;ECdA,IAAIE,IAAE,GAAG,CAAC,CAAA;EAAA,IACJC,GAAG,gBAAA,YAAA;EACL,EAAA,SAAAA,MAAc;EAAAC,IAAAA,eAAA,OAAAD,GAAA,CAAA,CAAA;EACV,IAAA,IAAI,CAACE,IAAI,GAAG,EAAE,CAAC;EACf,IAAA,IAAI,CAACH,EAAE,GAAGA,IAAE,EAAE,CAAA;EAClB,GAAA;EAACI,EAAAA,YAAA,CAAAH,GAAA,EAAA,CAAA;MAAA1H,GAAA,EAAA,QAAA;MAAAO,KAAA,EACD,SAAAuH,MAAAA,GAAS;EACLJ,MAAAA,GAAG,CAACpH,MAAM,CAACyH,MAAM,CAAC,IAAI,CAAC,CAAC;EAC5B,KAAA;EAAC,GAAA,EAAA;MAAA/H,GAAA,EAAA,QAAA;EAAAO,IAAAA,KAAA,EACD,SAAAyH,MAAOC,CAAAA,OAAO,EAAE;EACZ,MAAA,IAAI,CAACL,IAAI,CAAC/E,IAAI,CAACoF,OAAO,CAAC,CAAA;EAC3B,KAAA;EAAC,GAAA,EAAA;MAAAjI,GAAA,EAAA,QAAA;MAAAO,KAAA,EACD,SAAA2H,MAAAA,GAAS;EACL,MAAA,IAAI,CAACN,IAAI,CAAC3G,OAAO,CAAC,UAACgH,OAAO,EAAA;EAAA,QAAA,OAAKA,OAAO,CAACE,MAAM,EAAE,CAAA;SAAC,CAAA,CAAA;EACpD,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAT,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGLA,GAAG,CAACpH,MAAM,GAAG,IAAI,CAAA;EACV,SAAS8H,UAAUA,CAACH,OAAO,EAAE;IAChCP,GAAG,CAACpH,MAAM,GAAG2H,OAAO,CAAA;EACxB,CAAA;EAEO,SAASI,SAASA,GAAG;IACxBX,GAAG,CAACpH,MAAM,GAAG,IAAI,CAAA;EACrB,CAAA;;EAIA;EACA;EACA;;EC5BA,IAAIgI,KAAK,GAAG,EAAE,CAAC;EACf,IAAIC,GAAG,GAAG,EAAE,CAAA;EACZ,IAAI5G,OAAO,GAAG,KAAK,CAAA;EAEnB,SAAS6G,mBAAmBA,GAAG;EAC3BF,EAAAA,KAAK,CAACrH,OAAO,CAAC,UAACgH,OAAO,EAAK;MACvBA,OAAO,CAACQ,GAAG,EAAE,CAAA;MACb,IAAIR,OAAO,CAACS,SAAS,EAAE;QACnBT,OAAO,CAACpG,EAAE,EAAE,CAAA;EAChB,KAAA;EACJ,GAAC,CAAC,CAAA;IACFyG,KAAK,GAAG,EAAE,CAAC;IACXC,GAAG,GAAG,EAAE,CAAC;EACT5G,EAAAA,OAAO,GAAG,KAAK,CAAA;EACnB,CAAA;EAEO,SAASgH,YAAYA,CAACV,OAAO,EAAE;EAClC,EAAA,IAAMR,EAAE,GAAGQ,OAAO,CAACR,EAAE,CAAA;EACrB,EAAA,IAAIc,GAAG,CAACd,EAAE,CAAC,IAAI,IAAI,EAAE;EACjBa,IAAAA,KAAK,CAACzF,IAAI,CAACoF,OAAO,CAAC,CAAC;EACpBM,IAAAA,GAAG,CAACd,EAAE,CAAC,GAAG,IAAI,CAAA;MAEd,IAAI,CAAC9F,OAAO,EAAE;EACV;EACA;QACAiB,QAAQ,CAAC4F,mBAAmB,CAAC,CAAA;EAC7B7G,MAAAA,OAAO,GAAG,IAAI,CAAA;EAClB,KAAA;EACJ,GAAA;EACJ;;EC5BA,IAAI8F,EAAE,GAAG,CAAC,CAAA;EAAA,IACJmB,OAAO,gBAAA,YAAA;EACT;EACA;IACA,SAAAA,OAAAA,CAAY9I,EAAE,EAAE+I,QAAQ,EAAEhH,EAAE,EAAEP,OAAO,EAAE;EAAAqG,IAAAA,eAAA,OAAAiB,OAAA,CAAA,CAAA;MACnC,IAAI,CAAC9I,EAAE,GAAGA,EAAE,CAAA;MACZ,IAAI,CAAC+I,QAAQ,GAAGA,QAAQ,CAAA;MACxB,IAAI,CAAChH,EAAE,GAAGA,EAAE,CAAA;MACZ,IAAI,CAACP,OAAO,GAAGA,OAAO,CAAA;EACtB,IAAA,IAAI,CAACoH,SAAS,GAAG,OAAOpH,OAAO,IAAI,SAAS,CAAC;EAC7C,IAAA,IAAI,CAACwH,IAAI,GAAGxH,OAAO,CAACwH,IAAI,CAAC;EACzB,IAAA,IAAI,CAACrB,EAAE,GAAGA,EAAE,EAAE,CAAC;EACf,IAAA,IAAI,CAACsB,IAAI,GAAG,EAAE,CAAC;EACf,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAA;EAEvB,IAAA,IAAI,OAAOJ,QAAQ,IAAI,UAAU,EAAE;QAC/B,IAAI,CAACK,MAAM,GAAGL,QAAQ,CAAA;EAC1B,KAAC,MAAM;EACH;QACA,IAAI,CAACK,MAAM,GAAG,YAAY;EACtB;EACA;UACA,IAAIC,IAAI,GAAGN,QAAQ,CAACnF,KAAK,CAAC,GAAG,CAAC,CAAC;UAC/B,IAAID,GAAG,GAAG3D,EAAE,CAAA;EACZ,QAAA,KAAK,IAAIyD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4F,IAAI,CAAClF,MAAM,EAAEV,CAAC,EAAE,EAAE;EAClCE,UAAAA,GAAG,GAAGA,GAAG,CAAC0F,IAAI,CAAC5F,CAAC,CAAC,CAAC,CAAA;EACtB,SAAA;EACA,QAAA,OAAOE,GAAG,CAAA;SACb,CAAA;EACL,KAAA;EACA;MACA,IAAI,CAAClD,KAAK,GAAG,IAAI,CAACJ,GAAG,EAAE,CAAC;EAC5B,GAAA;EAAC0H,EAAAA,YAAA,CAAAe,OAAA,EAAA,CAAA;MAAA5I,GAAA,EAAA,QAAA;EAAAO,IAAAA,KAAA,EACD,SAAAwH,MAAOqB,CAAAA,GAAG,EAAE;EACR,MAAA,IAAI3B,EAAE,GAAG2B,GAAG,CAAC3B,EAAE,CAAA;QACf,IAAI,CAAC,IAAI,CAACuB,MAAM,CAACT,GAAG,CAACd,EAAE,CAAC,EAAE;EACtB,QAAA,IAAI,CAACsB,IAAI,CAAClG,IAAI,CAACuG,GAAG,CAAC,CAAA;EACnB,QAAA,IAAI,CAACJ,MAAM,CAACK,GAAG,CAAC5B,EAAE,CAAC,CAAA;EACnB2B,QAAAA,GAAG,CAACpB,MAAM,CAAC,IAAI,CAAC,CAAA;EACpB,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAAhI,GAAA,EAAA,KAAA;MAAAO,KAAA,EACD,SAAAJ,GAAAA,GAAM;QACFiI,UAAU,CAAC,IAAI,CAAC,CAAC;EACjB,MAAA,IAAIkB,MAAM,GAAG,IAAI,CAACJ,MAAM,EAAE,CAAC;QAC3B,IAAI,CAACA,MAAM,EAAE,CAAA;EACbb,MAAAA,SAAS,EAAE,CAAA;EACX,MAAA,OAAOiB,MAAM,CAAA;EACjB,KAAA;EAAC,GAAA,EAAA;MAAAtJ,GAAA,EAAA,KAAA;MAAAO,KAAA,EACD,SAAAkI,GAAAA,GAAM;EACF,MAAA,IAAIpI,QAAQ,GAAG,IAAI,CAACF,GAAG,EAAE,CAAA;EACzB,MAAA,IAAIoJ,QAAQ,GAAG,IAAI,CAAChJ,KAAK,CAAA;EACzB,MAAA,IAAI,CAACA,KAAK,GAAGF,QAAQ,CAAC;QACtB,IAAI,IAAI,CAACyI,IAAI,EAAE;EACX,QAAA,IAAI,CAACjH,EAAE,CAAC2H,IAAI,CAAC,IAAI,CAAC1J,EAAE,EAAEO,QAAQ,EAAEkJ,QAAQ,CAAC,CAAA;EAC7C,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAAvJ,GAAA,EAAA,QAAA;MAAAO,KAAA,EACD,SAAA4H,MAAAA,GAAS;EACL;QACAQ,YAAY,CAAC,IAAI,CAAC,CAAA;EACtB,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAC,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;;EAKL;;EAEA;EACA;EACA;EACA;;ECxEA;EACA;EACA;EACO,SAASa,KAAKA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC,EAAA,IAAID,QAAQ,CAACE,QAAQ,IAAI,CAAC,EAAE;EACxB;EACA,IAAA,IAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC;EACtC,IAAA,IAAIC,GAAG,GAAGC,SAAS,CAACL,KAAK,CAAC,CAAC;MAC3BE,SAAS,CAACI,YAAY,CAACF,GAAG,EAAEL,QAAQ,CAACQ,WAAW,CAAC,CAAA;EAEjDL,IAAAA,SAAS,CAACM,WAAW,CAACT,QAAQ,CAAC,CAAA;EAE/B,IAAA,OAAOK,GAAG,CAAA;EACd,GAAA;EACJ,CAAA;EAEA,SAASC,SAASA,CAACL,KAAK,EAAE;EACtB,EAAA,IAAMtE,GAAG,GAA+BsE,KAAK,CAAvCtE,GAAG,CAAA;MAA+BsE,KAAK,CAAlC/I,IAAI,CAAA;UAAEqE,QAAQ,GAAe0E,KAAK,CAA5B1E,QAAQ,CAAA;MAAEV,IAAI,GAASoF,KAAK,CAAlBpF,IAAI,CAAA;MAASoF,KAAK,CAAZ7J,GAAE;EACnC,EAAA,IAAI,OAAOuF,GAAG,KAAK,QAAQ,EAAE;EACzB;MACAsE,KAAK,CAACvF,EAAE,GAAG/B,QAAQ,CAAC+H,aAAa,CAAC/E,GAAG,CAAC,CAAC;;EAEvC;MACAgF,gBAAgB,CAACV,KAAK,CAAC,CAAA;EAEvB1E,IAAAA,QAAQ,CAAChE,OAAO,CAAC,UAACI,KAAK,EAAK;QACxBsI,KAAK,CAACvF,EAAE,CAACkG,WAAW,CAACN,SAAS,CAAC3I,KAAK,CAAC,CAAC,CAAA;EAC1C,KAAC,CAAC,CAAA;EACN,GAAC,MAAM;MACHsI,KAAK,CAACvF,EAAE,GAAG/B,QAAQ,CAACC,cAAc,CAACiC,IAAI,CAAC,CAAA;EAC5C,GAAA;IACA,OAAOoF,KAAK,CAACvF,EAAE,CAAA;EACnB,CAAA;EAEA,SAASiG,gBAAgBA,CAACV,KAAK,EAAE;EAC7B,EAAA,IAAIvF,EAAE,GAAGuF,KAAK,CAACvF,EAAE,CAAA;EACjB,EAAA,IAAImG,QAAQ,GAAGZ,KAAK,CAAC/I,IAAI,IAAI,EAAE,CAAA;EAC/B,EAAA,KAAK,IAAIZ,GAAG,IAAIuK,QAAQ,EAAE;MACtB,IAAIvK,GAAG,IAAI,OAAO,EAAE;EAChB,MAAA,KAAK,IAAIwK,SAAS,IAAID,QAAQ,CAACE,KAAK,EAAE;UAClCrG,EAAE,CAACqG,KAAK,CAACD,SAAS,CAAC,GAAGD,QAAQ,CAACE,KAAK,CAACD,SAAS,CAAC,CAAA;EACnD,OAAA;EACJ,KAAC,MAAM,IAAIxK,GAAG,IAAI,OAAO,EAAE;EACvBoE,MAAAA,EAAE,CAACsG,SAAS,GAAGtG,EAAE,CAAM,OAAA,CAAA,CAAA;EAC3B,KAAC,MAAM;QACHA,EAAE,CAACuG,YAAY,CAAC3K,GAAG,EAAEuK,QAAQ,CAACvK,GAAG,CAAC,CAAC,CAAA;EACvC,KAAA;EACJ,GAAA;EACJ;;EC7CO,SAAS4K,cAAcA,CAAC7H,GAAG,EAAE;EAChCA,EAAAA,GAAG,CAAC8H,SAAS,CAACC,OAAO,GAAG,UAAUnB,KAAK,EAAE;MACrC,IAAM7J,EAAE,GAAG,IAAI,CAAA;EACf;MACAA,EAAE,CAACiL,GAAG,GAAGtB,KAAK,CAAC3J,EAAE,CAACiL,GAAG,EAAEpB,KAAK,CAAC,CAAA;KAChC,CAAA;EACL,CAAA;EAEO,SAASqB,cAAcA,CAAClL,EAAE,EAAEsE,EAAE,EAAE;EACnC;EACA;EACA6G,EAAAA,QAAQ,CAACnL,EAAE,EAAE,aAAa,CAAC,CAAA;EAE3B,EAAA,IAAIoL,eAAe,GAAG,SAAlBA,eAAeA,GAAS;MACxBpL,EAAE,CAACgL,OAAO,CAAChL,EAAE,CAACqL,OAAO,EAAE,CAAC,CAAA;KAC3B,CAAA;EACD;EACA,EAAA,IAAIvC,OAAO,CACP9I,EAAE,EACFoL,eAAe,EACf,YAAM;EACFD,IAAAA,QAAQ,CAACnL,EAAE,EAAE,SAAS,CAAC,CAAA;KAC1B,EACD,IACJ,CAAC,CAAA;EAEDmL,EAAAA,QAAQ,CAACnL,EAAE,EAAE,SAAS,CAAC,CAAA;EAC3B,CAAA;EAEO,SAASmL,QAAQA,CAACnL,EAAE,EAAEoB,IAAI,EAAE;EAC/B,EAAA,IAAIkK,QAAQ,GAAGtL,EAAE,CAACuL,QAAQ,CAACnK,IAAI,CAAC,CAAA;EAChC,EAAA,IAAIkK,QAAQ,EAAE;EACV,IAAA,KAAK,IAAI7H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6H,QAAQ,CAACnH,MAAM,EAAEV,CAAC,EAAE,EAAE;EACtC6H,MAAAA,QAAQ,CAAC7H,CAAC,CAAC,CAACiG,IAAI,CAAC1J,EAAE,CAAC,CAAA;EACxB,KAAA;EACJ,GAAA;EACJ;;ECvCA;EACA,IAAIwL,iBAAiB,GAAGC,KAAK,CAACV,SAAS,CAAA;EAChC,IAAIW,YAAY,GAAGvL,MAAM,CAACwL,MAAM,CAACH,iBAAiB,CAAC,CAAA;EAE1D,IAAII,OAAO,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;EAE9EA,OAAO,CAACzK,OAAO,CAAC,UAAC0K,MAAM,EAAK;EACxB;EACAH,EAAAA,YAAY,CAACG,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAA7H,MAAA,EAAN8H,IAAI,GAAAR,IAAAA,KAAA,CAAAM,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;EACpC;EACA;EACA,IAAA,CAAAJ,qBAAA,GAAAN,iBAAiB,CAACK,MAAM,CAAC,EAACnC,IAAI,CAAAyC,KAAA,CAAAL,qBAAA,EAAC,CAAA,IAAI,EAAA5K,MAAA,CAAK+K,IAAI,CAAC,CAAA,CAAA;EAC7C,IAAA,IAAIG,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAC;EACrB,IAAA,QAAQT,MAAM;EACV,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;UACVO,QAAQ,GAAGH,IAAI,CAAC;EAChB,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EACTG,QAAAA,QAAQ,GAAGH,IAAI,CAAC7H,KAAK,CAAC,CAAC,CAAC,CAAA;EAGhC,KAAA;EACA;EACA,IAAA,IAAIgI,QAAQ,EAAEC,EAAE,CAACE,YAAY,CAACH,QAAQ,CAAC,CAAA;EACvCC,IAAAA,EAAE,CAAC/C,GAAG,CAAClB,MAAM,EAAE,CAAA;KAClB,CAAA;EACL,CAAC,CAAC;;EC1BqB,IAEjBoE,QAAQ,gBAAA,YAAA;IACV,SAAAA,QAAAA,CAAY1L,IAAI,EAAE;EAAA+G,IAAAA,eAAA,OAAA2E,QAAA,CAAA,CAAA;EACd,IAAA,IAAI,CAAClD,GAAG,GAAG,IAAI1B,GAAG,EAAE,CAAC;EACrB;EACAxH,IAAAA,cAAc,CAACU,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;;EAEpC;EACA,IAAA,IAAI2K,KAAK,CAACgB,OAAO,CAAC3L,IAAI,CAAC,EAAE;EACrB;QACAA,IAAI,CAAC4L,SAAS,GAAGhB,YAAY,CAAA;EAC7B,MAAA,IAAI,CAACa,YAAY,CAACzL,IAAI,CAAC,CAAA;EAC3B,KAAC,MAAM;EACH,MAAA,IAAI,CAAC6L,IAAI,CAAC7L,IAAI,CAAC,CAAA;EACnB,KAAA;EACJ,GAAA;EAACiH,EAAAA,YAAA,CAAAyE,QAAA,EAAA,CAAA;MAAAtM,GAAA,EAAA,cAAA;EAAAO,IAAAA,KAAA,EACD,SAAA8L,YAAazL,CAAAA,IAAI,EAAE;EACf;EACAA,MAAAA,IAAI,CAACK,OAAO,CAAC,UAAC0C,IAAI,EAAA;UAAA,OAAKpB,OAAO,CAACoB,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACzC,KAAA;EAAC,GAAA,EAAA;MAAA3D,GAAA,EAAA,MAAA;EAAAO,IAAAA,KAAA,EACD,SAAAkM,IAAK7L,CAAAA,IAAI,EAAE;QACPX,MAAM,CAACyM,IAAI,CAAC9L,IAAI,CAAC,CAACK,OAAO,CAAC,UAACjB,GAAG,EAAK;UAC/B2M,cAAc,CAAC/L,IAAI,EAAEZ,GAAG,EAAEY,IAAI,CAACZ,GAAG,CAAC,CAAC,CAAA;EACxC,OAAC,CAAC,CAAA;EACN,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAsM,QAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGL,SAASK,cAAcA,CAAC/L,IAAI,EAAEZ,GAAG,EAAEO,KAAK,EAAE;EACtC,EAAA,IAAIqM,QAAQ,GAAGrK,OAAO,CAAChC,KAAK,CAAC,CAAC;;EAE9B,EAAA,IAAI6I,GAAG,GAAG,IAAI1B,GAAG,EAAE,CAAC;;EAEpB;EACAzH,EAAAA,MAAM,CAACC,cAAc,CAACU,IAAI,EAAEZ,GAAG,EAAE;EAC7B;MACAG,GAAG,EAAA,SAAAA,MAAG;QACF,IAAIuH,GAAG,CAACpH,MAAM,EAAE;EACZ;UACA8I,GAAG,CAACtB,MAAM,EAAE,CAAA;EACZ,QAAA,IAAI8E,QAAQ,EAAE;EACV;EACAA,UAAAA,QAAQ,CAACxD,GAAG,CAACtB,MAAM,EAAE,CAAC;EAC1B,SAAA;EACJ,OAAA;;EACA,MAAA,OAAOvH,KAAK,CAAA;OACf;EACD;MACAH,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;QACV,IAAIA,QAAQ,IAAIE,KAAK,EAAE,OAAA;QACvBgC,OAAO,CAAClC,QAAQ,CAAC,CAAC;EAClBE,MAAAA,KAAK,GAAGF,QAAQ,CAAA;EAChB+I,MAAAA,GAAG,CAAClB,MAAM,EAAE,CAAC;EACjB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;;EAEO,SAAS3F,OAAOA,CAAC3B,IAAI,EAAE;EAC1B;EACA,EAAA,IAAI,CAACjB,QAAQ,CAACiB,IAAI,CAAC,EAAE;EACjB,IAAA,OAAA;EACJ,GAAA;EACA;IACA,IAAIA,IAAI,CAACwL,MAAM,EAAE;EACb,IAAA,OAAA;EACJ,GAAA;EACA,EAAA,OAAO,IAAIE,QAAQ,CAAC1L,IAAI,CAAC,CAAA;EAC7B;;ECjEO,SAASiM,SAASA,CAAC/M,EAAE,EAAE;EAC1B,EAAA,IAAMgN,IAAI,GAAGhN,EAAE,CAACuL,QAAQ,CAAA;IACxB,IAAIyB,IAAI,CAACC,KAAK,EAAE,CAEhB;IACA,IAAID,IAAI,CAACpB,OAAO,EAAE,CAElB;IACA,IAAIoB,IAAI,CAAClM,IAAI,EAAE;MACXoM,QAAQ,CAAClN,EAAE,CAAC,CAAA;EAChB,GAAA;IACA,IAAIgN,IAAI,CAACG,QAAQ,EAAE,CAEnB;IACA,IAAIH,IAAI,CAACI,KAAK,EAAE;MACZC,SAAS,CAACrN,EAAE,CAAC,CAAA;EACjB,GAAA;EACJ,CAAA;EAEA,SAASkN,QAAQA,CAAClN,EAAE,EAAE;EAClB,EAAA,IAAIc,IAAI,GAAGd,EAAE,CAACuL,QAAQ,CAACzK,IAAI,CAAA;EAC3BA,EAAAA,IAAI,GAAGd,EAAE,CAACsN,KAAK,GAAG3N,UAAU,CAACmB,IAAI,CAAC,GAAGA,IAAI,CAAC4I,IAAI,CAAC1J,EAAE,CAAC,GAAGc,IAAI,CAAA;;EAEzD;EACA,EAAA,KAAK,IAAIZ,GAAG,IAAIY,IAAI,EAAE;EAClBf,IAAAA,KAAK,CAACC,EAAE,EAAE,OAAO,EAAEE,GAAG,CAAC,CAAA;EAC3B,GAAA;;EAEA;EACAuC,EAAAA,OAAO,CAACzC,EAAE,CAACsN,KAAK,CAAC,CAAA;EACrB,CAAA;EAIA,SAASD,SAASA,CAACrN,EAAE,EAAE;EACnB,EAAA,IAAIoN,KAAK,GAAGpN,EAAE,CAACuL,QAAQ,CAAC6B,KAAK,CAAA;EAAA,EAAA,IAAA7J,KAAA,GAAA,SAAAA,KAAArD,CAAAA,GAAA,EACN;EACnB,IAAA,IAAMqN,OAAO,GAAGH,KAAK,CAAClN,GAAG,CAAC,CAAC;EAC3B,IAAA,IAAIuL,KAAK,CAACgB,OAAO,CAACc,OAAO,CAAC,EAAE;EACxB;EACAA,MAAAA,OAAO,CAACpM,OAAO,CAAC,UAACoM,OAAO,EAAK;EACzBC,QAAAA,aAAa,CAACxN,EAAE,EAAEE,GAAG,EAAEqN,OAAO,CAAC,CAAA;EACnC,OAAC,CAAC,CAAA;EACN,KAAC,MAAM;EACHC,MAAAA,aAAa,CAACxN,EAAE,EAAEE,GAAG,EAAEqN,OAAO,CAAC,CAAC;EACpC,KAAA;KACH,CAAA;IAVD,KAAK,IAAIrN,GAAG,IAAIkN,KAAK,EAAA;EAAA7J,IAAAA,KAAA,CAAArD,GAAA,CAAA,CAAA;EAAA,GAAA;EAWzB,CAAA;;EAEA;EACA,SAASsN,aAAaA,CAACxN,EAAE,EAAE+I,QAAQ,EAAEwE,OAAO,EAAE/L,OAAO,EAAE;EACnD,EAAA,IAAI1B,OAAA,CAAOyN,OAAO,CAAA,IAAI,QAAQ,EAAE;EAC5B/L,IAAAA,OAAO,GAAG+L,OAAO,CAAA;EACjBA,IAAAA,OAAO,GAAGA,OAAO,CAACA,OAAO,CAAC;EAC9B,GAAA;;EACA,EAAA,IAAI,OAAOA,OAAO,IAAI,QAAQ,EAAE;EAC5BA,IAAAA,OAAO,GAAGvN,EAAE,CAACuN,OAAO,CAAC,CAAC;EAC1B,GAAA;;IACA,OAAOvN,EAAE,CAACyN,MAAM,CAAC1E,QAAQ,EAAEwE,OAAO,EAAE/L,OAAO,CAAC,CAAA;EAChD,CAAA;EAEO,SAASkM,UAAUA,CAACzK,GAAG,EAAE;EAC5BA,EAAAA,GAAG,CAAC8H,SAAS,CAAC4C,SAAS,GAAG,UAAU5L,EAAE,EAAE;MACpCe,QAAQ,CAACf,EAAE,CAAC,CAAA;KACf,CAAA;IACDkB,GAAG,CAAC8H,SAAS,CAAC0C,MAAM,GAAG,UAAU1E,QAAQ,EAAEhH,EAAE,EAAgB;EAAA,IAAA,IAAdP,OAAO,GAAAwK,SAAA,CAAA7H,MAAA,GAAA,CAAA,IAAA6H,SAAA,CAAA,CAAA,CAAA,KAAA4B,SAAA,GAAA5B,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EACvD;EACA;EACA,IAAA,IAAIlD,OAAO,CAAC,IAAI,EAAEC,QAAQ,EAAEhH,EAAE,EAAAJ,cAAA,CAAAA,cAAA,CAAA,EAAA,EAAOH,OAAO,CAAA,EAAA,EAAA,EAAA;EAAEwH,MAAAA,IAAI,EAAE,IAAA;EAAI,KAAA,CAAE,CAAC,CAAA;MAC3D,IAAIxH,OAAO,CAACqM,SAAS,EAAE;QACnB9L,EAAE,EAAE,CAAC;EACT,KAAA;KACH,CAAA;EACL;;ECxEO,SAAS+L,SAASA,CAAC7K,GAAG,EAAE;EAC3BA,EAAAA,GAAG,CAAC8H,SAAS,CAACgD,KAAK,GAAG,UAAUvM,OAAO,EAAE;MACrC,IAAMxB,EAAE,GAAG,IAAI,CAAA;EACfA,IAAAA,EAAE,CAACuL,QAAQ,GAAGlK,YAAY,CAACrB,EAAE,CAACgO,WAAW,CAACxM,OAAO,EAAEA,OAAO,CAAC,CAAC;;EAE5D2J,IAAAA,QAAQ,CAACnL,EAAE,EAAE,cAAc,CAAC,CAAA;EAC5B;MACA+M,SAAS,CAAC/M,EAAE,CAAC,CAAA;EACbmL,IAAAA,QAAQ,CAACnL,EAAE,EAAE,SAAS,CAAC,CAAA;;EAEvB;EACA,IAAA,IAAIA,EAAE,CAACuL,QAAQ,CAACjH,EAAE,EAAE;QAChBtE,EAAE,CAACiO,MAAM,CAACjO,EAAE,CAACuL,QAAQ,CAACjH,EAAE,CAAC,CAAA;EAC7B,KAAA;KACH,CAAA;;EAED;EACArB,EAAAA,GAAG,CAAC8H,SAAS,CAACkD,MAAM,GAAG,UAAU3J,EAAE,EAAE;EACjC;MACA,IAAMtE,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAMwB,OAAO,GAAGxB,EAAE,CAACuL,QAAQ,CAAA;EAC3BjH,IAAAA,EAAE,GAAG/B,QAAQ,CAAC2L,aAAa,CAAC5J,EAAE,CAAC,CAAA;MAC/BtE,EAAE,CAACiL,GAAG,GAAG3G,EAAE,CAAA;EAEX,IAAA,IAAI,CAAC9C,OAAO,CAACiG,MAAM,EAAE;EACjB;EACA,MAAA,IAAIF,QAAQ,GAAG/F,OAAO,CAAC+F,QAAQ,CAAA;EAC/B,MAAA,IAAI,CAACA,QAAQ,IAAIjD,EAAE,EAAE;UACjBiD,QAAQ,GAAGjD,EAAE,CAAC6J,SAAS,CAAA;EAC3B,OAAA;EACA;EACA,MAAA,IAAM1G,MAAM,GAAGH,kBAAkB,CAACC,QAAQ,CAAC,CAAA;QAC3C/F,OAAO,CAACiG,MAAM,GAAGA,MAAM,CAAA;EAC3B,KAAA;EACA;EACA;;EAEA;EACAyD,IAAAA,cAAc,CAAClL,EAAM,CAAC,CAAA;KACzB,CAAA;EACL;;EC7CO,SAASoO,WAAWA,CAACnL,GAAG,EAAE;EAC7B;EACAA,EAAAA,GAAG,CAAC8H,SAAS,CAACsD,EAAE,GAAG,YAAY;EAC3B,IAAA,OAAO/D,aAAa,CAAA6B,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAjL,MAAA,CAAAuK,KAAA,CAAAV,SAAA,CAAA3G,KAAA,CAAAsF,IAAA,CAAKsC,SAAS,CAAC,CAAA,CAAA,CAAA;KAC3C,CAAA;EACD;EACA/I,EAAAA,GAAG,CAAC8H,SAAS,CAACuD,EAAE,GAAG,UAAU7J,IAAI,EAAE;EAC/B,IAAA,OAAO8J,iBAAiB,CAAC,IAAI,EAAE9J,IAAI,CAAC,CAAA;KACvC,CAAA;EACD;EACAxB,EAAAA,GAAG,CAAC8H,SAAS,CAACyD,EAAE,GAAG,UAAU5O,GAAG,EAAE;EAC9B,IAAA,IAAIE,OAAA,CAAOF,GAAG,CAAA,IAAI,QAAQ,EAAE,OAAOqE,IAAI,CAACC,SAAS,CAACtE,GAAG,CAAC,CAAA;EACtD,IAAA,OAAOA,GAAG,CAAA;KACb,CAAA;EACDqD,EAAAA,GAAG,CAAC8H,SAAS,CAACM,OAAO,GAAG,YAAY;MAChC,IAAMrL,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAIyH,MAAM,GAAGzH,EAAE,CAACuL,QAAQ,CAAC9D,MAAM,CAAC;EAChC,IAAA,IAAIoC,KAAK,GAAGpC,MAAM,CAACiC,IAAI,CAAC1J,EAAE,CAAC,CAAA;EAC3B,IAAA,OAAO6J,KAAK,CAAA;KACf,CAAA;EACL,CAAA;EAEO,SAASS,aAAaA,CAACtK,EAAE,EAAEuF,GAAG,EAA0B;EAAA,EAAA,IAAxBzE,IAAI,GAAAkL,SAAA,CAAA7H,MAAA,GAAA,CAAA,IAAA6H,SAAA,CAAA,CAAA,CAAA,KAAA4B,SAAA,GAAA5B,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAAA,KAAAD,IAAAA,IAAA,GAAAC,SAAA,CAAA7H,MAAA,EAAKgB,QAAQ,OAAAsG,KAAA,CAAAM,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAR/G,IAAAA,QAAQ,CAAA+G,IAAA,GAAAF,CAAAA,CAAAA,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,GAAA;EACzD,EAAA,OAAOrC,KAAK,CAAC7J,EAAE,EAAEuF,GAAG,EAAEzE,IAAI,EAAEA,IAAI,CAACZ,GAAG,EAAEiF,QAAQ,EAAEyI,SAAS,CAAC,CAAA;EAC9D,CAAA;EAEO,SAASW,iBAAiBA,CAACvO,EAAE,EAAEyE,IAAI,EAAE;EACxC,EAAA,OAAOoF,KAAK,CAAC7J,EAAE,EAAE4N,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEnJ,IAAI,CAAC,CAAA;EACtE,CAAA;EAEA,SAASoF,KAAKA,CAAC7J,EAAE,EAAEuF,GAAG,EAAEzE,IAAI,EAAEZ,GAAG,EAAEiF,QAAQ,EAAEV,IAAI,EAAE;IAC/C,OAAO;EACHzE,IAAAA,EAAE,EAAFA,EAAE;EACFuF,IAAAA,GAAG,EAAHA,GAAG;EACHzE,IAAAA,IAAI,EAAJA,IAAI;EACJZ,IAAAA,GAAG,EAAHA,GAAG;EACHiF,IAAAA,QAAQ,EAARA,QAAQ;EACRV,IAAAA,IAAI,EAAJA,IAAAA;EACA;KACH,CAAA;EACL;;EClCA,SAASxB,GAAGA,CAACzB,OAAO,EAAE;EAClB,EAAA,IAAI,CAACuM,KAAK,CAACvM,OAAO,CAAC,CAAC;EACxB,CAAA;;EAEA;EACAsM,SAAS,CAAC7K,GAAG,CAAC,CAAA;EACd;EACA6H,cAAc,CAAC7H,GAAG,CAAC,CAAA;EACnB;EACAmL,WAAW,CAACnL,GAAG,CAAC,CAAA;EAChByK,UAAU,CAACzK,GAAG,CAAC,CAAA;EAEfD,aAAa,CAACC,GAAG,CAAC;;;;;;;;"}