{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function'\n}\n\nexport function isObject(val) {\n    return typeof val == 'object' && val !== null\n}\n\n// 代理\nexport function proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        },\n    })\n}\n\nexport function defineProperty(target, key, value) {\n    Object.defineProperty(target, key, {\n        enumerable: false, // 不能被枚举\n        configurable: false,\n        value,\n    })\n}\n","// 拿到数组原型上的方法\nlet oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype)\n\nlet methods = ['push', 'shift', 'unshift', 'pop', 'reverse', 'sort', 'splice']\n\nmethods.forEach((method) => {\n    // 用户调用的如果是以上七个方法 会用我自己重写的，否则用原来的数组方法\n    arrayMethods[method] = function (...args) {\n        //  args 是参数列表 arr.push(1,2,3)\n        oldArrayPrototype[method].call(this, ...args)\n        let inserted\n        let ob = this.__ob__ // 根据当前数组获取到observer实例\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args // 就是新增的内容\n                break\n            case 'splice':\n                inserted = args.slice(2)\n            default:\n                break\n        }\n        // 如果有新增的内容要进行继续劫持, 我需要观测的数组里的每一项，而不是数组\n        if (inserted) ob.observeArray(inserted)\n    }\n})\n","import { defineProperty, isObject } from '../utils'\nimport { arrayMethods } from './array'\n\nclass Observer {\n    constructor(data) {\n        // 判断一个对象是否被观测过，看他有没有__ob__这个属性\n        defineProperty(data, '__ob__', this)\n\n        // 使用defineProperty重新定义属性\n        if (Array.isArray(data)) {\n            // 函数劫持\n            data.__proto__ = arrayMethods\n            this.observeArray(data)\n        } else {\n            this.walk(data)\n        }\n    }\n    observeArray(data) {\n        // 对我们数组的数组 和 数组中的对象再次劫持 递归了 [{a:1},{b:2}]\n        data.forEach((item) => observe(item))\n    }\n    walk(data) {\n        Object.keys(data).forEach((key) => {\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n\nfunction defineReactive(data, key, value) {\n    observe(value) // 本身用户默认值是对象套对象 需要递归处理\n    Object.defineProperty(data, key, {\n        get() {\n            console.log('用户获取值了')\n            return value\n        },\n        set(newValue) {\n            console.log('用户设置值了')\n            if (newValue == value) return\n            observe(newValue) // 如果用户赋值一个新对象 ，需要将这个对象进行劫持\n            value = newValue\n        },\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才观测\n    if (!isObject(data)) {\n        return\n    }\n    if (data.__ob__) {\n        return\n    }\n    return new Observer(data)\n}\n","import { observe } from './observer/index'\nimport { isFunction, proxy } from './utils'\n\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.methods) {\n        initMethods(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data\n    data = vm._data = isFunction(data) ? data.call(vm) : data\n\n    // 用户去vm.xxx => vm._data.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n\n    // 数据劫持\n    observe(vm._data)\n}\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n","import { initState } from './state'\n\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        const vm = this\n        vm.$options = options\n\n        // 对数据进行初始化\n        initState(vm)\n    }\n}\n","import { initMixin } from './init'\n\nfunction Vue(options) {\n    this._init(options) // 入口方法，做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue)\n\nexport default Vue\n"],"names":["isFunction","val","isObject","_typeof","proxy","vm","source","key","Object","defineProperty","get","set","newValue","target","value","enumerable","configurable","oldArrayPrototype","Array","prototype","arrayMethods","create","methods","forEach","method","_oldArrayPrototype$me","_len","arguments","length","args","_key","call","apply","concat","inserted","ob","__ob__","slice","observeArray","Observer","data","_classCallCheck","isArray","__proto__","walk","_createClass","item","observe","keys","defineReactive","console","log","initState","opts","$options","props","initData","computed","watch","_data","initMixin","Vue","_init","options"],"mappings":"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"}